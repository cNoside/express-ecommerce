{
  message: 'foo',
  level: 'error',
  timestamp: '14/Aug/2022:03:10:30 +0800'
}
{
  message: 'foo',
  level: 'error',
  timestamp: '14/Aug/2022:03:10:35 +0800'
}
{
  message: 'foo',
  level: 'error',
  timestamp: '14/Aug/2022:03:13:35 +0800'
}
{
  message: 'foo',
  level: 'error',
  timestamp: '14/Aug/2022:03:13:38 +0800'
}
{
  message: 'foo',
  level: 'error',
  timestamp: '14/Aug/2022:03:13:44 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:13:44 +0000] "GET /api/v1/users HTTP/1.1" 500 52\n',
  timestamp: '14/Aug/2022:03:13:44 +0800'
}
{
  message: 'foo',
  level: 'error',
  timestamp: '14/Aug/2022:03:13:57 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:13:57 +0000] "GET /api/v1/users HTTP/1.1" 500 52\n',
  timestamp: '14/Aug/2022:03:13:57 +0800'
}
{
  foo: 'bar',
  level: 'error',
  message: 'foo',
  timestamp: '14/Aug/2022:03:14:30 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:14:30 +0000] "GET /api/v1/users HTTP/1.1" 500 52\n',
  timestamp: '14/Aug/2022:03:14:30 +0800'
}
{
  request: { method: 'GET', url: '/api/v1/users', remoteAddress: '::1' },
  level: 'error',
  message: 'foo',
  timestamp: '14/Aug/2022:03:16:17 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:16:17 +0000] "GET /api/v1/users HTTP/1.1" 500 52\n',
  timestamp: '14/Aug/2022:03:16:17 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:29:50 +0000] "POST /api/v1/users HTTP/1.1" 200 17\n',
  timestamp: '14/Aug/2022:03:29:50 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:39:18 +0000] "POST /api/v1/users HTTP/1.1" 200 17\n',
  timestamp: '14/Aug/2022:03:39:18 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:40:27 +0000] "POST /api/v1/users HTTP/1.1" 200 17\n',
  timestamp: '14/Aug/2022:03:40:27 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:40:31 +0000] "POST /api/v1/users HTTP/1.1" 200 17\n',
  timestamp: '14/Aug/2022:03:40:31 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:40:35 +0000] "POST /api/v1/users HTTP/1.1" 200 17\n',
  timestamp: '14/Aug/2022:03:40:35 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:40:40 +0000] "POST /api/v1/users HTTP/1.1" 200 17\n',
  timestamp: '14/Aug/2022:03:40:40 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:41:03 +0000] "POST /api/v1/users HTTP/1.1" 200 17\n',
  timestamp: '14/Aug/2022:03:41:03 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:41:07 +0000] "POST /api/v1/users HTTP/1.1" 200 17\n',
  timestamp: '14/Aug/2022:03:41:07 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:41:09 +0000] "POST /api/v1/users HTTP/1.1" 200 17\n',
  timestamp: '14/Aug/2022:03:41:09 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:41:13 +0000] "POST /api/v1/users HTTP/1.1" 200 17\n',
  timestamp: '14/Aug/2022:03:41:13 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:52:24 +0000] "POST /api/v1/users HTTP/1.1" 400 352\n',
  timestamp: '14/Aug/2022:03:52:24 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:53:45 +0000] "POST /api/v1/users HTTP/1.1" 400 251\n',
  timestamp: '14/Aug/2022:03:53:45 +0800'
}
{
  request: {
    method: 'POST',
    url: '/api/v1/users',
    remoteAddress: '::1',
    body: { email: 'bar' }
  },
  level: 'error',
  message: 'keyValidator._parse is not a function',
  timestamp: '14/Aug/2022:03:53:58 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:53:58 +0000] "POST /api/v1/users HTTP/1.1" 500 52\n',
  timestamp: '14/Aug/2022:03:53:58 +0800'
}
{
  request: {
    method: 'POST',
    url: '/api/v1/users',
    remoteAddress: '::1',
    body: { email: 'bar' }
  },
  level: 'error',
  message: 'keyValidator._parse is not a function',
  timestamp: '14/Aug/2022:03:54:07 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:54:07 +0000] "POST /api/v1/users HTTP/1.1" 500 52\n',
  timestamp: '14/Aug/2022:03:54:07 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:54:12 +0000] "POST /api/v1/users HTTP/1.1" 400 251\n',
  timestamp: '14/Aug/2022:03:54:12 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:54:21 +0000] "POST /api/v1/users HTTP/1.1" 400 143\n',
  timestamp: '14/Aug/2022:03:54:21 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:54:42 +0000] "POST /api/v1/users HTTP/1.1" - -\n',
  timestamp: '14/Aug/2022:03:54:42 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:54:56 +0000] "POST /api/v1/users HTTP/1.1" 200 17\n',
  timestamp: '14/Aug/2022:03:54:56 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:55:07 +0000] "POST /api/v1/users HTTP/1.1" 200 17\n',
  timestamp: '14/Aug/2022:03:55:07 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:55:08 +0000] "POST /api/v1/users HTTP/1.1" 200 17\n',
  timestamp: '14/Aug/2022:03:55:08 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:55:59 +0000] "POST /api/v1/users HTTP/1.1" 400 161\n',
  timestamp: '14/Aug/2022:03:55:59 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:56:02 +0000] "POST /api/v1/users HTTP/1.1" 400 161\n',
  timestamp: '14/Aug/2022:03:56:02 +0800'
}
{
  request: {
    method: 'POST',
    url: '/api/v1/users',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: 'Unexpected token / in JSON at position 7',
  timestamp: '14/Aug/2022:03:56:05 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:56:05 +0000] "POST /api/v1/users HTTP/1.1" 500 52\n',
  timestamp: '14/Aug/2022:03:56:05 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:56:15 +0000] "POST /api/v1/users HTTP/1.1" 400 266\n',
  timestamp: '14/Aug/2022:03:56:15 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:19:58:57 +0000] "POST /api/v1/users HTTP/1.1" 400 367\n',
  timestamp: '14/Aug/2022:03:58:57 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:14:29 +0000] "POST /api/v1/users HTTP/1.1" 400 589\n',
  timestamp: '14/Aug/2022:04:14:29 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:14:37 +0000] "POST /api/v1/users HTTP/1.1" 400 488\n',
  timestamp: '14/Aug/2022:04:14:37 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:15:51 +0000] "POST /api/v1/users HTTP/1.1" 400 383\n',
  timestamp: '14/Aug/2022:04:15:51 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:16:00 +0000] "POST /api/v1/users HTTP/1.1" 400 275\n',
  timestamp: '14/Aug/2022:04:16:00 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:16:13 +0000] "POST /api/v1/users HTTP/1.1" 400 167\n',
  timestamp: '14/Aug/2022:04:16:13 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:16:25 +0000] "POST /api/v1/users HTTP/1.1" 400 217\n',
  timestamp: '14/Aug/2022:04:16:25 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:16:40 +0000] "POST /api/v1/users HTTP/1.1" 400 640\n',
  timestamp: '14/Aug/2022:04:16:40 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:16:59 +0000] "POST /api/v1/users HTTP/1.1" 400 640\n',
  timestamp: '14/Aug/2022:04:16:59 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:17:02 +0000] "POST /api/v1/users HTTP/1.1" 400 728\n',
  timestamp: '14/Aug/2022:04:17:02 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:17:04 +0000] "POST /api/v1/users HTTP/1.1" 400 637\n',
  timestamp: '14/Aug/2022:04:17:04 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:17:10 +0000] "POST /api/v1/users HTTP/1.1" 400 637\n',
  timestamp: '14/Aug/2022:04:17:10 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:17:11 +0000] "POST /api/v1/users HTTP/1.1" 400 637\n',
  timestamp: '14/Aug/2022:04:17:11 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:17:13 +0000] "POST /api/v1/users HTTP/1.1" 400 546\n',
  timestamp: '14/Aug/2022:04:17:13 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:17:15 +0000] "POST /api/v1/users HTTP/1.1" 400 458\n',
  timestamp: '14/Aug/2022:04:17:15 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:17:17 +0000] "POST /api/v1/users HTTP/1.1" 400 359\n',
  timestamp: '14/Aug/2022:04:17:17 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:17:19 +0000] "POST /api/v1/users HTTP/1.1" 400 217\n',
  timestamp: '14/Aug/2022:04:17:19 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:17:24 +0000] "POST /api/v1/users HTTP/1.1" 400 217\n',
  timestamp: '14/Aug/2022:04:17:24 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:17:28 +0000] "POST /api/v1/users HTTP/1.1" 200 17\n',
  timestamp: '14/Aug/2022:04:17:28 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:17:54 +0000] "POST /api/v1/users HTTP/1.1" 200 17\n',
  timestamp: '14/Aug/2022:04:17:54 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:18:03 +0000] "POST /api/v1/users HTTP/1.1" 200 17\n',
  timestamp: '14/Aug/2022:04:18:03 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:18:04 +0000] "POST /api/v1/users HTTP/1.1" 200 17\n',
  timestamp: '14/Aug/2022:04:18:04 +0800'
}
{
  request: {
    method: 'POST',
    url: '/api/v1/users',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: 'Unexpected string in JSON at position 106',
  timestamp: '14/Aug/2022:04:18:24 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:18:24 +0000] "POST /api/v1/users HTTP/1.1" 500 52\n',
  timestamp: '14/Aug/2022:04:18:24 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:18:27 +0000] "POST /api/v1/users HTTP/1.1" 400 152\n',
  timestamp: '14/Aug/2022:04:18:27 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:18:28 +0000] "POST /api/v1/users HTTP/1.1" 400 152\n',
  timestamp: '14/Aug/2022:04:18:28 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:18:31 +0000] "POST /api/v1/users HTTP/1.1" 400 152\n',
  timestamp: '14/Aug/2022:04:18:31 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:18:32 +0000] "POST /api/v1/users HTTP/1.1" 400 152\n',
  timestamp: '14/Aug/2022:04:18:32 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:18:35 +0000] "POST /api/v1/users HTTP/1.1" 200 17\n',
  timestamp: '14/Aug/2022:04:18:35 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:18:36 +0000] "POST /api/v1/users HTTP/1.1" 200 17\n',
  timestamp: '14/Aug/2022:04:18:36 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:18:37 +0000] "POST /api/v1/users HTTP/1.1" 400 141\n',
  timestamp: '14/Aug/2022:04:18:37 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:18:37 +0000] "POST /api/v1/users HTTP/1.1" 200 17\n',
  timestamp: '14/Aug/2022:04:18:37 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:18:38 +0000] "POST /api/v1/users HTTP/1.1" 200 17\n',
  timestamp: '14/Aug/2022:04:18:38 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:18:39 +0000] "POST /api/v1/users HTTP/1.1" 200 17\n',
  timestamp: '14/Aug/2022:04:18:39 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:18:45 +0000] "POST /api/v1/users HTTP/1.1" 200 17\n',
  timestamp: '14/Aug/2022:04:18:45 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:18:46 +0000] "POST /api/v1/users HTTP/1.1" 200 17\n',
  timestamp: '14/Aug/2022:04:18:46 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:18:59 +0000] "POST /api/v1/users HTTP/1.1" 200 112\n',
  timestamp: '14/Aug/2022:04:18:59 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:19:02 +0000] "GET /api/v1/users HTTP/1.1" 200 114\n',
  timestamp: '14/Aug/2022:04:19:02 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:19:06 +0000] "POST /api/v1/users HTTP/1.1" 200 113\n',
  timestamp: '14/Aug/2022:04:19:06 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:19:07 +0000] "POST /api/v1/users HTTP/1.1" 200 111\n',
  timestamp: '14/Aug/2022:04:19:07 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:19:08 +0000] "POST /api/v1/users HTTP/1.1" 200 112\n',
  timestamp: '14/Aug/2022:04:19:08 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:19:08 +0000] "POST /api/v1/users HTTP/1.1" 200 119\n',
  timestamp: '14/Aug/2022:04:19:08 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:19:12 +0000] "POST /api/v1/users HTTP/1.1" 400 215\n',
  timestamp: '14/Aug/2022:04:19:12 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:19:13 +0000] "POST /api/v1/users HTTP/1.1" 200 110\n',
  timestamp: '14/Aug/2022:04:19:13 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:19:13 +0000] "POST /api/v1/users HTTP/1.1" 200 107\n',
  timestamp: '14/Aug/2022:04:19:13 +0800'
}
{
  request: {
    method: 'POST',
    url: '/api/v1/users',
    remoteAddress: '::1',
    body: {
      email: 'root@internal.com',
      username: 'Buford73',
      password: '1q!Q1q!Q',
      role: 'user'
    }
  },
  level: 'error',
  message: 'Async refinement encountered during synchronous parse operation. Use .parseAsync instead.',
  timestamp: '14/Aug/2022:04:32:12 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:32:12 +0000] "POST /api/v1/users HTTP/1.1" 500 52\n',
  timestamp: '14/Aug/2022:04:32:12 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:33:25 +0000] "POST /api/v1/users HTTP/1.1" 200 104\n',
  timestamp: '14/Aug/2022:04:33:25 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:33:30 +0000] "POST /api/v1/users HTTP/1.1" 400 115\n',
  timestamp: '14/Aug/2022:04:33:30 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:33:44 +0000] "POST /api/v1/users HTTP/1.1" 400 143\n',
  timestamp: '14/Aug/2022:04:33:44 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:34:05 +0000] "POST /api/v1/users HTTP/1.1" 400 115\n',
  timestamp: '14/Aug/2022:04:34:05 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:34:15 +0000] "POST /api/v1/users HTTP/1.1" 400 281\n',
  timestamp: '14/Aug/2022:04:34:15 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:34:18 +0000] "POST /api/v1/users HTTP/1.1" 400 115\n',
  timestamp: '14/Aug/2022:04:34:18 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:34:24 +0000] "POST /api/v1/users HTTP/1.1" 200 118\n',
  timestamp: '14/Aug/2022:04:34:24 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:39:14 +0000] "DELETE /api/v1/users HTTP/1.1" 404 154\n',
  timestamp: '14/Aug/2022:04:39:14 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:41:22 +0000] "DELETE /api/v1/users/fadsf HTTP/1.1" 400 41\n',
  timestamp: '14/Aug/2022:04:41:22 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:42:49 +0000] "GET /api/v1/users HTTP/1.1" 200 936\n',
  timestamp: '14/Aug/2022:04:42:49 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:43:03 +0000] "POST /api/v1/users HTTP/1.1" 400 115\n',
  timestamp: '14/Aug/2022:04:43:03 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:43:14 +0000] "DELETE /api/v1/users/1 HTTP/1.1" 200 111\n',
  timestamp: '14/Aug/2022:04:43:14 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:44:51 +0000] "DELETE /api/v1/users/1213 HTTP/1.1" 404 45\n',
  timestamp: '14/Aug/2022:04:44:51 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:44:55 +0000] "DELETE /api/v1/users/1 HTTP/1.1" 404 45\n',
  timestamp: '14/Aug/2022:04:44:55 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:45:01 +0000] "DELETE /api/v1/users/2 HTTP/1.1" 200 112\n',
  timestamp: '14/Aug/2022:04:45:01 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:45:13 +0000] "DELETE /api/v1/users/2 HTTP/1.1" 404 45\n',
  timestamp: '14/Aug/2022:04:45:13 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:45:16 +0000] "GET /api/v1/users HTTP/1.1" 200 729\n',
  timestamp: '14/Aug/2022:04:45:16 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:45:43 +0000] "DELETE /api/v1/users/3 HTTP/1.1" 200 110\n',
  timestamp: '14/Aug/2022:04:45:43 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:53:08 +0000] "DELETE /api/v1/users/3 HTTP/1.1" 404 45\n',
  timestamp: '14/Aug/2022:04:53:08 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:53:24 +0000] "GET /auth/signup HTTP/1.1" 404 150\n',
  timestamp: '14/Aug/2022:04:53:24 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:53:31 +0000] "POST /auth/signup HTTP/1.1" 404 151\n',
  timestamp: '14/Aug/2022:04:53:31 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:53:57 +0000] "POST /auth/signup HTTP/1.1" 404 151\n',
  timestamp: '14/Aug/2022:04:53:57 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:54:10 +0000] "POST /api/v1/auth/signup HTTP/1.1" 400 374\n',
  timestamp: '14/Aug/2022:04:54:10 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:54:47 +0000] "POST /api/v1/auth/signup HTTP/1.1" 400 161\n',
  timestamp: '14/Aug/2022:04:54:47 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:55:00 +0000] "POST /api/v1/auth/signup HTTP/1.1" 200 94\n',
  timestamp: '14/Aug/2022:04:55:00 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:55:02 +0000] "POST /api/v1/auth/signup HTTP/1.1" 200 88\n',
  timestamp: '14/Aug/2022:04:55:02 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:55:03 +0000] "POST /api/v1/auth/signup HTTP/1.1" 200 92\n',
  timestamp: '14/Aug/2022:04:55:03 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:55:07 +0000] "POST /api/v1/auth/signup HTTP/1.1" 200 91\n',
  timestamp: '14/Aug/2022:04:55:07 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:55:08 +0000] "POST /api/v1/auth/signup HTTP/1.1" 200 96\n',
  timestamp: '14/Aug/2022:04:55:08 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:55:09 +0000] "POST /api/v1/auth/signup HTTP/1.1" 200 80\n',
  timestamp: '14/Aug/2022:04:55:09 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:55:09 +0000] "POST /api/v1/auth/signup HTTP/1.1" 200 91\n',
  timestamp: '14/Aug/2022:04:55:09 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:55:10 +0000] "POST /api/v1/auth/signup HTTP/1.1" 200 95\n',
  timestamp: '14/Aug/2022:04:55:10 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:55:11 +0000] "POST /api/v1/auth/signup HTTP/1.1" 200 87\n',
  timestamp: '14/Aug/2022:04:55:11 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:55:50 +0000] "POST /api/v1/auth/signup HTTP/1.1" 200 115\n',
  timestamp: '14/Aug/2022:04:55:50 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:56:01 +0000] "POST /api/v1/auth/signup HTTP/1.1" 200 123\n',
  timestamp: '14/Aug/2022:04:56:01 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:56:02 +0000] "POST /api/v1/auth/signup HTTP/1.1" 200 114\n',
  timestamp: '14/Aug/2022:04:56:02 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:56:02 +0000] "POST /api/v1/auth/signup HTTP/1.1" 200 108\n',
  timestamp: '14/Aug/2022:04:56:02 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:56:05 +0000] "GET /api/v1/users HTTP/1.1" 200 1055\n',
  timestamp: '14/Aug/2022:04:56:05 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:58:46 +0000] "POST /api/v1/auth/signup HTTP/1.1" 200 108\n',
  timestamp: '14/Aug/2022:04:58:46 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:58:56 +0000] "GET /api/v1/auth/signup HTTP/1.1" 401 12\n',
  timestamp: '14/Aug/2022:04:58:56 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:59:15 +0000] "GET /api/v1/auth/signup HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:04:59:15 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:59:27 +0000] "GET /api/v1/auth/signup HTTP/1.1" 404 157\n',
  timestamp: '14/Aug/2022:04:59:27 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:20:59:34 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 1155\n',
  timestamp: '14/Aug/2022:04:59:34 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:22:48 +0000] "GET /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:05:22:48 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:24:28 +0000] "GET /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:05:24:28 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:24:29 +0000] "GET /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:05:24:29 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:24:52 +0000] "GET /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:05:24:52 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:25:12 +0000] "GET /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:05:25:12 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:25:13 +0000] "GET /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:05:25:13 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:25:27 +0000] "GET /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:05:25:27 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:26:27 +0000] "GET /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:05:26:27 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:26:37 +0000] "GET /api/v1/users HTTP/1.1" 200 1155\n',
  timestamp: '14/Aug/2022:05:26:37 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:26:44 +0000] "GET /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:05:26:44 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:27:56 +0000] "GET /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:05:27:56 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:28:00 +0000] "GET /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:05:28:00 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:28:06 +0000] "GET /api/v1/users HTTP/1.1" 200 1155\n',
  timestamp: '14/Aug/2022:05:28:06 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:28:09 +0000] "GET /api/v1/users HTTP/1.1" 200 1155\n',
  timestamp: '14/Aug/2022:05:28:09 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:28:12 +0000] "GET /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:05:28:12 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:28:26 +0000] "GET /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:05:28:26 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:28:35 +0000] "GET /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:05:28:35 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:29:20 +0000] "GET /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:05:29:20 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:29:23 +0000] "POST /api/v1/users HTTP/1.1" 200 106\n',
  timestamp: '14/Aug/2022:05:29:23 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:44:59 +0000] "POST /api/v1/auth/login HTTP/1.1" 400 158\n',
  timestamp: '14/Aug/2022:05:44:59 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:45:04 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 15\n',
  timestamp: '14/Aug/2022:05:45:04 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:45:12 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 15\n',
  timestamp: '14/Aug/2022:05:45:12 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:45:15 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 15\n',
  timestamp: '14/Aug/2022:05:45:15 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:48:09 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 168\n',
  timestamp: '14/Aug/2022:05:48:09 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:51:19 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 151\n',
  timestamp: '14/Aug/2022:05:51:19 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:51:41 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 188\n',
  timestamp: '14/Aug/2022:05:51:41 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:51:43 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 188\n',
  timestamp: '14/Aug/2022:05:51:43 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:51:43 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 188\n',
  timestamp: '14/Aug/2022:05:51:43 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:51:44 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 188\n',
  timestamp: '14/Aug/2022:05:51:44 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:51:45 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 188\n',
  timestamp: '14/Aug/2022:05:51:45 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:51:45 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 188\n',
  timestamp: '14/Aug/2022:05:51:45 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:51:48 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 151\n',
  timestamp: '14/Aug/2022:05:51:48 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:51:48 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 151\n',
  timestamp: '14/Aug/2022:05:51:48 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:51:49 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 151\n',
  timestamp: '14/Aug/2022:05:51:49 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:51:49 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 151\n',
  timestamp: '14/Aug/2022:05:51:49 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:52:01 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 264\n',
  timestamp: '14/Aug/2022:05:52:01 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:52:02 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 264\n',
  timestamp: '14/Aug/2022:05:52:02 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:52:02 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 264\n',
  timestamp: '14/Aug/2022:05:52:02 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:54:03 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 151\n',
  timestamp: '14/Aug/2022:05:54:03 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:55:41 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 168\n',
  timestamp: '14/Aug/2022:05:55:41 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:55:42 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 168\n',
  timestamp: '14/Aug/2022:05:55:42 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:21:55:43 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 168\n',
  timestamp: '14/Aug/2022:05:55:43 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:22:35:14 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 168\n',
  timestamp: '14/Aug/2022:06:35:14 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:22:54:36 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 149\n',
  timestamp: '14/Aug/2022:06:54:36 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:22:54:50 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 166\n',
  timestamp: '14/Aug/2022:06:54:50 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:22:54:52 +0000] "POST /api/v1/auth/login HTTP/1.1" 401 56\n',
  timestamp: '14/Aug/2022:06:54:52 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:22:54:54 +0000] "POST /api/v1/auth/login HTTP/1.1" 401 57\n',
  timestamp: '14/Aug/2022:06:54:54 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:22:54:57 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 166\n',
  timestamp: '14/Aug/2022:06:54:57 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:22:55:07 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 166\n',
  timestamp: '14/Aug/2022:06:55:07 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:22:55:23 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 166\n',
  timestamp: '14/Aug/2022:06:55:23 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:22:56:33 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 2188\n',
  timestamp: '14/Aug/2022:06:56:33 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:22:56:44 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 2188\n',
  timestamp: '14/Aug/2022:06:56:44 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:01:16 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 2188\n',
  timestamp: '14/Aug/2022:07:01:16 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:01:27 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 2188\n',
  timestamp: '14/Aug/2022:07:01:27 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:01:28 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 2188\n',
  timestamp: '14/Aug/2022:07:01:28 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:01:53 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 2188\n',
  timestamp: '14/Aug/2022:07:01:53 +0800'
}
{
  request: {
    method: 'GET',
    url: '/api/v1/auth/whoami',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.findUnique()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\common\\config\\passport.ts:47:40\n' +
    '\n' +
    '  44 const id = payload.sub;\n' +
    '  45 console.log(payload)\n' +
    '  46 try {\n' +
    '→ 47   const user = await prisma.user.findUnique({\n' +
    '         where: {\n' +
    '       ?   id?: Int,\n' +
    '       ?   email?: String\n' +
    '         }\n' +
    '       })\n' +
    '\n' +
    'Argument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.\n' +
    '\n' +
    'Note: Lines with ? are optional.\n',
  timestamp: '14/Aug/2022:07:03:04 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:03:04 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 500 52\n',
  timestamp: '14/Aug/2022:07:03:04 +0800'
}
{
  request: {
    method: 'GET',
    url: '/api/v1/auth/whoami',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.findUnique()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\common\\config\\passport.ts:46:40\n' +
    '\n' +
    '  43 new JwtStrategy(jwtStrategyOptions, async (payload, done) => {\n' +
    '  44   const id = payload.sub;\n' +
    '  45   try {\n' +
    '→ 46     const user = await prisma.user.findUnique({\n' +
    '           where: {\n' +
    '         ?   id?: Int,\n' +
    '         ?   email?: String\n' +
    '           }\n' +
    '         })\n' +
    '\n' +
    'Argument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.\n' +
    '\n' +
    'Note: Lines with ? are optional.\n',
  timestamp: '14/Aug/2022:07:03:38 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:03:38 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 500 52\n',
  timestamp: '14/Aug/2022:07:03:38 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:04:13 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 401 -\n',
  timestamp: '14/Aug/2022:07:04:13 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:06:44 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 2188\n',
  timestamp: '14/Aug/2022:07:06:44 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:07:03 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 2188\n',
  timestamp: '14/Aug/2022:07:07:03 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:07:30 +0000] "GET /api/v1/auth/whoami HTTP/1.1" - -\n',
  timestamp: '14/Aug/2022:07:07:30 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:07:39 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 2188\n',
  timestamp: '14/Aug/2022:07:07:39 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:07:57 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 2188\n',
  timestamp: '14/Aug/2022:07:07:57 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:08:05 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 2188\n',
  timestamp: '14/Aug/2022:07:08:05 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:08:09 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 166\n',
  timestamp: '14/Aug/2022:07:08:09 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:08:16 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 2188\n',
  timestamp: '14/Aug/2022:07:08:16 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:08:29 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 2188\n',
  timestamp: '14/Aug/2022:07:08:29 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:08:35 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 168\n',
  timestamp: '14/Aug/2022:07:08:35 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:08:41 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 2188\n',
  timestamp: '14/Aug/2022:07:08:41 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:08:46 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 2188\n',
  timestamp: '14/Aug/2022:07:08:46 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:08:53 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 2188\n',
  timestamp: '14/Aug/2022:07:08:53 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:11:16 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 2188\n',
  timestamp: '14/Aug/2022:07:11:16 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:11:22 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 2188\n',
  timestamp: '14/Aug/2022:07:11:22 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:11:46 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 2188\n',
  timestamp: '14/Aug/2022:07:11:46 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:11:54 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 2188\n',
  timestamp: '14/Aug/2022:07:11:54 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:12:08 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 2188\n',
  timestamp: '14/Aug/2022:07:12:08 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:12:13 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 2188\n',
  timestamp: '14/Aug/2022:07:12:13 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:13:07 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 2188\n',
  timestamp: '14/Aug/2022:07:13:07 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:13:19 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 2188\n',
  timestamp: '14/Aug/2022:07:13:19 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:13:24 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 2188\n',
  timestamp: '14/Aug/2022:07:13:24 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:13:45 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 2188\n',
  timestamp: '14/Aug/2022:07:13:45 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:13:48 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:13:48 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:14:46 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:14:46 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:15:04 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 168\n',
  timestamp: '14/Aug/2022:07:15:04 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:15:08 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:15:08 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:15:09 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:15:09 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:15:12 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 2189\n',
  timestamp: '14/Aug/2022:07:15:12 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:15:31 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 182\n',
  timestamp: '14/Aug/2022:07:15:31 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:15:36 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:15:36 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:15:48 +0000] "POST /api/v1/users HTTP/1.1" 400 115\n',
  timestamp: '14/Aug/2022:07:15:48 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:16:09 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:16:09 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:16:27 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:16:27 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:16:38 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:16:38 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:16:55 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:16:55 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:17:03 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:17:03 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:17:20 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:17:20 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:17:25 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:17:25 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:17:44 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:17:44 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:17:51 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:17:51 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:18:12 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:18:12 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:18:29 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:18:29 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:19:16 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:19:16 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:19:30 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:19:30 +0800'
}
{
  request: {
    method: 'POST',
    url: '/api/v1/users',
    remoteAddress: '::1',
    body: {
      email: 'root@internal.com',
      username: 'Irma_Von64',
      password: '1q!Q1q!Q',
      role: 'admin'
    }
  },
  level: 'error',
  message: 'Unknown authentication strategy "jwt"',
  timestamp: '14/Aug/2022:07:19:36 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:19:36 +0000] "POST /api/v1/users HTTP/1.1" 500 52\n',
  timestamp: '14/Aug/2022:07:19:36 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:19:49 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:19:49 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:19:50 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:19:50 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:19:53 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:19:53 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:19:58 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:19:58 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:20:04 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:20:04 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:21:17 +0000] "POST /api/v1/users HTTP/1.1" 400 115\n',
  timestamp: '14/Aug/2022:07:21:17 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:21:40 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:21:40 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:21:57 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 168\n',
  timestamp: '14/Aug/2022:07:21:57 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:22:00 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:22:00 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:22:21 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:22:21 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:22:26 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 182\n',
  timestamp: '14/Aug/2022:07:22:26 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:23:06 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 168\n',
  timestamp: '14/Aug/2022:07:23:06 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:23:30 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 173\n',
  timestamp: '14/Aug/2022:07:23:30 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:24:42 +0000] "POST /api/v1/auth/login HTTP/1.1" 401 56\n',
  timestamp: '14/Aug/2022:07:24:42 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:24:45 +0000] "POST /api/v1/auth/login HTTP/1.1" 401 56\n',
  timestamp: '14/Aug/2022:07:24:45 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:24:56 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 174\n',
  timestamp: '14/Aug/2022:07:24:56 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:25:16 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:25:16 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:25:19 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:25:19 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:25:33 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:25:33 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:26:00 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:26:00 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:26:07 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:26:07 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:26:11 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:26:11 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:26:13 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 174\n',
  timestamp: '14/Aug/2022:07:26:13 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:26:20 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:26:20 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:26:22 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:26:22 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:26:24 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:26:24 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:26:28 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:26:28 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:26:30 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:26:30 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:26:39 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 173\n',
  timestamp: '14/Aug/2022:07:26:39 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:26:46 +0000] "POST /api/v1/users HTTP/1.1" 400 115\n',
  timestamp: '14/Aug/2022:07:26:46 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:26:48 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:26:48 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:26:52 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:26:52 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:26:56 +0000] "POST /api/v1/users HTTP/1.1" 400 115\n',
  timestamp: '14/Aug/2022:07:26:56 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:27:02 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:27:02 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:27:04 +0000] "POST /api/v1/users HTTP/1.1" 400 115\n',
  timestamp: '14/Aug/2022:07:27:04 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:27:10 +0000] "POST /api/v1/users HTTP/1.1" 200 192\n',
  timestamp: '14/Aug/2022:07:27:10 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:27:13 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:07:27:13 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:27:15 +0000] "POST /api/v1/users HTTP/1.1" 200 188\n',
  timestamp: '14/Aug/2022:07:27:15 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:28:52 +0000] "POST /api/v1/users HTTP/1.1" 200 189\n',
  timestamp: '14/Aug/2022:07:28:52 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:28:56 +0000] "POST /api/v1/users?q=foo HTTP/1.1" 200 193\n',
  timestamp: '14/Aug/2022:07:28:56 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:29:01 +0000] "GET /api/v1/users HTTP/1.1" 200 12\n',
  timestamp: '14/Aug/2022:07:29:01 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:29:06 +0000] "GET /api/v1/users?q=foo HTTP/1.1" 200 12\n',
  timestamp: '14/Aug/2022:07:29:06 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:29:07 +0000] "GET /api/v1/users?q=root HTTP/1.1" 200 185\n',
  timestamp: '14/Aug/2022:07:29:07 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:29:09 +0000] "GET /api/v1/users?q=admin HTTP/1.1" 200 12\n',
  timestamp: '14/Aug/2022:07:29:09 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:31:55 +0000] "GET /api/v1/users?q=admin HTTP/1.1" 200 12\n',
  timestamp: '14/Aug/2022:07:31:55 +0800'
}
{
  level: 'access',
  message: '::1 - [13/Aug/2022:23:31:57 +0000] "GET /api/v1/users?q=root HTTP/1.1" 200 185\n',
  timestamp: '14/Aug/2022:07:31:57 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:08:29:21 +0000] "GET /api/v1/users?q=root HTTP/1.1" 200 4581\n',
  timestamp: '14/Aug/2022:04:29:21 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:08:29:35 +0000] "POST /api/v1/auth/login HTTP/1.1" 401 56\n',
  timestamp: '14/Aug/2022:04:29:35 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:08:29:55 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 270\n',
  timestamp: '14/Aug/2022:04:29:55 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:08:30:40 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 173\n',
  timestamp: '14/Aug/2022:04:30:40 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:08:30:42 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 173\n',
  timestamp: '14/Aug/2022:04:30:42 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:08:30:50 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 173\n',
  timestamp: '14/Aug/2022:04:30:50 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:08:30:56 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 174\n',
  timestamp: '14/Aug/2022:04:30:56 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:08:31:52 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:04:31:52 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:08:32:27 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:04:32:27 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:08:32:29 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 270\n',
  timestamp: '14/Aug/2022:04:32:29 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:08:32:30 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 266\n',
  timestamp: '14/Aug/2022:04:32:30 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:08:32:40 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:04:32:40 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:08:32:42 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '14/Aug/2022:04:32:42 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:08:33:36 +0000] "POST /api/v1/users HTTP/1.1" 200 277\n',
  timestamp: '14/Aug/2022:04:33:36 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:08:34:20 +0000] "POST /api/v1/users HTTP/1.1" 400 115\n',
  timestamp: '14/Aug/2022:04:34:20 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:08:34:25 +0000] "POST /api/v1/auth/signup HTTP/1.1" 200 283\n',
  timestamp: '14/Aug/2022:04:34:25 +0800'
}
{
  request: {
    method: 'POST',
    url: '/api/v1/auth/signup',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: 'Unexpected token } in JSON at position 105',
  timestamp: '14/Aug/2022:04:34:29 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:08:34:29 +0000] "POST /api/v1/auth/signup HTTP/1.1" 500 52\n',
  timestamp: '14/Aug/2022:04:34:29 +0800'
}
{
  request: {
    method: 'POST',
    url: '/api/v1/auth/signup',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: 'Unexpected token } in JSON at position 101',
  timestamp: '14/Aug/2022:04:34:36 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:08:34:36 +0000] "POST /api/v1/auth/signup HTTP/1.1" 500 52\n',
  timestamp: '14/Aug/2022:04:34:36 +0800'
}
{
  request: {
    method: 'POST',
    url: '/api/v1/auth/signup',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: 'Unexpected token } in JSON at position 101',
  timestamp: '14/Aug/2022:04:34:57 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:08:34:57 +0000] "POST /api/v1/auth/signup HTTP/1.1" 500 52\n',
  timestamp: '14/Aug/2022:04:34:57 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:08:35:59 +0000] "POST /api/v1/auth/signup HTTP/1.1" 400 93\n',
  timestamp: '14/Aug/2022:04:35:59 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:08:36:02 +0000] "POST /api/v1/auth/signup HTTP/1.1" 400 93\n',
  timestamp: '14/Aug/2022:04:36:02 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:08:36:08 +0000] "POST /api/v1/auth/signup HTTP/1.1" 400 93\n',
  timestamp: '14/Aug/2022:04:36:08 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:08:36:12 +0000] "POST /api/v1/auth/signup HTTP/1.1" 200 279\n',
  timestamp: '14/Aug/2022:04:36:12 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:09:49:26 +0000] "GET /api/v1/users?q=root HTTP/1.1" 200 5395\n',
  timestamp: '14/Aug/2022:05:49:26 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:09:49:39 +0000] "GET /api/v1/users?q=root HTTP/1.1" 200 5695\n',
  timestamp: '14/Aug/2022:05:49:39 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:09:50:12 +0000] "GET /api/v1/users?q=root HTTP/1.1" 200 5695\n',
  timestamp: '14/Aug/2022:05:50:12 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:10:37:48 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 279\n',
  timestamp: '14/Aug/2022:06:37:48 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:10:37:56 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 179\n',
  timestamp: '14/Aug/2022:06:37:56 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:10:38:04 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 179\n',
  timestamp: '14/Aug/2022:06:38:04 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:10:38:06 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 270\n',
  timestamp: '14/Aug/2022:06:38:06 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:10:38:08 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 270\n',
  timestamp: '14/Aug/2022:06:38:08 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:10:38:10 +0000] "GET /api/v1/users?q=root HTTP/1.1" 200 2891007\n',
  timestamp: '14/Aug/2022:06:38:10 +0800'
}
{
  level: 'access',
  message: '::1 - [14/Aug/2022:19:25:08 +0000] "GET /api/v1/users?q=root HTTP/1.1" 200 2891007\n',
  timestamp: '15/Aug/2022:03:25:08 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:39:02 +0000] "GET /api/v1/users?q=root HTTP/1.1" 200 1422\n',
  timestamp: '15/Aug/2022:06:39:02 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:39:06 +0000] "GET /api/v1/users?q=root HTTP/1.1" 200 1419\n',
  timestamp: '15/Aug/2022:06:39:06 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:39:53 +0000] "GET /api/v1/users HTTP/1.1" 200 2838\n',
  timestamp: '15/Aug/2022:06:39:53 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:40:10 +0000] "GET /api/v1/users?l=0 HTTP/1.1" 200 12\n',
  timestamp: '15/Aug/2022:06:40:10 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:40:46 +0000] "GET /api/v1/users?l=0 HTTP/1.1" 200 12\n',
  timestamp: '15/Aug/2022:06:40:46 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:40:50 +0000] "GET /api/v1/users HTTP/1.1" 200 2838\n',
  timestamp: '15/Aug/2022:06:40:50 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:40:55 +0000] "GET /api/v1/users?l=none HTTP/1.1" 200 2838\n',
  timestamp: '15/Aug/2022:06:40:55 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:41:45 +0000] "GET /api/v1/users?l=none HTTP/1.1" 200 2891007\n',
  timestamp: '15/Aug/2022:06:41:45 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:41:51 +0000] "GET /api/v1/users?limit=4 HTTP/1.1" 200 1139\n',
  timestamp: '15/Aug/2022:06:41:51 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:41:53 +0000] "GET /api/v1/users?limit=5 HTTP/1.1" 200 1422\n',
  timestamp: '15/Aug/2022:06:41:53 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:41:54 +0000] "GET /api/v1/users?limit=4 HTTP/1.1" 200 1139\n',
  timestamp: '15/Aug/2022:06:41:54 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:41:56 +0000] "GET /api/v1/users?limit=none HTTP/1.1" 200 2891007\n',
  timestamp: '15/Aug/2022:06:41:56 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:42:00 +0000] "GET /api/v1/users?limit=10 HTTP/1.1" 200 2838\n',
  timestamp: '15/Aug/2022:06:42:00 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:42:54 +0000] "GET /api/v1/users?limit=10 HTTP/1.1" 200 2838\n',
  timestamp: '15/Aug/2022:06:42:54 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:43:02 +0000] "GET /api/v1/users?limit=10&p=1 HTTP/1.1" 200 2838\n',
  timestamp: '15/Aug/2022:06:43:02 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:43:03 +0000] "GET /api/v1/users?limit=10&p=2 HTTP/1.1" 200 2914\n',
  timestamp: '15/Aug/2022:06:43:03 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:43:06 +0000] "GET /api/v1/users HTTP/1.1" 200 2838\n',
  timestamp: '15/Aug/2022:06:43:06 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:44:10 +0000] "GET /api/v1/users HTTP/1.1" 200 2838\n',
  timestamp: '15/Aug/2022:06:44:10 +0800'
}
{
  request: {
    method: 'GET',
    url: '/api/v1/users',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: 'Internal Server Error',
  timestamp: '15/Aug/2022:06:45:25 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:45:25 +0000] "GET /api/v1/users HTTP/1.1" 500 52\n',
  timestamp: '15/Aug/2022:06:45:25 +0800'
}
{
  request: {
    method: 'GET',
    url: '/api/v1/users',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: 'Internal Server Error',
  timestamp: '15/Aug/2022:06:45:33 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:45:33 +0000] "GET /api/v1/users HTTP/1.1" 500 52\n',
  timestamp: '15/Aug/2022:06:45:33 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:45:39 +0000] "GET /api/v1/users HTTP/1.1" 400 42\n',
  timestamp: '15/Aug/2022:06:45:39 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:45:43 +0000] "GET /api/v1/users HTTP/1.1" 400 34\n',
  timestamp: '15/Aug/2022:06:45:43 +0800'
}
{
  request: {
    method: 'GET',
    url: '/api/v1/users',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: 'foo',
  timestamp: '15/Aug/2022:06:45:47 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:45:47 +0000] "GET /api/v1/users HTTP/1.1" 500 52\n',
  timestamp: '15/Aug/2022:06:45:47 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:47:49 +0000] "GET /api/v1/users HTTP/1.1" 200 2838\n',
  timestamp: '15/Aug/2022:06:47:49 +0800'
}
{
  request: {
    method: 'GET',
    url: '/api/v1/users',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: undefined,
  timestamp: '15/Aug/2022:06:47:54 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:47:54 +0000] "GET /api/v1/users HTTP/1.1" 500 52\n',
  timestamp: '15/Aug/2022:06:47:54 +0800'
}
{
  request: {
    method: 'GET',
    url: '/api/v1/users',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: 'foo',
  timestamp: '15/Aug/2022:06:48:08 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:48:08 +0000] "GET /api/v1/users HTTP/1.1" 500 52\n',
  timestamp: '15/Aug/2022:06:48:08 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:48:16 +0000] "GET /api/v1/users HTTP/1.1" 200 2838\n',
  timestamp: '15/Aug/2022:06:48:16 +0800'
}
{
  request: {
    method: 'GET',
    url: '/api/v1/users',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: undefined,
  timestamp: '15/Aug/2022:06:48:21 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:48:21 +0000] "GET /api/v1/users HTTP/1.1" 500 52\n',
  timestamp: '15/Aug/2022:06:48:21 +0800'
}
{
  request: {
    method: 'GET',
    url: '/api/v1/users/test',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.findUnique()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:36:36\n' +
    '\n' +
    "  33 '/:id',\n" +
    '  34 asyncHandler(async (req, res) => {\n' +
    '  35   const { id } = req.params;\n' +
    '→ 36   const user = await prisma.user.findUnique({\n' +
    '         where: {\n' +
    "           id: 'test'\n" +
    '               ~~~~~~\n' +
    '         }\n' +
    '       })\n' +
    '\n' +
    "Argument id: Got invalid value 'test' on prisma.findUniqueUser. Provided String, expected Int.\n" +
    '\n',
  timestamp: '15/Aug/2022:06:49:25 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:49:25 +0000] "GET /api/v1/users/test HTTP/1.1" 500 52\n',
  timestamp: '15/Aug/2022:06:49:25 +0800'
}
{
  request: {
    method: 'GET',
    url: '/api/v1/users/test',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.findUnique()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:36:36\n' +
    '\n' +
    "  33 '/:id',\n" +
    '  34 asyncHandler(async (req, res) => {\n' +
    '  35   const { id } = req.params;\n' +
    '→ 36   const user = await prisma.user.findUnique({\n' +
    '         where: {\n' +
    '           id: NaN\n' +
    '               ~~~\n' +
    '         }\n' +
    '       })\n' +
    '\n' +
    'Argument id: Got invalid value NaN on prisma.findUniqueUser. Provided Float, expected Int.\n' +
    '\n',
  timestamp: '15/Aug/2022:06:49:50 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:49:50 +0000] "GET /api/v1/users/test HTTP/1.1" 500 52\n',
  timestamp: '15/Aug/2022:06:49:50 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:56:36 +0000] "GET /api/v1/users/test HTTP/1.1" 400 42\n',
  timestamp: '15/Aug/2022:06:56:36 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:56:41 +0000] "GET /api/v1/users/test HTTP/1.1" 400 41\n',
  timestamp: '15/Aug/2022:06:56:41 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:56:59 +0000] "GET /api/v1/users/test HTTP/1.1" 400 46\n',
  timestamp: '15/Aug/2022:06:56:59 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:57:10 +0000] "GET /api/v1/users/test HTTP/1.1" 400 50\n',
  timestamp: '15/Aug/2022:06:57:10 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:57:46 +0000] "GET /api/v1/users/1234 HTTP/1.1" 200 284\n',
  timestamp: '15/Aug/2022:06:57:46 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:57:48 +0000] "GET /api/v1/users/123455 HTTP/1.1" 200 13\n',
  timestamp: '15/Aug/2022:06:57:48 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:58:09 +0000] "GET /api/v1/users/123455 HTTP/1.1" 404 45\n',
  timestamp: '15/Aug/2022:06:58:09 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:58:25 +0000] "GET /api/v1/users/123455 HTTP/1.1" 404 45\n',
  timestamp: '15/Aug/2022:06:58:25 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:58:39 +0000] "GET /api/v1/users/123455 HTTP/1.1" 404 45\n',
  timestamp: '15/Aug/2022:06:58:39 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:58:54 +0000] "GET /api/v1/users/123455 HTTP/1.1" 404 45\n',
  timestamp: '15/Aug/2022:06:58:54 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:10:58:57 +0000] "GET /api/v1/users/213 HTTP/1.1" 200 289\n',
  timestamp: '15/Aug/2022:06:58:57 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:01:25 +0000] "GET /api/v1/users/213 HTTP/1.1" 200 289\n',
  timestamp: '15/Aug/2022:07:01:25 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:02:35 +0000] "GET /api/v1/users/213 HTTP/1.1" 200 120\n',
  timestamp: '15/Aug/2022:07:02:35 +0800'
}
{
  request: {
    method: 'GET',
    url: '/api/v1/users/213',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.findUnique()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:40:36\n' +
    '\n' +
    "  37 const isAdmin = req.isRole(['admin']);\n" +
    '  38 \n' +
    '  39 const { id } = req.params;\n' +
    '→ 40 const user = await prisma.user.findUnique({\n' +
    '       where: {\n' +
    '         id: 213\n' +
    '       },\n' +
    '       select: {\n' +
    '     ?   password?: true,\n' +
    '     ?   id?: true,\n' +
    '     ?   email?: true,\n' +
    '     ?   username?: true,\n' +
    '     ?   role?: true,\n' +
    '     ?   createdAt?: true,\n' +
    '     ?   updatedAt?: true,\n' +
    '     ?   profile?: true\n' +
    '       }\n' +
    '     })\n' +
    '\n' +
    '\n' +
    'The `select` statement for type User needs at least one truthy value.\n',
  timestamp: '15/Aug/2022:07:02:40 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:02:40 +0000] "GET /api/v1/users/213 HTTP/1.1" 500 52\n',
  timestamp: '15/Aug/2022:07:02:40 +0800'
}
{
  request: {
    method: 'GET',
    url: '/api/v1/users/213',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.findUnique()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:40:36\n' +
    '\n' +
    "  37 const isAdmin = req.isRole(['admin']);\n" +
    '  38 \n' +
    '  39 const { id } = req.params;\n' +
    '→ 40 const user = await prisma.user.findUnique({\n' +
    '       where: {\n' +
    '         id: 213\n' +
    '       },\n' +
    '       select: {\n' +
    '     ?   password?: true,\n' +
    '     ?   id?: true,\n' +
    '     ?   email?: true,\n' +
    '     ?   username?: true,\n' +
    '     ?   role?: true,\n' +
    '     ?   createdAt?: true,\n' +
    '     ?   updatedAt?: true,\n' +
    '     ?   profile?: true\n' +
    '       }\n' +
    '     })\n' +
    '\n' +
    '\n' +
    'The `select` statement for type User needs at least one truthy value.\n',
  timestamp: '15/Aug/2022:07:02:56 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:02:56 +0000] "GET /api/v1/users/213 HTTP/1.1" 500 52\n',
  timestamp: '15/Aug/2022:07:02:56 +0800'
}
{
  request: {
    method: 'GET',
    url: '/api/v1/users/213',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.findUnique()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:40:36\n' +
    '\n' +
    "  37 const isAdmin = req.isRole(['admin']);\n" +
    '  38 \n' +
    '  39 const { id } = req.params;\n' +
    '→ 40 const user = await prisma.user.findUnique({\n' +
    '       where: {\n' +
    '         id: 213\n' +
    '       },\n' +
    '       select: {\n' +
    '     ?   password?: true,\n' +
    '     ?   id?: true,\n' +
    '     ?   email?: true,\n' +
    '     ?   username?: true,\n' +
    '     ?   role?: true,\n' +
    '     ?   createdAt?: true,\n' +
    '     ?   updatedAt?: true,\n' +
    '     ?   profile?: true\n' +
    '       }\n' +
    '     })\n' +
    '\n' +
    '\n' +
    'The `select` statement for type User needs at least one truthy value.\n',
  timestamp: '15/Aug/2022:07:04:49 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:04:49 +0000] "GET /api/v1/users/213 HTTP/1.1" 500 52\n',
  timestamp: '15/Aug/2022:07:04:49 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:04:54 +0000] "GET /api/v1/users/213 HTTP/1.1" 200 289\n',
  timestamp: '15/Aug/2022:07:04:54 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:04:59 +0000] "GET /api/v1/users HTTP/1.1" 200 2838\n',
  timestamp: '15/Aug/2022:07:04:59 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:07:40 +0000] "GET /api/v1/users HTTP/1.1" 200 2838\n',
  timestamp: '15/Aug/2022:07:07:40 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:07:46 +0000] "GET /api/v1/users/213 HTTP/1.1" 200 289\n',
  timestamp: '15/Aug/2022:07:07:46 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:07:49 +0000] "GET /api/v1/users/123312 HTTP/1.1" 404 45\n',
  timestamp: '15/Aug/2022:07:07:49 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:07:52 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '15/Aug/2022:07:07:52 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:12:26 +0000] "GET /api/v1/users/123312 HTTP/1.1" 404 45\n',
  timestamp: '15/Aug/2022:07:12:26 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:12:29 +0000] "GET /api/v1/users/1233 HTTP/1.1" 200 172\n',
  timestamp: '15/Aug/2022:07:12:29 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:12:33 +0000] "GET /api/v1/users/1233 HTTP/1.1" 200 282\n',
  timestamp: '15/Aug/2022:07:12:33 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:12:59 +0000] "GET /api/v1/users HTTP/1.1" 200 1738\n',
  timestamp: '15/Aug/2022:07:12:59 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:13:02 +0000] "GET /api/v1/users HTTP/1.1" 200 1738\n',
  timestamp: '15/Aug/2022:07:13:02 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:18:48 +0000] "GET /api/v1/users HTTP/1.1" 200 1738\n',
  timestamp: '15/Aug/2022:07:18:48 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:18:51 +0000] "GET /api/v1/users HTTP/1.1" 200 1738\n',
  timestamp: '15/Aug/2022:07:18:51 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:18:51 +0000] "GET /api/v1/users HTTP/1.1" 200 1738\n',
  timestamp: '15/Aug/2022:07:18:51 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:18:54 +0000] "GET /api/v1/users HTTP/1.1" 200 1738\n',
  timestamp: '15/Aug/2022:07:18:54 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:19:46 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 179\n',
  timestamp: '15/Aug/2022:07:19:46 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:20:10 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 270\n',
  timestamp: '15/Aug/2022:07:20:10 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:20:18 +0000] "POST /api/v1/users HTTP/1.1" 200 289\n',
  timestamp: '15/Aug/2022:07:20:18 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:20:25 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 179\n',
  timestamp: '15/Aug/2022:07:20:25 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:20:32 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 288\n',
  timestamp: '15/Aug/2022:07:20:32 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:20:51 +0000] "DELETE /api/v1/auth/account HTTP/1.1" 200 288\n',
  timestamp: '15/Aug/2022:07:20:51 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:20:54 +0000] "DELETE /api/v1/auth/account HTTP/1.1" 401 43\n',
  timestamp: '15/Aug/2022:07:20:54 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:20:57 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 401 43\n',
  timestamp: '15/Aug/2022:07:20:57 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:21:04 +0000] "GET /api/v1/users/1233 HTTP/1.1" 200 172\n',
  timestamp: '15/Aug/2022:07:21:04 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:21:06 +0000] "GET /api/v1/users/10003 HTTP/1.1" 200 160\n',
  timestamp: '15/Aug/2022:07:21:06 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:21:07 +0000] "GET /api/v1/users/10004 HTTP/1.1" 404 45\n',
  timestamp: '15/Aug/2022:07:21:07 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:21:14 +0000] "GET /api/v1/users/10004 HTTP/1.1" 404 45\n',
  timestamp: '15/Aug/2022:07:21:14 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:21:20 +0000] "POST /api/v1/users HTTP/1.1" 200 287\n',
  timestamp: '15/Aug/2022:07:21:20 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:21:22 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '15/Aug/2022:07:21:22 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:21:24 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '15/Aug/2022:07:21:24 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:21:25 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '15/Aug/2022:07:21:25 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:21:29 +0000] "POST /api/v1/users HTTP/1.1" 400 115\n',
  timestamp: '15/Aug/2022:07:21:29 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:31:47 +0000] "GET /api/v1/users HTTP/1.1" 200 1738\n',
  timestamp: '15/Aug/2022:07:31:47 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:31:57 +0000] "GET /api/v1/users/10004 HTTP/1.1" 401 43\n',
  timestamp: '15/Aug/2022:07:31:57 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:31:59 +0000] "GET /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '15/Aug/2022:07:31:59 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:11:32:01 +0000] "GET /api/v1/users HTTP/1.1" 200 1738\n',
  timestamp: '15/Aug/2022:07:32:01 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:13:11:26 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 11\n',
  timestamp: '15/Aug/2022:09:11:26 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:13:11:36 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 270\n',
  timestamp: '15/Aug/2022:09:11:36 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:13:12:21 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 160\n',
  timestamp: '15/Aug/2022:09:12:21 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:13:12:45 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 175\n',
  timestamp: '15/Aug/2022:09:12:45 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:13:13:03 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 187\n',
  timestamp: '15/Aug/2022:09:13:03 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:13:13:10 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 160\n',
  timestamp: '15/Aug/2022:09:13:10 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:13:23:15 +0000] "GET /api/v1/users/1 HTTP/1.1" 200 169\n',
  timestamp: '15/Aug/2022:09:23:15 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:13:23:32 +0000] "GET /api/v1/users/1/profile HTTP/1.1" 200 184\n',
  timestamp: '15/Aug/2022:09:23:32 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:13:26:13 +0000] "GET /api/v1/users/1/profile HTTP/1.1" 200 184\n',
  timestamp: '15/Aug/2022:09:26:13 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:13:30:25 +0000] "GET /api/v1/users/1/profile HTTP/1.1" 200 184\n',
  timestamp: '15/Aug/2022:09:30:25 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:19:20:15 +0000] "GET /api/v1/users HTTP/1.1" 200 1588\n',
  timestamp: '16/Aug/2022:03:20:15 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:19:20:21 +0000] "GET /api/v1/users/f HTTP/1.1" 400 50\n',
  timestamp: '16/Aug/2022:03:20:21 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:19:20:22 +0000] "GET /api/v1/users/profile HTTP/1.1" 200 1738\n',
  timestamp: '16/Aug/2022:03:20:22 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:19:20:26 +0000] "GET /api/v1/users HTTP/1.1" 200 1588\n',
  timestamp: '16/Aug/2022:03:20:26 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:19:28:10 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 160\n',
  timestamp: '16/Aug/2022:03:28:10 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:19:28:19 +0000] "POST /api/v1/users/10001 HTTP/1.1" 404 158\n',
  timestamp: '16/Aug/2022:03:28:19 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:19:28:44 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 400 270\n',
  timestamp: '16/Aug/2022:03:28:44 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:19:29:02 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 400 275\n',
  timestamp: '16/Aug/2022:03:29:02 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:19:29:19 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 400 284\n',
  timestamp: '16/Aug/2022:03:29:19 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:19:29:36 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 400 370\n',
  timestamp: '16/Aug/2022:03:29:36 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:19:29:43 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 400 284\n',
  timestamp: '16/Aug/2022:03:29:43 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:19:29:46 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 400 284\n',
  timestamp: '16/Aug/2022:03:29:46 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:19:29:48 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 400 284\n',
  timestamp: '16/Aug/2022:03:29:48 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:19:29:51 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 400 284\n',
  timestamp: '16/Aug/2022:03:29:51 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:19:29:54 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 400 284\n',
  timestamp: '16/Aug/2022:03:29:54 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:19:29:56 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 400 370\n',
  timestamp: '16/Aug/2022:03:29:56 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:19:29:58 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 400 284\n',
  timestamp: '16/Aug/2022:03:29:58 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:05:09 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 400 284\n',
  timestamp: '16/Aug/2022:04:05:09 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:05:16 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 400 373\n',
  timestamp: '16/Aug/2022:04:05:16 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:06:46 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 400 156\n',
  timestamp: '16/Aug/2022:04:06:46 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:06:49 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 200 14\n',
  timestamp: '16/Aug/2022:04:06:49 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:07:57 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 200 14\n',
  timestamp: '16/Aug/2022:04:07:57 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:08:01 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 200 14\n',
  timestamp: '16/Aug/2022:04:08:01 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:08:14 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 400 93\n',
  timestamp: '16/Aug/2022:04:08:14 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:08:20 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 400 93\n',
  timestamp: '16/Aug/2022:04:08:20 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:08:25 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 400 93\n',
  timestamp: '16/Aug/2022:04:08:25 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:08:50 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 400 93\n',
  timestamp: '16/Aug/2022:04:08:50 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:08:58 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 400 93\n',
  timestamp: '16/Aug/2022:04:08:58 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:09:20 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 200 14\n',
  timestamp: '16/Aug/2022:04:09:20 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:09:32 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 400 93\n',
  timestamp: '16/Aug/2022:04:09:32 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:09:35 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 400 93\n',
  timestamp: '16/Aug/2022:04:09:35 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:09:37 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 400 93\n',
  timestamp: '16/Aug/2022:04:09:37 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:09:49 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 200 14\n',
  timestamp: '16/Aug/2022:04:09:49 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:09:50 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 200 14\n',
  timestamp: '16/Aug/2022:04:09:50 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:09:51 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 200 14\n',
  timestamp: '16/Aug/2022:04:09:51 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:09:53 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 200 14\n',
  timestamp: '16/Aug/2022:04:09:53 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:43:53 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 404 166\n',
  timestamp: '16/Aug/2022:04:43:53 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:43:57 +0000] "PUT /api/v1/users/10001/profile HTTP/1.1" 404 165\n',
  timestamp: '16/Aug/2022:04:43:57 +0800'
}
{
  request: {
    method: 'PATCH',
    url: '/api/v1/users/10001/profile',
    remoteAddress: '::1',
    body: {
      firstName: 'Margaret',
      lastName: 'Bergstrom',
      imageUrl: 'https://cdn.fakercloud.com/avatars/frankiefreesbie_128.jpg',
      bio: 'Eum itaque ratione. Ratione molestiae voluptatem repellendus odit minima quis reprehenderit. Voluptatum et facilis qui enim aut.'
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.update()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:108:36\n' +
    '\n' +
    '  105 validateSchema(CreateProfileSchema),\n' +
    '  106 asyncHandler(async (req, res) => {\n' +
    '  107   const { id } = req.params;\n' +
    '→ 108   const user = await prisma.user.update(\n' +
    `  Query interpretation error. Error for binding '1': AssertionError("Expected a valid parent ID to be present for nested update to-one case.")`,
  timestamp: '16/Aug/2022:04:44:20 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:44:20 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:04:44:20 +0800'
}
{
  request: {
    method: 'PATCH',
    url: '/api/v1/users/10001/profile',
    remoteAddress: '::1',
    body: {
      firstName: 'Shany',
      lastName: 'Gottlieb',
      imageUrl: 'https://cdn.fakercloud.com/avatars/madysondesigns_128.jpg',
      bio: 'Omnis voluptatum nulla ut ea nihil accusamus nam eos. Hic aut consequatur vero. Est ut adipisci at. Explicabo quo quo ipsa.'
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.update()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:108:36\n' +
    '\n' +
    '  105 validateSchema(CreateProfileSchema),\n' +
    '  106 asyncHandler(async (req, res) => {\n' +
    '  107   const { id } = req.params;\n' +
    '→ 108   const user = await prisma.user.update(\n' +
    `  Query interpretation error. Error for binding '1': AssertionError("Expected a valid parent ID to be present for nested update to-one case.")`,
  timestamp: '16/Aug/2022:04:44:44 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:44:44 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:04:44:44 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:45:14 +0000] "GET /api/v1/users/10001 HTTP/1.1" 200 160\n',
  timestamp: '16/Aug/2022:04:45:14 +0800'
}
{
  request: {
    method: 'PATCH',
    url: '/api/v1/users/10001/profile',
    remoteAddress: '::1',
    body: {
      firstName: 'Jody',
      lastName: 'Crist',
      imageUrl: 'https://cdn.fakercloud.com/avatars/jedbridges_128.jpg',
      bio: 'Non ducimus excepturi similique quos voluptatum sed et. Illo qui molestiae quia consequatur excepturi et. Odio sunt error dolorem qui explicabo voluptas animi eos quae.'
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.update()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:108:36\n' +
    '\n' +
    '  105 validateSchema(CreateProfileSchema),\n' +
    '  106 asyncHandler(async (req, res) => {\n' +
    '  107   const { id } = req.params;\n' +
    '→ 108   const user = await prisma.user.update(\n' +
    `  Query interpretation error. Error for binding '1': AssertionError("Expected a valid parent ID to be present for nested update to-one case.")`,
  timestamp: '16/Aug/2022:04:45:18 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:45:18 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:04:45:18 +0800'
}
{
  request: {
    method: 'PATCH',
    url: '/api/v1/users/10001/profile',
    remoteAddress: '::1',
    body: {
      firstName: 'Marlon',
      lastName: 'Bahringer',
      imageUrl: 'https://cdn.fakercloud.com/avatars/ariffsetiawan_128.jpg',
      bio: 'Et qui sed explicabo voluptate. Voluptatem molestiae eos sint accusantium aliquid qui. Et fugit deserunt ex.'
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.update()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:110:36\n' +
    '\n' +
    '  107 const { id } = req.params;\n' +
    '  108 console.log(id);\n' +
    '  109 console.log(Number(id));\n' +
    '→ 110 const user = await prisma.user.update(\n' +
    `  Query interpretation error. Error for binding '1': AssertionError("Expected a valid parent ID to be present for nested update to-one case.")`,
  timestamp: '16/Aug/2022:04:45:36 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:45:36 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:04:45:36 +0800'
}
{
  request: {
    method: 'PATCH',
    url: '/api/v1/users/10001/profile',
    remoteAddress: '::1',
    body: {
      firstName: 'Ophelia',
      lastName: 'Jacobs',
      imageUrl: 'https://cdn.fakercloud.com/avatars/marcusgorillius_128.jpg',
      bio: 'Quae amet ut consequuntur quod corrupti commodi beatae. Occaecati possimus tempore quo veniam nulla consequatur. In asperiores nihil sit fugiat expedita et eos. Quia consequatur ab quidem quos atque laboriosam quia.'
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.update()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:110:36\n' +
    '\n' +
    '  107 const { id } = req.params;\n' +
    '  108 console.log(id);\n' +
    '  109 console.log(Number(id));\n' +
    '→ 110 const user = await prisma.user.update(\n' +
    `  Query interpretation error. Error for binding '1': AssertionError("Expected a valid parent ID to be present for nested update to-one case.")`,
  timestamp: '16/Aug/2022:04:46:01 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:46:01 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:04:46:01 +0800'
}
{
  request: {
    method: 'PATCH',
    url: '/api/v1/users/10001/profile',
    remoteAddress: '::1',
    body: {
      firstName: 'Lacy',
      lastName: 'Carter',
      imageUrl: 'https://cdn.fakercloud.com/avatars/dzantievm_128.jpg',
      bio: 'Cupiditate inventore nihil rerum. Earum eaque molestiae. Recusandae inventore sit eveniet nisi dolorem voluptates sint beatae aspernatur. Consequuntur sed dolores rem eaque eos vel tenetur id ea.'
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.update()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:109:36\n' +
    '\n' +
    '  106 asyncHandler(async (req, res) => {\n' +
    '  107   const { id } = req.params;\n' +
    '  108   console.log(req.body);\n' +
    '→ 109   const user = await prisma.user.update(\n' +
    `  Query interpretation error. Error for binding '1': AssertionError("Expected a valid parent ID to be present for nested update to-one case.")`,
  timestamp: '16/Aug/2022:04:46:09 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:46:09 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:04:46:09 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:46:35 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 400 93\n',
  timestamp: '16/Aug/2022:04:46:35 +0800'
}
{
  request: {
    method: 'PATCH',
    url: '/api/v1/users/10001/profile',
    remoteAddress: '::1',
    body: {
      firstName: 'Jaquelin',
      lastName: 'Huels',
      imageUrl: 'https://cdn.fakercloud.com/avatars/notbadart_128.jpg'
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.update()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:109:36\n' +
    '\n' +
    '  106 asyncHandler(async (req, res) => {\n' +
    '  107   const { id } = req.params;\n' +
    '  108   console.log(req.body);\n' +
    '→ 109   const user = await prisma.user.update(\n' +
    `  Query interpretation error. Error for binding '1': AssertionError("Expected a valid parent ID to be present for nested update to-one case.")`,
  timestamp: '16/Aug/2022:04:46:40 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:46:40 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:04:46:40 +0800'
}
{
  request: {
    method: 'PATCH',
    url: '/api/v1/users/10001/profile',
    remoteAddress: '::1',
    body: {
      firstName: 'Dorcas',
      lastName: 'Bogisich',
      imageUrl: 'https://cdn.fakercloud.com/avatars/jodytaggart_128.jpg',
      bio: 'Eligendi dolor qui quibusdam vel fugiat ea quam. Aspernatur inventore adipisci facilis dicta ullam enim expedita ut nobis. Nemo aspernatur rem dolorem error est ut rem facere asperiores. Qui maiores vel fugit qui.'
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.update()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:109:36\n' +
    '\n' +
    '  106 asyncHandler(async (req, res) => {\n' +
    '  107   const { id } = req.params;\n' +
    '  108   console.log(req.body);\n' +
    '→ 109   const user = await prisma.user.update(\n' +
    `  Query interpretation error. Error for binding '1': AssertionError("Expected a valid parent ID to be present for nested update to-one case.")`,
  timestamp: '16/Aug/2022:04:47:00 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:47:00 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:04:47:00 +0800'
}
{
  request: {
    method: 'PATCH',
    url: '/api/v1/users/10001/profile',
    remoteAddress: '::1',
    body: {
      firstName: 'Jasen',
      lastName: 'Farrell',
      imageUrl: 'https://cdn.fakercloud.com/avatars/nvkznemo_128.jpg',
      bio: 'Sapiente a ipsam in et vitae optio et ex. Dolorem earum aut nulla earum tempora animi dignissimos fuga. Et dolor nam impedit voluptas debitis error est cupiditate. Voluptatem ea aut.'
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.update()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:109:36\n' +
    '\n' +
    '  106 asyncHandler(async (req, res) => {\n' +
    '  107   const { id } = req.params;\n' +
    '  108   console.log(req.body);\n' +
    '→ 109   const user = await prisma.user.update(\n' +
    `  Query interpretation error. Error for binding '1': AssertionError("Expected a valid parent ID to be present for nested update to-one case.")`,
  timestamp: '16/Aug/2022:04:47:07 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:47:07 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:04:47:07 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:49:07 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 404 167\n',
  timestamp: '16/Aug/2022:04:49:07 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:49:11 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 200 270\n',
  timestamp: '16/Aug/2022:04:49:11 +0800'
}
{
  request: {
    method: 'POST',
    url: '/api/v1/users/10001/profile',
    remoteAddress: '::1',
    body: {
      firstName: 'Mercedes',
      lastName: 'Hermiston',
      imageUrl: 'https://cdn.fakercloud.com/avatars/aroon_sharma_128.jpg',
      bio: 'Placeat et officiis molestiae laboriosam odit deserunt occaecati similique sit. Provident repudiandae et debitis expedita deleniti dolor. Voluptate officia porro.'
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.update()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:109:36\n' +
    '\n' +
    '  106 asyncHandler(async (req, res) => {\n' +
    '  107   const { id } = req.params;\n' +
    '  108   console.log(req.body);\n' +
    '→ 109   const user = await prisma.user.update(\n' +
    "  The change you are trying to make would violate the required relation 'ProfileToUser' between the `Profile` and `User` models.",
  timestamp: '16/Aug/2022:04:49:22 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:49:22 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:04:49:22 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:50:57 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 409 53\n',
  timestamp: '16/Aug/2022:04:50:57 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:50:58 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 409 53\n',
  timestamp: '16/Aug/2022:04:50:58 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:52:12 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 404 167\n',
  timestamp: '16/Aug/2022:04:52:12 +0800'
}
{
  request: {
    method: 'PATCH',
    url: '/api/v1/users/10001/profile',
    remoteAddress: '::1',
    body: {
      firstName: 'Ardith',
      lastName: 'Wolf',
      imageUrl: 'https://cdn.fakercloud.com/avatars/9lessons_128.jpg',
      bio: 'Illo illo molestiae rem odio similique aut dicta facilis omnis. Necessitatibus ipsam aut nisi dolorem magnam praesentium facilis. Aliquid recusandae excepturi. Ea deserunt cupiditate temporibus nam aut consectetur aut. Laudantium id reiciendis optio voluptate ex recusandae deserunt. Sed iure architecto voluptatibus quis labore quam temporibus deserunt.'
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.update()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:135:36\n' +
    '\n' +
    '  132 validateSchema(CreateProfileSchema),\n' +
    '  133 asyncHandler(async (req, res) => {\n' +
    '  134   const { id } = req.params;\n' +
    '→ 135   const user = await prisma.user.update(\n' +
    "  The provided value for the column is too long for the column's type. Column: bio",
  timestamp: '16/Aug/2022:04:52:27 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:52:27 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:04:52:27 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:52:33 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 200 622\n',
  timestamp: '16/Aug/2022:04:52:33 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:52:49 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 200 635\n',
  timestamp: '16/Aug/2022:04:52:49 +0800'
}
{
  request: {
    method: 'PATCH',
    url: '/api/v1/users/10001/profile',
    remoteAddress: '::1',
    body: {
      firstName: 'Regan',
      lastName: 'Botsford',
      imageUrl: 'https://cdn.fakercloud.com/avatars/samgrover_128.jpg',
      bio: 'Eos ipsum neque repellendus adipisci. Nulla ea temporibus deleniti sit aut et dolorum. Aperiam totam ipsa id et at expedita laudantium. Eaque fuga rerum. Recusandae consequuntur a consequuntur voluptates eligendi molestias aspernatur cum debitis.'
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.update()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:135:36\n' +
    '\n' +
    '  132 validateSchema(CreateProfileSchema),\n' +
    '  133 asyncHandler(async (req, res) => {\n' +
    '  134   const { id } = req.params;\n' +
    '→ 135   const user = await prisma.user.update(\n' +
    "  The provided value for the column is too long for the column's type. Column: bio",
  timestamp: '16/Aug/2022:04:52:50 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:52:50 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:04:52:50 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:53:08 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 400 205\n',
  timestamp: '16/Aug/2022:04:53:08 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:54:29 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 200 663\n',
  timestamp: '16/Aug/2022:04:54:29 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:54:31 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 200 755\n',
  timestamp: '16/Aug/2022:04:54:31 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:54:32 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 200 579\n',
  timestamp: '16/Aug/2022:04:54:32 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:54:33 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 200 672\n',
  timestamp: '16/Aug/2022:04:54:33 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:54:33 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 200 705\n',
  timestamp: '16/Aug/2022:04:54:33 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:54:34 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 200 570\n',
  timestamp: '16/Aug/2022:04:54:34 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:54:35 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 200 731\n',
  timestamp: '16/Aug/2022:04:54:35 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:54:36 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 200 612\n',
  timestamp: '16/Aug/2022:04:54:36 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:54:37 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 200 606\n',
  timestamp: '16/Aug/2022:04:54:37 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:54:51 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 200 645\n',
  timestamp: '16/Aug/2022:04:54:51 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:54:52 +0000] "PATCH /api/v1/users/10001/profile HTTP/1.1" 200 469\n',
  timestamp: '16/Aug/2022:04:54:52 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:54:55 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 409 53\n',
  timestamp: '16/Aug/2022:04:54:55 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:55:19 +0000] "GET /api/v1/users/profile HTTP/1.1" 200 1738\n',
  timestamp: '16/Aug/2022:04:55:19 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:55:24 +0000] "GET /api/v1/users/1/profile HTTP/1.1" 200 184\n',
  timestamp: '16/Aug/2022:04:55:24 +0800'
}
{
  level: 'access',
  message: '::1 - [15/Aug/2022:20:55:29 +0000] "GET /api/v1/users/10001/profile HTTP/1.1" 200 469\n',
  timestamp: '16/Aug/2022:04:55:29 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:06:58:58 +0000] "POST /api/v1/users/10001/profile HTTP/1.1" 409 53\n',
  timestamp: '16/Aug/2022:02:58:58 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:06:59:01 +0000] "POST /api/v1/users/10002/profile HTTP/1.1" 200 493\n',
  timestamp: '16/Aug/2022:02:59:01 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:06:59:05 +0000] "POST /api/v1/users/1/profile HTTP/1.1" 200 568\n',
  timestamp: '16/Aug/2022:02:59:05 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:06:59:07 +0000] "POST /api/v1/users/1/profile HTTP/1.1" 409 53\n',
  timestamp: '16/Aug/2022:02:59:07 +0800'
}
{
  request: {
    method: 'PATCH',
    url: '/api/v1/users/2/profile',
    remoteAddress: '::1',
    body: {
      firstName: 'Zoie',
      lastName: 'Rau',
      imageUrl: 'https://cdn.fakercloud.com/avatars/belyaev_rs_128.jpg',
      bio: 'Voluptatem consectetur omnis quas est qui repellat. Sunt qui et. Deleniti voluptas ullam iure quia blanditiis iure odit earum.'
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.update()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:136:36\n' +
    '\n' +
    '  133 validateSchema(CreateProfileSchema),\n' +
    '  134 asyncHandler(async (req, res) => {\n' +
    '  135   const { id } = req.params;\n' +
    '→ 136   const user = await prisma.user.update(\n' +
    `  Query interpretation error. Error for binding '1': AssertionError("Expected a valid parent ID to be present for nested update to-one case.")`,
  timestamp: '16/Aug/2022:02:59:12 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:06:59:12 +0000] "PATCH /api/v1/users/2/profile HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:02:59:12 +0800'
}
{
  request: {
    method: 'POST',
    url: '/api/v1/users/1/profile',
    remoteAddress: '::1',
    body: {
      firstName: 'Eldora',
      lastName: 'Borer',
      imageUrl: 'https://cdn.fakercloud.com/avatars/sindresorhus_128.jpg',
      bio: 'Itaque magnam voluptate amet sunt et voluptas iste dolores. Reprehenderit vel soluta occaecati laboriosam assumenda. Consequatur illum deserunt deserunt officia. Id ut est nulla sed quibusdam corporis voluptatem ut. Minima neque similique quidem nihil id hic sapiente.'
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.update()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:114:36\n' +
    '\n' +
    '  111 // if (existingProfile) {\n' +
    "  112 //   throw createError(409, 'Profile already exists');\n" +
    '  113 // }\n' +
    '→ 114 const user = await prisma.user.update(\n' +
    "  The change you are trying to make would violate the required relation 'ProfileToUser' between the `Profile` and `User` models.",
  timestamp: '16/Aug/2022:03:00:28 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:07:00:28 +0000] "POST /api/v1/users/1/profile HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:03:00:28 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:07:01:09 +0000] "POST /api/v1/users/1/profile HTTP/1.1" 200 568\n',
  timestamp: '16/Aug/2022:03:01:09 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:07:01:11 +0000] "POST /api/v1/users/1/profile HTTP/1.1" 200 568\n',
  timestamp: '16/Aug/2022:03:01:11 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:07:01:12 +0000] "POST /api/v1/users/1/profile HTTP/1.1" 200 568\n',
  timestamp: '16/Aug/2022:03:01:12 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:07:01:47 +0000] "POST /api/v1/users/1/profile HTTP/1.1" 200 568\n',
  timestamp: '16/Aug/2022:03:01:47 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:07:01:48 +0000] "POST /api/v1/users/1/profile HTTP/1.1" 200 568\n',
  timestamp: '16/Aug/2022:03:01:48 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:07:03:14 +0000] "PATCH /api/v1/users/2/profile HTTP/1.1" 404 59\n',
  timestamp: '16/Aug/2022:03:03:14 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:07:03:20 +0000] "POST /api/v1/users/2/profile HTTP/1.1" 200 595\n',
  timestamp: '16/Aug/2022:03:03:20 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:07:03:20 +0000] "POST /api/v1/users/2/profile HTTP/1.1" 409 53\n',
  timestamp: '16/Aug/2022:03:03:20 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:07:03:32 +0000] "PATCH /api/v1/users/2/profile HTTP/1.1" 200 593\n',
  timestamp: '16/Aug/2022:03:03:32 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:07:03:40 +0000] "PATCH /api/v1/users/2/profile HTTP/1.1" 200 564\n',
  timestamp: '16/Aug/2022:03:03:40 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:07:03:41 +0000] "PATCH /api/v1/users/2/profile HTTP/1.1" 200 677\n',
  timestamp: '16/Aug/2022:03:03:41 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:07:03:45 +0000] "PATCH /api/v1/users/2/profile HTTP/1.1" 200 695\n',
  timestamp: '16/Aug/2022:03:03:45 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:07:03:47 +0000] "PATCH /api/v1/users/2/profile HTTP/1.1" 200 496\n',
  timestamp: '16/Aug/2022:03:03:47 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:07:03:48 +0000] "PATCH /api/v1/users/2/profile HTTP/1.1" 200 509\n',
  timestamp: '16/Aug/2022:03:03:48 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:07:03:50 +0000] "PATCH /api/v1/users/2/profile HTTP/1.1" 200 514\n',
  timestamp: '16/Aug/2022:03:03:50 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:15:19 +0000] "PUT /api/v1/users/2/profile HTTP/1.1" 200 603\n',
  timestamp: '16/Aug/2022:04:15:19 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:15:20 +0000] "PUT /api/v1/users/2/profile HTTP/1.1" 200 619\n',
  timestamp: '16/Aug/2022:04:15:20 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:15:20 +0000] "PUT /api/v1/users/2/profile HTTP/1.1" 200 551\n',
  timestamp: '16/Aug/2022:04:15:20 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:15:21 +0000] "PUT /api/v1/users/2/profile HTTP/1.1" 200 480\n',
  timestamp: '16/Aug/2022:04:15:21 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:15:22 +0000] "PUT /api/v1/users/2/profile HTTP/1.1" 200 605\n',
  timestamp: '16/Aug/2022:04:15:22 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:15:23 +0000] "PUT /api/v1/users/2/profile HTTP/1.1" 200 554\n',
  timestamp: '16/Aug/2022:04:15:23 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:15:24 +0000] "PUT /api/v1/users/2/profile HTTP/1.1" 200 642\n',
  timestamp: '16/Aug/2022:04:15:24 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:15:34 +0000] "GET /api/v1/users/10001/profile HTTP/1.1" 200 469\n',
  timestamp: '16/Aug/2022:04:15:34 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:15:36 +0000] "GET /api/v1/users/10001/profile HTTP/1.1" 200 469\n',
  timestamp: '16/Aug/2022:04:15:36 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:15:40 +0000] "PUT /api/v1/users/1/profile HTTP/1.1" 200 556\n',
  timestamp: '16/Aug/2022:04:15:40 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:15:43 +0000] "GET /api/v1/users/1 HTTP/1.1" 200 169\n',
  timestamp: '16/Aug/2022:04:15:43 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:15:47 +0000] "GET /api/v1/users/10001/profile HTTP/1.1" 200 469\n',
  timestamp: '16/Aug/2022:04:15:47 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:15:48 +0000] "GET /api/v1/users/10001/profile HTTP/1.1" 200 469\n',
  timestamp: '16/Aug/2022:04:15:48 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:15:54 +0000] "PUT /api/v1/users/10001/profile HTTP/1.1" 200 615\n',
  timestamp: '16/Aug/2022:04:15:54 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:15:57 +0000] "GET /api/v1/users/10001/profile HTTP/1.1" 200 615\n',
  timestamp: '16/Aug/2022:04:15:57 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:15:59 +0000] "GET /api/v1/users/profile HTTP/1.1" 200 2567\n',
  timestamp: '16/Aug/2022:04:15:59 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:52:55 +0000] "GET /api/v1/users/3 HTTP/1.1" 200 160\n',
  timestamp: '16/Aug/2022:04:52:55 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:53:01 +0000] "DELETE /api/v1/users/31232133/profile HTTP/1.1" 404 45\n',
  timestamp: '16/Aug/2022:04:53:01 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:53:09 +0000] "POST /api/v1/users HTTP/1.1" 200 284\n',
  timestamp: '16/Aug/2022:04:53:09 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:53:15 +0000] "DELETE /api/v1/users/10006/profile HTTP/1.1" 200 283\n',
  timestamp: '16/Aug/2022:04:53:15 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:53:18 +0000] "DELETE /api/v1/users/10006/profile HTTP/1.1" 404 45\n',
  timestamp: '16/Aug/2022:04:53:18 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:53:21 +0000] "POST /api/v1/users HTTP/1.1" 200 290\n',
  timestamp: '16/Aug/2022:04:53:21 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:53:28 +0000] "GET /api/v1/users/10006 HTTP/1.1" 404 45\n',
  timestamp: '16/Aug/2022:04:53:28 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:53:29 +0000] "GET /api/v1/users/10007 HTTP/1.1" 200 179\n',
  timestamp: '16/Aug/2022:04:53:29 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:53:38 +0000] "GET /api/v1/users/10006/profile HTTP/1.1" 404 45\n',
  timestamp: '16/Aug/2022:04:53:38 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:53:40 +0000] "GET /api/v1/users/10007/profile HTTP/1.1" 200 194\n',
  timestamp: '16/Aug/2022:04:53:40 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:54:48 +0000] "DELETE /api/v1/users/10006/profile HTTP/1.1" 404 59\n',
  timestamp: '16/Aug/2022:04:54:48 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:55:00 +0000] "POST /api/v1/users/10007/profile HTTP/1.1" 200 612\n',
  timestamp: '16/Aug/2022:04:55:00 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:55:03 +0000] "POST /api/v1/users/10007/profile HTTP/1.1" 409 53\n',
  timestamp: '16/Aug/2022:04:55:03 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:55:07 +0000] "PUT /api/v1/users/10007/profile HTTP/1.1" 200 565\n',
  timestamp: '16/Aug/2022:04:55:07 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:55:07 +0000] "PUT /api/v1/users/10007/profile HTTP/1.1" 200 485\n',
  timestamp: '16/Aug/2022:04:55:07 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:55:25 +0000] "DELETE /api/v1/users/10006/profile HTTP/1.1" 404 53\n',
  timestamp: '16/Aug/2022:04:55:25 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:55:29 +0000] "DELETE /api/v1/users/10007/profile HTTP/1.1" 200 304\n',
  timestamp: '16/Aug/2022:04:55:29 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:56:01 +0000] "DELETE /api/v1/users/10007/profile HTTP/1.1" 404 53\n',
  timestamp: '16/Aug/2022:04:56:01 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:56:12 +0000] "POST /api/v1/users/10007/profile HTTP/1.1" 200 533\n',
  timestamp: '16/Aug/2022:04:56:12 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:08:56:14 +0000] "DELETE /api/v1/users/10007/profile HTTP/1.1" 200 643\n',
  timestamp: '16/Aug/2022:04:56:14 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:09:11:16 +0000] "PUT /api/v1/users/1 HTTP/1.1" 200 176\n',
  timestamp: '16/Aug/2022:05:11:16 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:09:11:21 +0000] "PUT /api/v1/users/1 HTTP/1.1" 200 166\n',
  timestamp: '16/Aug/2022:05:11:21 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:09:11:22 +0000] "PUT /api/v1/users/1 HTTP/1.1" 200 166\n',
  timestamp: '16/Aug/2022:05:11:22 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:09:11:27 +0000] "PUT /api/v1/users/1 HTTP/1.1" 400 223\n',
  timestamp: '16/Aug/2022:05:11:27 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:09:11:29 +0000] "PUT /api/v1/users/1 HTTP/1.1" 200 176\n',
  timestamp: '16/Aug/2022:05:11:29 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:09:11:30 +0000] "PUT /api/v1/users/1 HTTP/1.1" 200 174\n',
  timestamp: '16/Aug/2022:05:11:30 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:09:11:36 +0000] "PATCH /api/v1/users/1 HTTP/1.1" 200 166\n',
  timestamp: '16/Aug/2022:05:11:36 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:09:11:45 +0000] "PATCH /api/v1/users/1 HTTP/1.1" 200 163\n',
  timestamp: '16/Aug/2022:05:11:45 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:09:11:48 +0000] "PATCH /api/v1/users/1 HTTP/1.1" 401 43\n',
  timestamp: '16/Aug/2022:05:11:48 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:09:11:49 +0000] "PATCH /api/v1/users/1 HTTP/1.1" 401 43\n',
  timestamp: '16/Aug/2022:05:11:49 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:09:11:54 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 174\n',
  timestamp: '16/Aug/2022:05:11:54 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:09:12:00 +0000] "PUT /api/v1/users/16 HTTP/1.1" 200 177\n',
  timestamp: '16/Aug/2022:05:12:00 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:09:12:05 +0000] "PUT /api/v1/users/16 HTTP/1.1" 200 168\n',
  timestamp: '16/Aug/2022:05:12:05 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:09:12:06 +0000] "PUT /api/v1/users/16 HTTP/1.1" 200 168\n',
  timestamp: '16/Aug/2022:05:12:06 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:09:12:09 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 168\n',
  timestamp: '16/Aug/2022:05:12:09 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:09:12:12 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 160\n',
  timestamp: '16/Aug/2022:05:12:12 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:09:12:16 +0000] "PUT /api/v1/users/16 HTTP/1.1" 200 175\n',
  timestamp: '16/Aug/2022:05:12:16 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:09:12:18 +0000] "PUT /api/v1/users/16 HTTP/1.1" 401 43\n',
  timestamp: '16/Aug/2022:05:12:18 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:10:39:08 +0000] "GET /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '16/Aug/2022:06:39:08 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:10:44:05 +0000] "GET /api/v1/products HTTP/1.1" 200 15\n',
  timestamp: '16/Aug/2022:06:44:05 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:10:49:53 +0000] "POST /api/v1/users HTTP/1.1" 401 43\n',
  timestamp: '16/Aug/2022:06:49:53 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:10:49:56 +0000] "POST /api/v1/users HTTP/1.1" 200 272\n',
  timestamp: '16/Aug/2022:06:49:56 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:10:49:59 +0000] "POST /api/v1/users HTTP/1.1" 200 285\n',
  timestamp: '16/Aug/2022:06:49:59 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:10:51:11 +0000] "DELETE /api/v1/users/4 HTTP/1.1" 200 271\n',
  timestamp: '16/Aug/2022:06:51:11 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:10:51:28 +0000] "DELETE /api/v1/users/4 HTTP/1.1" 404 45\n',
  timestamp: '16/Aug/2022:06:51:28 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:10:51:39 +0000] "DELETE /api/v1/users/5/profile HTTP/1.1" 404 53\n',
  timestamp: '16/Aug/2022:06:51:39 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:10:51:41 +0000] "DELETE /api/v1/users/6/profile HTTP/1.1" 404 53\n',
  timestamp: '16/Aug/2022:06:51:41 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:10:51:43 +0000] "DELETE /api/v1/users/7/profile HTTP/1.1" 404 53\n',
  timestamp: '16/Aug/2022:06:51:43 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:10:51:45 +0000] "DELETE /api/v1/users/8/profile HTTP/1.1" 404 53\n',
  timestamp: '16/Aug/2022:06:51:45 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:10:51:49 +0000] "POST /api/v1/users/5/profile HTTP/1.1" 200 578\n',
  timestamp: '16/Aug/2022:06:51:49 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:10:51:53 +0000] "DELETE /api/v1/users/5/profile HTTP/1.1" 200 291\n',
  timestamp: '16/Aug/2022:06:51:53 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:10:51:56 +0000] "DELETE /api/v1/users/5/profile HTTP/1.1" 404 53\n',
  timestamp: '16/Aug/2022:06:51:56 +0800'
}
{
  request: {
    method: 'PUT',
    url: '/api/v1/users/1612312',
    remoteAddress: '::1',
    body: {
      email: 'Hortense_Quitzon@hotmail.com',
      username: 'Betty.Littel',
      password: '1q!Q1q!Q',
      role: 'user'
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.update()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:137:36\n' +
    '\n' +
    '  134 asyncHandler(async (req, res) => {\n' +
    '  135   const { id } = req.params;\n' +
    '  136   const { password, ...rest } = req.body;\n' +
    '→ 137   const user = await prisma.user.update(\n' +
    '  An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  timestamp: '16/Aug/2022:07:14:04 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:14:04 +0000] "PUT /api/v1/users/1612312 HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:07:14:04 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:16:34 +0000] "POST /api/v1/users HTTP/1.1" 200 290\n',
  timestamp: '16/Aug/2022:07:16:34 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:16:39 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 174\n',
  timestamp: '16/Aug/2022:07:16:39 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:17:00 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 180\n',
  timestamp: '16/Aug/2022:07:17:00 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:17:01 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 173\n',
  timestamp: '16/Aug/2022:07:17:01 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:17:02 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 173\n',
  timestamp: '16/Aug/2022:07:17:02 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:17:03 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 176\n',
  timestamp: '16/Aug/2022:07:17:03 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:18:16 +0000] "PATCH /api/v1/users/1232123123 HTTP/1.1" 404 45\n',
  timestamp: '16/Aug/2022:07:18:16 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:18:19 +0000] "PATCH /api/v1/users/123 HTTP/1.1" 200 187\n',
  timestamp: '16/Aug/2022:07:18:19 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:18:20 +0000] "PATCH /api/v1/users/123 HTTP/1.1" 200 167\n',
  timestamp: '16/Aug/2022:07:18:20 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:18:20 +0000] "PATCH /api/v1/users/123 HTTP/1.1" 200 180\n',
  timestamp: '16/Aug/2022:07:18:20 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:19:02 +0000] "PATCH /api/v1/users/1230124 HTTP/1.1" 404 45\n',
  timestamp: '16/Aug/2022:07:19:02 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:19:04 +0000] "PATCH /api/v1/users/1230123 HTTP/1.1" 200 176\n',
  timestamp: '16/Aug/2022:07:19:04 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:19:04 +0000] "PATCH /api/v1/users/1230123 HTTP/1.1" 200 183\n',
  timestamp: '16/Aug/2022:07:19:04 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:19:28 +0000] "DELETE /api/v1/users/1230123/profile HTTP/1.1" 404 53\n',
  timestamp: '16/Aug/2022:07:19:28 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:19:48 +0000] "DELETE /api/v1/users/1230124/profile HTTP/1.1" 404 45\n',
  timestamp: '16/Aug/2022:07:19:48 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:19:50 +0000] "DELETE /api/v1/users/1230123/profile HTTP/1.1" 404 53\n',
  timestamp: '16/Aug/2022:07:19:50 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:19:58 +0000] "POST /api/v1/users/1230123/profile HTTP/1.1" 200 643\n',
  timestamp: '16/Aug/2022:07:19:58 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:20:01 +0000] "POST /api/v1/users/1230123/profile HTTP/1.1" 409 53\n',
  timestamp: '16/Aug/2022:07:20:01 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:20:06 +0000] "DELETE /api/v1/users/1230123/profile HTTP/1.1" 200 308\n',
  timestamp: '16/Aug/2022:07:20:06 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:20:07 +0000] "DELETE /api/v1/users/1230123/profile HTTP/1.1" 404 53\n',
  timestamp: '16/Aug/2022:07:20:07 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:20:16 +0000] "POST /api/v1/users/1230123/profile HTTP/1.1" 200 554\n',
  timestamp: '16/Aug/2022:07:20:16 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:20:18 +0000] "DELETE /api/v1/users/1230123/profile HTTP/1.1" 200 198\n',
  timestamp: '16/Aug/2022:07:20:18 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:22:24 +0000] "DELETE /api/v1/users/1230123/profile HTTP/1.1" 404 53\n',
  timestamp: '16/Aug/2022:07:22:24 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:23:52 +0000] "DELETE /api/v1/users/1230123/profile HTTP/1.1" 404 53\n',
  timestamp: '16/Aug/2022:07:23:52 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:23:54 +0000] "POST /api/v1/users/1230123/profile HTTP/1.1" 200 633\n',
  timestamp: '16/Aug/2022:07:23:54 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:23:56 +0000] "DELETE /api/v1/users/1230123/profile HTTP/1.1" 200 226\n',
  timestamp: '16/Aug/2022:07:23:56 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:24:01 +0000] "DELETE /api/v1/users/1230123/profile HTTP/1.1" 404 53\n',
  timestamp: '16/Aug/2022:07:24:01 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:24:17 +0000] "DELETE /api/v1/users/1230123 HTTP/1.1" 200 318\n',
  timestamp: '16/Aug/2022:07:24:17 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:25:39 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 170\n',
  timestamp: '16/Aug/2022:07:25:39 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:25:40 +0000] "DELETE /api/v1/users/1230123 HTTP/1.1" 200 195\n',
  timestamp: '16/Aug/2022:07:25:40 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:26:06 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 165\n',
  timestamp: '16/Aug/2022:07:26:06 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:26:09 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 173\n',
  timestamp: '16/Aug/2022:07:26:09 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:26:10 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 167\n',
  timestamp: '16/Aug/2022:07:26:10 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:26:11 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 177\n',
  timestamp: '16/Aug/2022:07:26:11 +0800'
}
{
  request: {
    method: 'PUT',
    url: '/api/v1/users/1230123',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: 1230123\n' +
    '  },\n' +
    '  update: {\n' +
    '    password: undefined\n' +
    '  },\n' +
    '  create: {\n' +
    '    id: 1230123,\n' +
    '    ~~\n' +
    '+   password: String,\n' +
    '+   email: String,\n' +
    '+   username: String,\n' +
    '?   role?: admin | user,\n' +
    '?   createdAt?: DateTime,\n' +
    '?   updatedAt?: DateTime,\n' +
    '?   profile?: {\n' +
    '?     create?: ProfileCreateWithoutUserInput | ProfileUncheckedCreateWithoutUserInput,\n' +
    '?     connectOrCreate?: ProfileCreateOrConnectWithoutUserInput,\n' +
    '?     connect?: ProfileWhereUniqueInput\n' +
    '?   },\n' +
    '?   cart?: {\n' +
    '?     create?: CartCreateWithoutUserInput | CartUncheckedCreateWithoutUserInput,\n' +
    '?     connectOrCreate?: CartCreateOrConnectWithoutUserInput,\n' +
    '?     connect?: CartWhereUniqueInput\n' +
    '?   },\n' +
    '?   orders?: {\n' +
    '?     create?: OrderCreateWithoutUserInput | OrderCreateWithoutUserInput | OrderUncheckedCreateWithoutUserInput | OrderUncheckedCreateWithoutUserInput,\n' +
    '?     connectOrCreate?: OrderCreateOrConnectWithoutUserInput | OrderCreateOrConnectWithoutUserInput,\n' +
    '?     createMany?: OrderCreateManyUserInputEnvelope,\n' +
    '?     connect?: OrderWhereUniqueInput | OrderWhereUniqueInput\n' +
    '?   }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Unknown arg `id` in create.id for type UserCreateInput.\n' +
    'Argument email for create.email is missing.\n' +
    'Argument username for create.username is missing.\n' +
    'Argument password for create.password is missing.\n' +
    '\n' +
    'Note: Lines with + are required, lines with ? are optional.\n',
  timestamp: '16/Aug/2022:07:26:16 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:26:16 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:07:26:16 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:26:23 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 400 93\n',
  timestamp: '16/Aug/2022:07:26:23 +0800'
}
{
  request: {
    method: 'PUT',
    url: '/api/v1/users/1230123',
    remoteAddress: '::1',
    body: {
      email: 'Katherine.Corwin@hotmail.com',
      username: 'Eusebio_Abernathy42',
      role: 'user'
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: 1230123\n' +
    '  },\n' +
    '  update: {\n' +
    "    email: 'Katherine.Corwin@hotmail.com',\n" +
    "    username: 'Eusebio_Abernathy42',\n" +
    "    role: 'user',\n" +
    '    password: undefined\n' +
    '  },\n' +
    '  create: {\n' +
    "    email: 'Katherine.Corwin@hotmail.com',\n" +
    "    username: 'Eusebio_Abernathy42',\n" +
    "    role: 'user',\n" +
    '    id: 1230123,\n' +
    '    ~~\n' +
    '+   password: String,\n' +
    '?   createdAt?: DateTime,\n' +
    '?   updatedAt?: DateTime,\n' +
    '?   profile?: {\n' +
    '?     create?: ProfileCreateWithoutUserInput | ProfileUncheckedCreateWithoutUserInput,\n' +
    '?     connectOrCreate?: ProfileCreateOrConnectWithoutUserInput,\n' +
    '?     connect?: ProfileWhereUniqueInput\n' +
    '?   },\n' +
    '?   cart?: {\n' +
    '?     create?: CartCreateWithoutUserInput | CartUncheckedCreateWithoutUserInput,\n' +
    '?     connectOrCreate?: CartCreateOrConnectWithoutUserInput,\n' +
    '?     connect?: CartWhereUniqueInput\n' +
    '?   },\n' +
    '?   orders?: {\n' +
    '?     create?: OrderCreateWithoutUserInput | OrderCreateWithoutUserInput | OrderUncheckedCreateWithoutUserInput | OrderUncheckedCreateWithoutUserInput,\n' +
    '?     connectOrCreate?: OrderCreateOrConnectWithoutUserInput | OrderCreateOrConnectWithoutUserInput,\n' +
    '?     createMany?: OrderCreateManyUserInputEnvelope,\n' +
    '?     connect?: OrderWhereUniqueInput | OrderWhereUniqueInput\n' +
    '?   }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Unknown arg `id` in create.id for type UserCreateInput.\n' +
    'Argument password for create.password is missing.\n' +
    '\n' +
    'Note: Lines with + are required, lines with ? are optional.\n',
  timestamp: '16/Aug/2022:07:26:26 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:26:26 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:07:26:26 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:31:50 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 178\n',
  timestamp: '16/Aug/2022:07:31:50 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:31:54 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 182\n',
  timestamp: '16/Aug/2022:07:31:54 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:32:53 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 170\n',
  timestamp: '16/Aug/2022:07:32:53 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:32:56 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 273\n',
  timestamp: '16/Aug/2022:07:32:56 +0800'
}
{
  request: {
    method: 'PUT',
    url: '/api/v1/users/1230123',
    remoteAddress: '::1',
    body: {
      email: 'Dejon_Gutmann@yahoo.com',
      username: 'Olaf84',
      role: 'user'
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: 1230123\n' +
    '  },\n' +
    '  update: {\n' +
    "    email: 'Dejon_Gutmann@yahoo.com',\n" +
    "    username: 'Olaf84',\n" +
    "    role: 'user',\n" +
    '    password: undefined\n' +
    '  },\n' +
    '  create: {\n' +
    "    email: 'Dejon_Gutmann@yahoo.com',\n" +
    "    username: 'Olaf84',\n" +
    "    role: 'user',\n" +
    '    id: 1230123,\n' +
    '    ~~\n' +
    '+   password: String,\n' +
    '?   createdAt?: DateTime,\n' +
    '?   updatedAt?: DateTime,\n' +
    '?   profile?: {\n' +
    '?     create?: ProfileCreateWithoutUserInput | ProfileUncheckedCreateWithoutUserInput,\n' +
    '?     connectOrCreate?: ProfileCreateOrConnectWithoutUserInput,\n' +
    '?     connect?: ProfileWhereUniqueInput\n' +
    '?   },\n' +
    '?   cart?: {\n' +
    '?     create?: CartCreateWithoutUserInput | CartUncheckedCreateWithoutUserInput,\n' +
    '?     connectOrCreate?: CartCreateOrConnectWithoutUserInput,\n' +
    '?     connect?: CartWhereUniqueInput\n' +
    '?   },\n' +
    '?   orders?: {\n' +
    '?     create?: OrderCreateWithoutUserInput | OrderCreateWithoutUserInput | OrderUncheckedCreateWithoutUserInput | OrderUncheckedCreateWithoutUserInput,\n' +
    '?     connectOrCreate?: OrderCreateOrConnectWithoutUserInput | OrderCreateOrConnectWithoutUserInput,\n' +
    '?     createMany?: OrderCreateManyUserInputEnvelope,\n' +
    '?     connect?: OrderWhereUniqueInput | OrderWhereUniqueInput\n' +
    '?   }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Unknown arg `id` in create.id for type UserCreateInput.\n' +
    'Argument password for create.password is missing.\n' +
    '\n' +
    'Note: Lines with + are required, lines with ? are optional.\n',
  timestamp: '16/Aug/2022:07:32:58 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:32:58 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:07:32:58 +0800'
}
{
  request: {
    method: 'PUT',
    url: '/api/v1/users/1230123',
    remoteAddress: '::1',
    body: { email: 'Declan5@gmail.com', username: 'Florian9', role: 'user' }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: 1230123\n' +
    '  },\n' +
    '  update: {\n' +
    "    email: 'Declan5@gmail.com',\n" +
    "    username: 'Florian9',\n" +
    "    role: 'user',\n" +
    '    password: null\n' +
    '              ~~~~\n' +
    '  },\n' +
    '  create: {\n' +
    "    email: 'Declan5@gmail.com',\n" +
    "    username: 'Florian9',\n" +
    "    role: 'user',\n" +
    '    id: 1230123,\n' +
    '    ~~\n' +
    '+   password: String,\n' +
    '?   createdAt?: DateTime,\n' +
    '?   updatedAt?: DateTime,\n' +
    '?   profile?: {\n' +
    '?     create?: ProfileCreateWithoutUserInput | ProfileUncheckedCreateWithoutUserInput,\n' +
    '?     connectOrCreate?: ProfileCreateOrConnectWithoutUserInput,\n' +
    '?     connect?: ProfileWhereUniqueInput\n' +
    '?   },\n' +
    '?   cart?: {\n' +
    '?     create?: CartCreateWithoutUserInput | CartUncheckedCreateWithoutUserInput,\n' +
    '?     connectOrCreate?: CartCreateOrConnectWithoutUserInput,\n' +
    '?     connect?: CartWhereUniqueInput\n' +
    '?   },\n' +
    '?   orders?: {\n' +
    '?     create?: OrderCreateWithoutUserInput | OrderCreateWithoutUserInput | OrderUncheckedCreateWithoutUserInput | OrderUncheckedCreateWithoutUserInput,\n' +
    '?     connectOrCreate?: OrderCreateOrConnectWithoutUserInput | OrderCreateOrConnectWithoutUserInput,\n' +
    '?     createMany?: OrderCreateManyUserInputEnvelope,\n' +
    '?     connect?: OrderWhereUniqueInput | OrderWhereUniqueInput\n' +
    '?   }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument password for update.password must not be null. Please use undefined instead.\n' +
    'Unknown arg `id` in create.id for type UserCreateInput.\n' +
    'Argument password for create.password is missing.\n' +
    '\n' +
    'Note: Lines with + are required, lines with ? are optional.\n',
  timestamp: '16/Aug/2022:07:33:27 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:33:27 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:07:33:27 +0800'
}
{
  request: {
    method: 'PUT',
    url: '/api/v1/users/1230123',
    remoteAddress: '::1',
    body: {
      email: 'Maxie_Halvorson@gmail.com',
      username: 'Hillard.Dibbert65',
      role: 'user'
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: 1230123\n' +
    '  },\n' +
    '  update: {\n' +
    "    email: 'Maxie_Halvorson@gmail.com',\n" +
    "    username: 'Hillard.Dibbert65',\n" +
    "    role: 'user',\n" +
    "    password: '1q!Q1q!Q'\n" +
    '  },\n' +
    '  create: {\n' +
    "    email: 'Maxie_Halvorson@gmail.com',\n" +
    "    username: 'Hillard.Dibbert65',\n" +
    "    role: 'user',\n" +
    '    id: 1230123,\n' +
    '    ~~\n' +
    '+   password: String,\n' +
    '?   createdAt?: DateTime,\n' +
    '?   updatedAt?: DateTime,\n' +
    '?   profile?: {\n' +
    '?     create?: ProfileCreateWithoutUserInput | ProfileUncheckedCreateWithoutUserInput,\n' +
    '?     connectOrCreate?: ProfileCreateOrConnectWithoutUserInput,\n' +
    '?     connect?: ProfileWhereUniqueInput\n' +
    '?   },\n' +
    '?   cart?: {\n' +
    '?     create?: CartCreateWithoutUserInput | CartUncheckedCreateWithoutUserInput,\n' +
    '?     connectOrCreate?: CartCreateOrConnectWithoutUserInput,\n' +
    '?     connect?: CartWhereUniqueInput\n' +
    '?   },\n' +
    '?   orders?: {\n' +
    '?     create?: OrderCreateWithoutUserInput | OrderCreateWithoutUserInput | OrderUncheckedCreateWithoutUserInput | OrderUncheckedCreateWithoutUserInput,\n' +
    '?     connectOrCreate?: OrderCreateOrConnectWithoutUserInput | OrderCreateOrConnectWithoutUserInput,\n' +
    '?     createMany?: OrderCreateManyUserInputEnvelope,\n' +
    '?     connect?: OrderWhereUniqueInput | OrderWhereUniqueInput\n' +
    '?   }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Unknown arg `id` in create.id for type UserCreateInput.\n' +
    'Argument password for create.password is missing.\n' +
    '\n' +
    'Note: Lines with + are required, lines with ? are optional.\n',
  timestamp: '16/Aug/2022:07:33:33 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:33:33 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:07:33:33 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:33:41 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 199\n',
  timestamp: '16/Aug/2022:07:33:41 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:33:42 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 191\n',
  timestamp: '16/Aug/2022:07:33:42 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:33:57 +0000] "GET /api/v1/users/1230123 HTTP/1.1" 200 169\n',
  timestamp: '16/Aug/2022:07:33:57 +0800'
}
{
  request: {
    method: 'PUT',
    url: '/api/v1/users/1230123',
    remoteAddress: '::1',
    body: {
      email: 'Cheyenne86@yahoo.com',
      username: 'Verla.Hand77',
      role: 'user'
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: 1230123\n' +
    '  },\n' +
    '  update: {\n' +
    "    email: 'Cheyenne86@yahoo.com',\n" +
    "    username: 'Verla.Hand77',\n" +
    "    role: 'user',\n" +
    "    password: '1q!Q1q!Q'\n" +
    '  },\n' +
    '  create: {\n' +
    "    email: 'Cheyenne86@yahoo.com',\n" +
    "    username: 'Verla.Hand77',\n" +
    "    role: 'user',\n" +
    '    id: 1230123,\n' +
    '    ~~\n' +
    '+   password: String,\n' +
    '?   createdAt?: DateTime,\n' +
    '?   updatedAt?: DateTime,\n' +
    '?   profile?: {\n' +
    '?     create?: ProfileCreateWithoutUserInput | ProfileUncheckedCreateWithoutUserInput,\n' +
    '?     connectOrCreate?: ProfileCreateOrConnectWithoutUserInput,\n' +
    '?     connect?: ProfileWhereUniqueInput\n' +
    '?   },\n' +
    '?   cart?: {\n' +
    '?     create?: CartCreateWithoutUserInput | CartUncheckedCreateWithoutUserInput,\n' +
    '?     connectOrCreate?: CartCreateOrConnectWithoutUserInput,\n' +
    '?     connect?: CartWhereUniqueInput\n' +
    '?   },\n' +
    '?   orders?: {\n' +
    '?     create?: OrderCreateWithoutUserInput | OrderCreateWithoutUserInput | OrderUncheckedCreateWithoutUserInput | OrderUncheckedCreateWithoutUserInput,\n' +
    '?     connectOrCreate?: OrderCreateOrConnectWithoutUserInput | OrderCreateOrConnectWithoutUserInput,\n' +
    '?     createMany?: OrderCreateManyUserInputEnvelope,\n' +
    '?     connect?: OrderWhereUniqueInput | OrderWhereUniqueInput\n' +
    '?   }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Unknown arg `id` in create.id for type UserCreateInput.\n' +
    'Argument password for create.password is missing.\n' +
    '\n' +
    'Note: Lines with + are required, lines with ? are optional.\n',
  timestamp: '16/Aug/2022:07:34:02 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:34:02 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:07:34:02 +0800'
}
{
  request: {
    method: 'PUT',
    url: '/api/v1/users/1230123',
    remoteAddress: '::1',
    body: {
      email: 'Alexzander51@gmail.com',
      username: 'Leta47',
      role: 'user'
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: 1230123\n' +
    '  },\n' +
    '  update: {\n' +
    "    email: 'Alexzander51@gmail.com',\n" +
    "    username: 'Leta47',\n" +
    "    role: 'user',\n" +
    "    password: '1q!Q1q!Q'\n" +
    '  },\n' +
    '  create: {\n' +
    "    email: 'Alexzander51@gmail.com',\n" +
    "    username: 'Leta47',\n" +
    "    role: 'user',\n" +
    '    id: 1230123,\n' +
    '    ~~\n' +
    '+   password: String,\n' +
    '?   createdAt?: DateTime,\n' +
    '?   updatedAt?: DateTime,\n' +
    '?   profile?: {\n' +
    '?     create?: ProfileCreateWithoutUserInput | ProfileUncheckedCreateWithoutUserInput,\n' +
    '?     connectOrCreate?: ProfileCreateOrConnectWithoutUserInput,\n' +
    '?     connect?: ProfileWhereUniqueInput\n' +
    '?   },\n' +
    '?   cart?: {\n' +
    '?     create?: CartCreateWithoutUserInput | CartUncheckedCreateWithoutUserInput,\n' +
    '?     connectOrCreate?: CartCreateOrConnectWithoutUserInput,\n' +
    '?     connect?: CartWhereUniqueInput\n' +
    '?   },\n' +
    '?   orders?: {\n' +
    '?     create?: OrderCreateWithoutUserInput | OrderCreateWithoutUserInput | OrderUncheckedCreateWithoutUserInput | OrderUncheckedCreateWithoutUserInput,\n' +
    '?     connectOrCreate?: OrderCreateOrConnectWithoutUserInput | OrderCreateOrConnectWithoutUserInput,\n' +
    '?     createMany?: OrderCreateManyUserInputEnvelope,\n' +
    '?     connect?: OrderWhereUniqueInput | OrderWhereUniqueInput\n' +
    '?   }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Unknown arg `id` in create.id for type UserCreateInput.\n' +
    'Argument password for create.password is missing.\n' +
    '\n' +
    'Note: Lines with + are required, lines with ? are optional.\n',
  timestamp: '16/Aug/2022:07:34:30 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:34:30 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:07:34:30 +0800'
}
{
  request: {
    method: 'PUT',
    url: '/api/v1/users/1230123',
    remoteAddress: '::1',
    body: {
      email: 'Brando.Paucek@yahoo.com',
      username: 'Hector_Windler',
      role: 'user'
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: 1230123\n' +
    '  },\n' +
    '  update: {\n' +
    "    email: 'Brando.Paucek@yahoo.com',\n" +
    "    username: 'Hector_Windler',\n" +
    "    role: 'user'\n" +
    '  },\n' +
    '  create: {\n' +
    "    email: 'Brando.Paucek@yahoo.com',\n" +
    "    username: 'Hector_Windler',\n" +
    "    role: 'user',\n" +
    '    id: 1230123,\n' +
    '    ~~\n' +
    '+   password: String,\n' +
    '?   createdAt?: DateTime,\n' +
    '?   updatedAt?: DateTime,\n' +
    '?   profile?: {\n' +
    '?     create?: ProfileCreateWithoutUserInput | ProfileUncheckedCreateWithoutUserInput,\n' +
    '?     connectOrCreate?: ProfileCreateOrConnectWithoutUserInput,\n' +
    '?     connect?: ProfileWhereUniqueInput\n' +
    '?   },\n' +
    '?   cart?: {\n' +
    '?     create?: CartCreateWithoutUserInput | CartUncheckedCreateWithoutUserInput,\n' +
    '?     connectOrCreate?: CartCreateOrConnectWithoutUserInput,\n' +
    '?     connect?: CartWhereUniqueInput\n' +
    '?   },\n' +
    '?   orders?: {\n' +
    '?     create?: OrderCreateWithoutUserInput | OrderCreateWithoutUserInput | OrderUncheckedCreateWithoutUserInput | OrderUncheckedCreateWithoutUserInput,\n' +
    '?     connectOrCreate?: OrderCreateOrConnectWithoutUserInput | OrderCreateOrConnectWithoutUserInput,\n' +
    '?     createMany?: OrderCreateManyUserInputEnvelope,\n' +
    '?     connect?: OrderWhereUniqueInput | OrderWhereUniqueInput\n' +
    '?   }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Unknown arg `id` in create.id for type UserCreateInput.\n' +
    'Argument password for create.password is missing.\n' +
    '\n' +
    'Note: Lines with + are required, lines with ? are optional.\n',
  timestamp: '16/Aug/2022:07:34:36 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:34:36 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:07:34:36 +0800'
}
{
  request: {
    method: 'PUT',
    url: '/api/v1/users/1',
    remoteAddress: '::1',
    body: {
      email: 'Amie.Dickinson72@gmail.com',
      username: 'Eugenia.Deckow',
      role: 'user'
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: 1\n' +
    '  },\n' +
    '  update: {\n' +
    "    email: 'Amie.Dickinson72@gmail.com',\n" +
    "    username: 'Eugenia.Deckow',\n" +
    "    role: 'user'\n" +
    '  },\n' +
    '  create: {\n' +
    "    email: 'Amie.Dickinson72@gmail.com',\n" +
    "    username: 'Eugenia.Deckow',\n" +
    "    role: 'user',\n" +
    '    id: 1,\n' +
    '    ~~\n' +
    '+   password: String,\n' +
    '?   createdAt?: DateTime,\n' +
    '?   updatedAt?: DateTime,\n' +
    '?   profile?: {\n' +
    '?     create?: ProfileCreateWithoutUserInput | ProfileUncheckedCreateWithoutUserInput,\n' +
    '?     connectOrCreate?: ProfileCreateOrConnectWithoutUserInput,\n' +
    '?     connect?: ProfileWhereUniqueInput\n' +
    '?   },\n' +
    '?   cart?: {\n' +
    '?     create?: CartCreateWithoutUserInput | CartUncheckedCreateWithoutUserInput,\n' +
    '?     connectOrCreate?: CartCreateOrConnectWithoutUserInput,\n' +
    '?     connect?: CartWhereUniqueInput\n' +
    '?   },\n' +
    '?   orders?: {\n' +
    '?     create?: OrderCreateWithoutUserInput | OrderCreateWithoutUserInput | OrderUncheckedCreateWithoutUserInput | OrderUncheckedCreateWithoutUserInput,\n' +
    '?     connectOrCreate?: OrderCreateOrConnectWithoutUserInput | OrderCreateOrConnectWithoutUserInput,\n' +
    '?     createMany?: OrderCreateManyUserInputEnvelope,\n' +
    '?     connect?: OrderWhereUniqueInput | OrderWhereUniqueInput\n' +
    '?   }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Unknown arg `id` in create.id for type UserCreateInput.\n' +
    'Argument password for create.password is missing.\n' +
    '\n' +
    'Note: Lines with + are required, lines with ? are optional.\n',
  timestamp: '16/Aug/2022:07:34:45 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:34:45 +0000] "PUT /api/v1/users/1 HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:07:34:45 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:37:15 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 400 161\n',
  timestamp: '16/Aug/2022:07:37:15 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:37:18 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 166\n',
  timestamp: '16/Aug/2022:07:37:18 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:37:32 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 280\n',
  timestamp: '16/Aug/2022:07:37:32 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:37:33 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 283\n',
  timestamp: '16/Aug/2022:07:37:33 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:37:33 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 287\n',
  timestamp: '16/Aug/2022:07:37:33 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:37:34 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 283\n',
  timestamp: '16/Aug/2022:07:37:34 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:37:35 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 296\n',
  timestamp: '16/Aug/2022:07:37:35 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:37:39 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 170\n',
  timestamp: '16/Aug/2022:07:37:39 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:37:50 +0000] "PATCH /api/v1/users/1230123 HTTP/1.1" 200 179\n',
  timestamp: '16/Aug/2022:07:37:50 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:37:55 +0000] "PATCH /api/v1/users/1230123 HTTP/1.1" 200 277\n',
  timestamp: '16/Aug/2022:07:37:55 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:37:57 +0000] "PATCH /api/v1/users/1230123 HTTP/1.1" 200 293\n',
  timestamp: '16/Aug/2022:07:37:57 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:37:57 +0000] "PATCH /api/v1/users/1230123 HTTP/1.1" 200 289\n',
  timestamp: '16/Aug/2022:07:37:57 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:37:58 +0000] "PATCH /api/v1/users/1230123 HTTP/1.1" 200 297\n',
  timestamp: '16/Aug/2022:07:37:58 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:37:59 +0000] "PATCH /api/v1/users/1230123 HTTP/1.1" 200 284\n',
  timestamp: '16/Aug/2022:07:37:59 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:38:00 +0000] "PATCH /api/v1/users/1230123 HTTP/1.1" 200 285\n',
  timestamp: '16/Aug/2022:07:38:00 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:11:38:05 +0000] "PATCH /api/v1/users/1230123 HTTP/1.1" 200 187\n',
  timestamp: '16/Aug/2022:07:38:05 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:11:09 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 179\n',
  timestamp: '16/Aug/2022:08:11:09 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:11:14 +0000] "PUT /api/v1/users/10007/1230123 HTTP/1.1" 404 165\n',
  timestamp: '16/Aug/2022:08:11:14 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:11:22 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 404 59\n',
  timestamp: '16/Aug/2022:08:11:22 +0800'
}
{
  request: {
    method: 'PUT',
    url: '/api/v1/users/1230123/profile',
    remoteAddress: '::1',
    body: {
      firstName: 'Jackie',
      lastName: 'Veum',
      imageUrl: 'https://cdn.fakercloud.com/avatars/thaisselenator__128.jpg',
      bio: 'Atque qui praesentium est ut sit aliquid excepturi. Porro reprehenderit veniam inventore. Omnis omnis praesentium ea in eum nostrum explicabo. Vitae et et culpa veniam alias. Atque repellat dolore qui esse nemo illo est magnam neque. Culpa quia suscipit.'
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.update()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:167:36\n' +
    '\n' +
    "  164 //   throw createError(404, 'Profile has not been created');\n" +
    '  165 // }\n' +
    '  166 \n' +
    '→ 167 const user = await prisma.user.update({\n' +
    '        where: {\n' +
    '          id: 1230123\n' +
    '        },\n' +
    '        data: {\n' +
    '          profile: {\n' +
    '            upsert: {\n' +
    "              firstName: 'Jackie',\n" +
    '              ~~~~~~~~~\n' +
    "              lastName: 'Veum',\n" +
    '              ~~~~~~~~\n' +
    "              imageUrl: 'https://cdn.fakercloud.com/avatars/thaisselenator__128.jpg',\n" +
    '              ~~~~~~~~\n' +
    "              bio: 'Atque qui praesentium est ut sit aliquid excepturi. Porro reprehenderit veniam inventore. Omnis omnis praesentium ea in eum nostrum explicabo. Vitae et et culpa veniam alias. Atque repellat dolore qui esse nemo illo est magnam neque. Culpa quia suscipit.',\n" +
    '              ~~~\n' +
    '      +       update: ProfileUpdateWithoutUserInput | ProfileUncheckedUpdateWithoutUserInput,\n' +
    '      +       create: ProfileCreateWithoutUserInput | ProfileUncheckedCreateWithoutUserInput\n' +
    '            }\n' +
    '          }\n' +
    '        }\n' +
    '      })\n' +
    '\n' +
    'Unknown arg `firstName` in data.profile.upsert.firstName for type ProfileUpsertWithoutUserInput. Did you mean `create`?\n' +
    'Unknown arg `lastName` in data.profile.upsert.lastName for type ProfileUpsertWithoutUserInput. Did you mean `update`?\n' +
    'Unknown arg `imageUrl` in data.profile.upsert.imageUrl for type ProfileUpsertWithoutUserInput. Did you mean `update`?\n' +
    'Unknown arg `bio` in data.profile.upsert.bio for type ProfileUpsertWithoutUserInput.\n' +
    'Argument update for data.profile.upsert.update is missing.\n' +
    'Argument create for data.profile.upsert.create is missing.\n' +
    '\n' +
    'Note: Lines with + are required\n',
  timestamp: '16/Aug/2022:08:11:28 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:11:28 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:08:11:28 +0800'
}
{
  request: {
    method: 'PUT',
    url: '/api/v1/users/1230123/profile',
    remoteAddress: '::1',
    body: {
      firstName: 'Christian',
      lastName: 'Baumbach',
      imageUrl: 'https://cdn.fakercloud.com/avatars/_victa_128.jpg',
      bio: 'Harum blanditiis totam. Veniam rerum sapiente aliquam ut possimus beatae. Veniam veritatis nulla quo quo deleniti nobis. Qui excepturi mollitia quia recusandae blanditiis.'
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.update()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:167:36\n' +
    '\n' +
    "  164 //   throw createError(404, 'Profile has not been created');\n" +
    '  165 // }\n' +
    '  166 \n' +
    '→ 167 const user = await prisma.user.update({\n' +
    '        where: {\n' +
    '          id: 1230123\n' +
    '        },\n' +
    '        data: {\n' +
    '          profile: {\n' +
    '            upsert: {\n' +
    "              firstName: 'Christian',\n" +
    '              ~~~~~~~~~\n' +
    "              lastName: 'Baumbach',\n" +
    '              ~~~~~~~~\n' +
    "              imageUrl: 'https://cdn.fakercloud.com/avatars/_victa_128.jpg',\n" +
    '              ~~~~~~~~\n' +
    "              bio: 'Harum blanditiis totam. Veniam rerum sapiente aliquam ut possimus beatae. Veniam veritatis nulla quo quo deleniti nobis. Qui excepturi mollitia quia recusandae blanditiis.',\n" +
    '              ~~~\n' +
    '      +       update: ProfileUpdateWithoutUserInput | ProfileUncheckedUpdateWithoutUserInput,\n' +
    '      +       create: ProfileCreateWithoutUserInput | ProfileUncheckedCreateWithoutUserInput\n' +
    '            }\n' +
    '          }\n' +
    '        }\n' +
    '      })\n' +
    '\n' +
    'Unknown arg `firstName` in data.profile.upsert.firstName for type ProfileUpsertWithoutUserInput. Did you mean `create`?\n' +
    'Unknown arg `lastName` in data.profile.upsert.lastName for type ProfileUpsertWithoutUserInput. Did you mean `update`?\n' +
    'Unknown arg `imageUrl` in data.profile.upsert.imageUrl for type ProfileUpsertWithoutUserInput. Did you mean `update`?\n' +
    'Unknown arg `bio` in data.profile.upsert.bio for type ProfileUpsertWithoutUserInput.\n' +
    'Argument update for data.profile.upsert.update is missing.\n' +
    'Argument create for data.profile.upsert.create is missing.\n' +
    '\n' +
    'Note: Lines with + are required\n',
  timestamp: '16/Aug/2022:08:11:40 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:11:40 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:08:11:40 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:12:31 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 179\n',
  timestamp: '16/Aug/2022:08:12:31 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:12:40 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 588\n',
  timestamp: '16/Aug/2022:08:12:40 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:12:41 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 623\n',
  timestamp: '16/Aug/2022:08:12:41 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:12:42 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 563\n',
  timestamp: '16/Aug/2022:08:12:42 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:12:43 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 572\n',
  timestamp: '16/Aug/2022:08:12:43 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:12:45 +0000] "POST /api/v1/users/1230123/profile HTTP/1.1" 409 53\n',
  timestamp: '16/Aug/2022:08:12:45 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:12:51 +0000] "DELETE /api/v1/users/1230123/profile HTTP/1.1" 200 222\n',
  timestamp: '16/Aug/2022:08:12:51 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:12:53 +0000] "POST /api/v1/users/1230123/profile HTTP/1.1" 200 710\n',
  timestamp: '16/Aug/2022:08:12:53 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:12:55 +0000] "POST /api/v1/users/1230123/profile HTTP/1.1" 409 53\n',
  timestamp: '16/Aug/2022:08:12:55 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:12:57 +0000] "DELETE /api/v1/users/1230123/profile HTTP/1.1" 200 222\n',
  timestamp: '16/Aug/2022:08:12:57 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:12:59 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 170\n',
  timestamp: '16/Aug/2022:08:12:59 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:13:02 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 596\n',
  timestamp: '16/Aug/2022:08:13:02 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:13:04 +0000] "POST /api/v1/users/1230123/profile HTTP/1.1" 409 53\n',
  timestamp: '16/Aug/2022:08:13:04 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:13:06 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 641\n',
  timestamp: '16/Aug/2022:08:13:06 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:13:06 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 532\n',
  timestamp: '16/Aug/2022:08:13:06 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:13:08 +0000] "DELETE /api/v1/users/1230123/profile HTTP/1.1" 200 213\n',
  timestamp: '16/Aug/2022:08:13:08 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:13:08 +0000] "DELETE /api/v1/users/1230123/profile HTTP/1.1" 404 53\n',
  timestamp: '16/Aug/2022:08:13:08 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:13:12 +0000] "DELETE /api/v1/users/1230123 HTTP/1.1" 200 195\n',
  timestamp: '16/Aug/2022:08:13:12 +0800'
}
{
  request: {
    method: 'PUT',
    url: '/api/v1/users/1230123/profile',
    remoteAddress: '::1',
    body: {
      firstName: 'Bernardo',
      lastName: 'Ledner',
      imageUrl: 'https://cdn.fakercloud.com/avatars/amanruzaini_128.jpg',
      bio: 'Rerum dolores natus ipsam deserunt vero incidunt suscipit quae modi. Illum cum omnis voluptas. Id minima aut non nemo vel.'
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.update()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:167:36\n' +
    '\n' +
    "  164 //   throw createError(404, 'Profile has not been created');\n" +
    '  165 // }\n' +
    '  166 \n' +
    '→ 167 const user = await prisma.user.update(\n' +
    "  An operation failed because it depends on one or more records that were required but not found. No 'User' record (needed to update inlined relation on 'Profile') was found for a nested upsert on relation 'ProfileToUser'.",
  timestamp: '16/Aug/2022:08:13:15 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:13:15 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:08:13:15 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:13:43 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 404 45\n',
  timestamp: '16/Aug/2022:08:13:43 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:13:45 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 175\n',
  timestamp: '16/Aug/2022:08:13:45 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:13:47 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 567\n',
  timestamp: '16/Aug/2022:08:13:47 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:13:48 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 500\n',
  timestamp: '16/Aug/2022:08:13:48 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:13:48 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 638\n',
  timestamp: '16/Aug/2022:08:13:48 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:13:56 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 400 93\n',
  timestamp: '16/Aug/2022:08:13:56 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:14:00 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 400 167\n',
  timestamp: '16/Aug/2022:08:14:00 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:14:08 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 178\n',
  timestamp: '16/Aug/2022:08:14:08 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:14:14 +0000] "PATCH /api/v1/users/1230123 HTTP/1.1" 400 93\n',
  timestamp: '16/Aug/2022:08:14:14 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:14:16 +0000] "PATCH /api/v1/users/1230123 HTTP/1.1" 200 169\n',
  timestamp: '16/Aug/2022:08:14:16 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:14:17 +0000] "PATCH /api/v1/users/1230123 HTTP/1.1" 200 170\n',
  timestamp: '16/Aug/2022:08:14:17 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:14:17 +0000] "PATCH /api/v1/users/1230123 HTTP/1.1" 200 177\n',
  timestamp: '16/Aug/2022:08:14:17 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:14:18 +0000] "PATCH /api/v1/users/1230123 HTTP/1.1" 200 176\n',
  timestamp: '16/Aug/2022:08:14:18 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:14:21 +0000] "PATCH /api/v1/users/1230123 HTTP/1.1" 200 175\n',
  timestamp: '16/Aug/2022:08:14:21 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:16:27 +0000] "GET /api/v1/users/10007/relations HTTP/1.1" 200 179\n',
  timestamp: '16/Aug/2022:08:16:27 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:16:35 +0000] "GET /api/v1/users/1230123/relations HTTP/1.1" 200 175\n',
  timestamp: '16/Aug/2022:08:16:35 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:16:37 +0000] "GET /api/v1/users/1230123/relations HTTP/1.1" 200 175\n',
  timestamp: '16/Aug/2022:08:16:37 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:17:04 +0000] "GET /api/v1/users/1230123/relations HTTP/1.1" 200 672\n',
  timestamp: '16/Aug/2022:08:17:04 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:12:17:31 +0000] "GET /api/v1/users/1230123/relations HTTP/1.1" 200 684\n',
  timestamp: '16/Aug/2022:08:17:31 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:18:13 +0000] "GET /api/v1/products/412 HTTP/1.1" 404 158\n',
  timestamp: '16/Aug/2022:11:18:13 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:23:01 +0000] "GET /api/v1/products HTTP/1.1" 200 15\n',
  timestamp: '16/Aug/2022:11:23:01 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:23:03 +0000] "GET /api/v1/products/412 HTTP/1.1" 404 48\n',
  timestamp: '16/Aug/2022:11:23:03 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:23:05 +0000] "GET /api/v1/products/1 HTTP/1.1" 404 48\n',
  timestamp: '16/Aug/2022:11:23:05 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:23:07 +0000] "GET /api/v1/products/-1223 HTTP/1.1" 404 48\n',
  timestamp: '16/Aug/2022:11:23:07 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:24:55 +0000] "GET /api/v1/products/f HTTP/1.1" 400 50\n',
  timestamp: '16/Aug/2022:11:24:55 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:24:57 +0000] "GET /api/v1/products/ HTTP/1.1" 200 15\n',
  timestamp: '16/Aug/2022:11:24:57 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:26:51 +0000] "POST /api/v1/products HTTP/1.1" 400 603\n',
  timestamp: '16/Aug/2022:11:26:51 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:27:12 +0000] "POST /api/v1/products HTTP/1.1" 400 93\n',
  timestamp: '16/Aug/2022:11:27:12 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:27:13 +0000] "POST /api/v1/products HTTP/1.1" 400 93\n',
  timestamp: '16/Aug/2022:11:27:13 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:27:19 +0000] "POST /api/v1/products HTTP/1.1" 400 499\n',
  timestamp: '16/Aug/2022:11:27:19 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:27:49 +0000] "POST /api/v1/products HTTP/1.1" 400 388\n',
  timestamp: '16/Aug/2022:11:27:49 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:27:52 +0000] "POST /api/v1/products HTTP/1.1" 400 388\n',
  timestamp: '16/Aug/2022:11:27:52 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:27:53 +0000] "POST /api/v1/products HTTP/1.1" 400 388\n',
  timestamp: '16/Aug/2022:11:27:53 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:27:56 +0000] "POST /api/v1/products HTTP/1.1" 400 388\n',
  timestamp: '16/Aug/2022:11:27:56 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:28:24 +0000] "POST /api/v1/products HTTP/1.1" 400 388\n',
  timestamp: '16/Aug/2022:11:28:24 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:28:25 +0000] "POST /api/v1/products HTTP/1.1" 400 93\n',
  timestamp: '16/Aug/2022:11:28:25 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:28:35 +0000] "POST /api/v1/products HTTP/1.1" 400 388\n',
  timestamp: '16/Aug/2022:11:28:35 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:31:48 +0000] "POST /api/v1/products HTTP/1.1" 400 175\n',
  timestamp: '16/Aug/2022:11:31:48 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:31:56 +0000] "POST /api/v1/products HTTP/1.1" 400 196\n',
  timestamp: '16/Aug/2022:11:31:56 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:32:01 +0000] "POST /api/v1/products HTTP/1.1" 400 196\n',
  timestamp: '16/Aug/2022:11:32:01 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:32:04 +0000] "POST /api/v1/products HTTP/1.1" 400 196\n',
  timestamp: '16/Aug/2022:11:32:04 +0800'
}
{
  request: {
    method: 'POST',
    url: '/api/v1/products',
    remoteAddress: '::1',
    body: {
      name: 'Incredible Rubber Cheese',
      description: 'Ipsam accusantium molestiae suscipit assumenda fugiat reiciendis quaerat assumenda. Quis quaerat similique provident velit sit. Ratione totam in et sed quisquam aut voluptatem molestiae consequatur.',
      imageUrl: 'http://placeimg.com/640/480/cats',
      price: 1.23,
      quantity: 0
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.product.create()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\products\\products.controller.ts:43:42\n' +
    '\n' +
    "  40 '/',\n" +
    '  41 validateSchema(CreateProductSchema),\n' +
    '  42 asyncHandler(async (req, res) => {\n' +
    '→ 43   const product = await prisma.product.create({\n' +
    '         data: {\n' +
    "           name: 'Incredible Rubber Cheese',\n" +
    "           description: 'Ipsam accusantium molestiae suscipit assumenda fugiat reiciendis quaerat assumenda. Quis quaerat similique provident velit sit. Ratione totam in et sed quisquam aut voluptatem molestiae consequatur.',\n" +
    "           imageUrl: 'http://placeimg.com/640/480/cats',\n" +
    '           price: 1.23,\n' +
    '                  ~~~~\n' +
    '           quantity: 0\n' +
    '         }\n' +
    '       })\n' +
    '\n' +
    'Argument price: Got invalid value 1.23 on prisma.createOneProduct. Provided Float, expected Int.\n' +
    '\n',
  timestamp: '16/Aug/2022:11:32:20 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:32:20 +0000] "POST /api/v1/products HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:11:32:20 +0800'
}
{
  request: {
    method: 'POST',
    url: '/api/v1/products',
    remoteAddress: '::1',
    body: {
      name: 'Ergonomic Rubber Pizza',
      description: 'Dolorem iusto optio quo iure aut. Hic et provident sequi in voluptas nostrum. Cumque dolore unde odio molestias optio optio ut quasi. Nihil numquam minima quod deleniti.',
      imageUrl: 'http://placeimg.com/640/480/cats',
      price: 1.295,
      quantity: 0
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.product.create()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\products\\products.controller.ts:43:42\n' +
    '\n' +
    "  40 '/',\n" +
    '  41 validateSchema(CreateProductSchema),\n' +
    '  42 asyncHandler(async (req, res) => {\n' +
    '→ 43   const product = await prisma.product.create({\n' +
    '         data: {\n' +
    "           name: 'Ergonomic Rubber Pizza',\n" +
    "           description: 'Dolorem iusto optio quo iure aut. Hic et provident sequi in voluptas nostrum. Cumque dolore unde odio molestias optio optio ut quasi. Nihil numquam minima quod deleniti.',\n" +
    "           imageUrl: 'http://placeimg.com/640/480/cats',\n" +
    '           price: 1.295,\n' +
    '                  ~~~~~\n' +
    '           quantity: 0\n' +
    '         }\n' +
    '       })\n' +
    '\n' +
    'Argument price: Got invalid value 1.295 on prisma.createOneProduct. Provided Float, expected Int.\n' +
    '\n',
  timestamp: '16/Aug/2022:11:35:10 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:35:10 +0000] "POST /api/v1/products HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:11:35:10 +0800'
}
{
  request: {
    method: 'POST',
    url: '/api/v1/products',
    remoteAddress: '::1',
    body: {
      name: 'Rustic Frozen Computer',
      description: 'Magni rerum incidunt ea deleniti sapiente. Consequuntur rerum ut distinctio unde iure. Enim amet minima eos minima in. Omnis saepe corporis voluptatem odio voluptatem. Earum maxime nam eos voluptate vero voluptas voluptatem. Labore dolorem nesciunt commodi omnis eius qui suscipit.',
      imageUrl: 'http://placeimg.com/640/480/cats',
      price: 1.295,
      quantity: 0
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.product.create()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\products\\products.controller.ts:43:42\n' +
    '\n' +
    "  40 '/',\n" +
    '  41 validateSchema(CreateProductSchema),\n' +
    '  42 asyncHandler(async (req, res) => {\n' +
    '→ 43   const product = await prisma.product.create(\n' +
    "  The provided value for the column is too long for the column's type. Column: description",
  timestamp: '16/Aug/2022:11:35:25 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:35:25 +0000] "POST /api/v1/products HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:11:35:25 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:35:48 +0000] "POST /api/v1/products HTTP/1.1" 200 453\n',
  timestamp: '16/Aug/2022:11:35:48 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:35:55 +0000] "POST /api/v1/products HTTP/1.1" 200 341\n',
  timestamp: '16/Aug/2022:11:35:55 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:35:58 +0000] "POST /api/v1/products HTTP/1.1" 200 444\n',
  timestamp: '16/Aug/2022:11:35:58 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:36:13 +0000] "POST /api/v1/products HTTP/1.1" 200 396\n',
  timestamp: '16/Aug/2022:11:36:13 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:36:31 +0000] "POST /api/v1/products HTTP/1.1" 200 305\n',
  timestamp: '16/Aug/2022:11:36:31 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:36:32 +0000] "POST /api/v1/products HTTP/1.1" 200 429\n',
  timestamp: '16/Aug/2022:11:36:32 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:36:32 +0000] "POST /api/v1/products HTTP/1.1" 200 525\n',
  timestamp: '16/Aug/2022:11:36:32 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:36:32 +0000] "POST /api/v1/products HTTP/1.1" 200 317\n',
  timestamp: '16/Aug/2022:11:36:32 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:36:33 +0000] "POST /api/v1/products HTTP/1.1" 200 502\n',
  timestamp: '16/Aug/2022:11:36:33 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:36:33 +0000] "POST /api/v1/products HTTP/1.1" 200 390\n',
  timestamp: '16/Aug/2022:11:36:33 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:36:33 +0000] "POST /api/v1/products HTTP/1.1" 200 511\n',
  timestamp: '16/Aug/2022:11:36:33 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:36:34 +0000] "POST /api/v1/products HTTP/1.1" 200 496\n',
  timestamp: '16/Aug/2022:11:36:34 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:36:37 +0000] "GET /api/v1/products HTTP/1.1" 200 3401\n',
  timestamp: '16/Aug/2022:11:36:37 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:37:41 +0000] "PUT /api/v1/products/412 HTTP/1.1" - -\n',
  timestamp: '16/Aug/2022:11:37:41 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:39:30 +0000] "POST /api/v1/products HTTP/1.1" 200 435\n',
  timestamp: '16/Aug/2022:11:39:30 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:39:32 +0000] "POST /api/v1/products HTTP/1.1" 200 434\n',
  timestamp: '16/Aug/2022:11:39:32 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:39:33 +0000] "POST /api/v1/products HTTP/1.1" 200 480\n',
  timestamp: '16/Aug/2022:11:39:33 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:39:35 +0000] "POST /api/v1/products HTTP/1.1" 200 540\n',
  timestamp: '16/Aug/2022:11:39:35 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:39:36 +0000] "POST /api/v1/products HTTP/1.1" 200 313\n',
  timestamp: '16/Aug/2022:11:39:36 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:39:36 +0000] "POST /api/v1/products HTTP/1.1" 200 444\n',
  timestamp: '16/Aug/2022:11:39:36 +0800'
}
{
  request: {
    method: 'PUT',
    url: '/api/v1/products/412',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.product.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    id: 412\n' +
    '  },\n' +
    '  update: {},\n' +
    '  create: {\n' +
    '+   name: String,\n' +
    '+   description: String,\n' +
    '+   imageUrl: String,\n' +
    '+   price: Float,\n' +
    '+   quantity: Int,\n' +
    '?   createdAt?: DateTime,\n' +
    '?   updatedAt?: DateTime,\n' +
    '?   carts?: {\n' +
    '?     create?: CartCreateWithoutItemsInput | CartCreateWithoutItemsInput | CartUncheckedCreateWithoutItemsInput | CartUncheckedCreateWithoutItemsInput,\n' +
    '?     connectOrCreate?: CartCreateOrConnectWithoutItemsInput | CartCreateOrConnectWithoutItemsInput,\n' +
    '?     connect?: CartWhereUniqueInput | CartWhereUniqueInput\n' +
    '?   },\n' +
    '?   orders?: {\n' +
    '?     create?: OrderCreateWithoutProductsInput | OrderCreateWithoutProductsInput | OrderUncheckedCreateWithoutProductsInput | OrderUncheckedCreateWithoutProductsInput,\n' +
    '?     connectOrCreate?: OrderCreateOrConnectWithoutProductsInput | OrderCreateOrConnectWithoutProductsInput,\n' +
    '?     connect?: OrderWhereUniqueInput | OrderWhereUniqueInput\n' +
    '?   }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument name for create.name is missing.\n' +
    'Argument description for create.description is missing.\n' +
    'Argument imageUrl for create.imageUrl is missing.\n' +
    'Argument price for create.price is missing.\n' +
    'Argument quantity for create.quantity is missing.\n' +
    '\n' +
    'Note: Lines with + are required, lines with ? are optional.\n',
  timestamp: '16/Aug/2022:11:39:38 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:39:38 +0000] "PUT /api/v1/products/412 HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:11:39:38 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:39:56 +0000] "PUT /api/v1/products/412 HTTP/1.1" 400 603\n',
  timestamp: '16/Aug/2022:11:39:56 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:40:09 +0000] "POST /api/v1/products HTTP/1.1" 400 388\n',
  timestamp: '16/Aug/2022:11:40:09 +0800'
}
{
  request: {
    method: 'POST',
    url: '/api/v1/products',
    remoteAddress: '::1',
    body: {
      name: 'Generic Concrete Chips',
      description: 'Legacy',
      imageUrl: 'http://placeimg.com/640/480/cats',
      price: 188.59,
      quantity: 148.49
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.product.create()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\products\\products.controller.ts:43:42\n' +
    '\n' +
    "  40 '/',\n" +
    '  41 validateSchema(CreateProductSchema),\n' +
    '  42 asyncHandler(async (req, res) => {\n' +
    '→ 43   const product = await prisma.product.create({\n' +
    '         data: {\n' +
    "           name: 'Generic Concrete Chips',\n" +
    "           description: 'Legacy',\n" +
    "           imageUrl: 'http://placeimg.com/640/480/cats',\n" +
    '           price: 188.59,\n' +
    '           quantity: 148.49\n' +
    '                     ~~~~~~\n' +
    '         }\n' +
    '       })\n' +
    '\n' +
    'Argument quantity: Got invalid value 148.49 on prisma.createOneProduct. Provided Float, expected Int.\n' +
    '\n',
  timestamp: '16/Aug/2022:11:41:22 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:41:22 +0000] "POST /api/v1/products HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:11:41:22 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:41:40 +0000] "POST /api/v1/products HTTP/1.1" 200 257\n',
  timestamp: '16/Aug/2022:11:41:40 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:41:41 +0000] "POST /api/v1/products HTTP/1.1" 200 259\n',
  timestamp: '16/Aug/2022:11:41:41 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:41:45 +0000] "POST /api/v1/products HTTP/1.1" 200 249\n',
  timestamp: '16/Aug/2022:11:41:45 +0800'
}
{
  request: {
    method: 'POST',
    url: '/api/v1/products',
    remoteAddress: '::1',
    body: {
      name: 'Handmade Metal Salad',
      description: 'Investor',
      imageUrl: 'http://placeimg.com/640/480/cats',
      price: 586.16,
      quantity: 0.123
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.product.create()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\products\\products.controller.ts:43:42\n' +
    '\n' +
    "  40 '/',\n" +
    '  41 validateSchema(CreateProductSchema),\n' +
    '  42 asyncHandler(async (req, res) => {\n' +
    '→ 43   const product = await prisma.product.create({\n' +
    '         data: {\n' +
    "           name: 'Handmade Metal Salad',\n" +
    "           description: 'Investor',\n" +
    "           imageUrl: 'http://placeimg.com/640/480/cats',\n" +
    '           price: 586.16,\n' +
    '           quantity: 0.123\n' +
    '                     ~~~~~\n' +
    '         }\n' +
    '       })\n' +
    '\n' +
    'Argument quantity: Got invalid value 0.123 on prisma.createOneProduct. Provided Float, expected Int.\n' +
    '\n',
  timestamp: '16/Aug/2022:11:41:48 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:41:48 +0000] "POST /api/v1/products HTTP/1.1" 500 52\n',
  timestamp: '16/Aug/2022:11:41:48 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:42:31 +0000] "POST /api/v1/products HTTP/1.1" 400 172\n',
  timestamp: '16/Aug/2022:11:42:31 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:42:53 +0000] "POST /api/v1/products HTTP/1.1" 400 153\n',
  timestamp: '16/Aug/2022:11:42:53 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:43:01 +0000] "POST /api/v1/products HTTP/1.1" 400 207\n',
  timestamp: '16/Aug/2022:11:43:01 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:43:04 +0000] "POST /api/v1/products HTTP/1.1" 400 218\n',
  timestamp: '16/Aug/2022:11:43:04 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:43:09 +0000] "POST /api/v1/products HTTP/1.1" 200 259\n',
  timestamp: '16/Aug/2022:11:43:09 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:43:11 +0000] "POST /api/v1/products HTTP/1.1" 200 262\n',
  timestamp: '16/Aug/2022:11:43:11 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:43:11 +0000] "POST /api/v1/products HTTP/1.1" 200 261\n',
  timestamp: '16/Aug/2022:11:43:11 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:43:15 +0000] "PUT /api/v1/products/412 HTTP/1.1" 200 256\n',
  timestamp: '16/Aug/2022:11:43:15 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:43:16 +0000] "PUT /api/v1/products/412 HTTP/1.1" 200 258\n',
  timestamp: '16/Aug/2022:11:43:16 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:43:17 +0000] "PUT /api/v1/products/412 HTTP/1.1" 200 255\n',
  timestamp: '16/Aug/2022:11:43:17 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:43:17 +0000] "PUT /api/v1/products/412 HTTP/1.1" 200 261\n',
  timestamp: '16/Aug/2022:11:43:17 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:43:18 +0000] "PUT /api/v1/products/412 HTTP/1.1" 200 259\n',
  timestamp: '16/Aug/2022:11:43:18 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:43:18 +0000] "PUT /api/v1/products/412 HTTP/1.1" 200 257\n',
  timestamp: '16/Aug/2022:11:43:18 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:43:45 +0000] "POST /api/v1/products HTTP/1.1" 200 256\n',
  timestamp: '16/Aug/2022:11:43:45 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:43:47 +0000] "PUT /api/v1/products/412 HTTP/1.1" 200 257\n',
  timestamp: '16/Aug/2022:11:43:47 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:43:55 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 541\n',
  timestamp: '16/Aug/2022:11:43:55 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:43:56 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 717\n',
  timestamp: '16/Aug/2022:11:43:56 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:43:56 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 586\n',
  timestamp: '16/Aug/2022:11:43:56 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:43:57 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 590\n',
  timestamp: '16/Aug/2022:11:43:57 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:44:13 +0000] "PATCH /api/v1/users/1230123 HTTP/1.1" 200 175\n',
  timestamp: '16/Aug/2022:11:44:13 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:44:14 +0000] "PATCH /api/v1/users/1230123 HTTP/1.1" 200 171\n',
  timestamp: '16/Aug/2022:11:44:14 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:44:20 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 179\n',
  timestamp: '16/Aug/2022:11:44:20 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:44:20 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 172\n',
  timestamp: '16/Aug/2022:11:44:20 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:44:23 +0000] "PATCH /api/v1/users/1230123 HTTP/1.1" 200 171\n',
  timestamp: '16/Aug/2022:11:44:23 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:44:24 +0000] "PATCH /api/v1/users/12301232 HTTP/1.1" 404 45\n',
  timestamp: '16/Aug/2022:11:44:24 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:44:26 +0000] "PATCH /api/v1/users/12301232 HTTP/1.1" 404 45\n',
  timestamp: '16/Aug/2022:11:44:26 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:44:27 +0000] "PUT /api/v1/users/12301232 HTTP/1.1" 200 170\n',
  timestamp: '16/Aug/2022:11:44:27 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:44:32 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 180\n',
  timestamp: '16/Aug/2022:11:44:32 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:44:34 +0000] "PATCH /api/v1/users/12301232 HTTP/1.1" 200 176\n',
  timestamp: '16/Aug/2022:11:44:34 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:44:36 +0000] "PATCH /api/v1/users/123012322 HTTP/1.1" 404 45\n',
  timestamp: '16/Aug/2022:11:44:36 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:44:39 +0000] "PATCH /api/v1/users/1230123 HTTP/1.1" 200 174\n',
  timestamp: '16/Aug/2022:11:44:39 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:44:41 +0000] "PATCH /api/v1/users/12301232 HTTP/1.1" 200 181\n',
  timestamp: '16/Aug/2022:11:44:41 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:45:01 +0000] "PUT /api/v1/products/412 HTTP/1.1" 200 255\n',
  timestamp: '16/Aug/2022:11:45:01 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:45:10 +0000] "PUT /api/v1/products/412 HTTP/1.1" 200 258\n',
  timestamp: '16/Aug/2022:11:45:10 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:45:37 +0000] "PUT /api/v1/products/412 HTTP/1.1" 200 261\n',
  timestamp: '16/Aug/2022:11:45:37 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:45:38 +0000] "PUT /api/v1/products/412 HTTP/1.1" 200 260\n',
  timestamp: '16/Aug/2022:11:45:38 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:45:39 +0000] "PUT /api/v1/products/412 HTTP/1.1" 200 254\n',
  timestamp: '16/Aug/2022:11:45:39 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:45:39 +0000] "PUT /api/v1/products/412 HTTP/1.1" 200 262\n',
  timestamp: '16/Aug/2022:11:45:39 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:45:40 +0000] "PUT /api/v1/products/412 HTTP/1.1" 200 260\n',
  timestamp: '16/Aug/2022:11:45:40 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:45:41 +0000] "PUT /api/v1/products/412 HTTP/1.1" 200 263\n',
  timestamp: '16/Aug/2022:11:45:41 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:45:51 +0000] "GET /api/v1/products/412 HTTP/1.1" 200 235\n',
  timestamp: '16/Aug/2022:11:45:51 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:45:53 +0000] "GET /api/v1/products HTTP/1.1" 200 4192\n',
  timestamp: '16/Aug/2022:11:45:53 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:46:02 +0000] "GET /api/v1/products?l=none HTTP/1.1" 200 9532\n',
  timestamp: '16/Aug/2022:11:46:02 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:46:03 +0000] "GET /api/v1/products?l=none HTTP/1.1" 200 9532\n',
  timestamp: '16/Aug/2022:11:46:03 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:46:03 +0000] "GET /api/v1/products?l=none HTTP/1.1" 200 9532\n',
  timestamp: '16/Aug/2022:11:46:03 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:46:05 +0000] "GET /api/v1/products HTTP/1.1" 200 4192\n',
  timestamp: '16/Aug/2022:11:46:05 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:48:41 +0000] "PATCH /api/v1/products/412 HTTP/1.1" 200 256\n',
  timestamp: '16/Aug/2022:11:48:41 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:48:43 +0000] "PATCH /api/v1/products/413 HTTP/1.1" 404 48\n',
  timestamp: '16/Aug/2022:11:48:43 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:48:45 +0000] "PATCH /api/v1/products/414 HTTP/1.1" 404 48\n',
  timestamp: '16/Aug/2022:11:48:45 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:48:46 +0000] "PATCH /api/v1/products/412 HTTP/1.1" 200 246\n',
  timestamp: '16/Aug/2022:11:48:46 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:48:47 +0000] "PATCH /api/v1/products/412 HTTP/1.1" 200 244\n',
  timestamp: '16/Aug/2022:11:48:47 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:48:48 +0000] "PATCH /api/v1/products/412 HTTP/1.1" 200 242\n',
  timestamp: '16/Aug/2022:11:48:48 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:48:50 +0000] "PATCH /api/v1/products/412 HTTP/1.1" 200 257\n',
  timestamp: '16/Aug/2022:11:48:50 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:48:53 +0000] "PUT /api/v1/products/412 HTTP/1.1" 200 247\n',
  timestamp: '16/Aug/2022:11:48:53 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:48:54 +0000] "PUT /api/v1/products/412 HTTP/1.1" 200 247\n',
  timestamp: '16/Aug/2022:11:48:54 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:50:23 +0000] "PUT /api/v1/products/412 HTTP/1.1" 200 241\n',
  timestamp: '16/Aug/2022:11:50:23 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:50:24 +0000] "PUT /api/v1/products/412 HTTP/1.1" 200 243\n',
  timestamp: '16/Aug/2022:11:50:24 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:50:37 +0000] "PUT /api/v1/products/412 HTTP/1.1" 200 242\n',
  timestamp: '16/Aug/2022:11:50:37 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:52:28 +0000] "PATCH /api/v1/products/123 HTTP/1.1" 404 48\n',
  timestamp: '16/Aug/2022:11:52:28 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:52:30 +0000] "PATCH /api/v1/products/2 HTTP/1.1" 404 48\n',
  timestamp: '16/Aug/2022:11:52:30 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:52:31 +0000] "PATCH /api/v1/products/2 HTTP/1.1" 404 48\n',
  timestamp: '16/Aug/2022:11:52:31 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:52:36 +0000] "PATCH /api/v1/products/20 HTTP/1.1" 200 255\n',
  timestamp: '16/Aug/2022:11:52:36 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:52:38 +0000] "PATCH /api/v1/products/20 HTTP/1.1" 200 259\n',
  timestamp: '16/Aug/2022:11:52:38 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:52:57 +0000] "PATCH /api/v1/products/20 HTTP/1.1" 400 495\n',
  timestamp: '16/Aug/2022:11:52:57 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:53:00 +0000] "PATCH /api/v1/products/20 HTTP/1.1" 200 259\n',
  timestamp: '16/Aug/2022:11:53:00 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:53:00 +0000] "PATCH /api/v1/products/20 HTTP/1.1" 200 259\n',
  timestamp: '16/Aug/2022:11:53:00 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:53:01 +0000] "PATCH /api/v1/products/20 HTTP/1.1" 200 259\n',
  timestamp: '16/Aug/2022:11:53:01 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:53:03 +0000] "PATCH /api/v1/products/20 HTTP/1.1" 200 257\n',
  timestamp: '16/Aug/2022:11:53:03 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:53:24 +0000] "PATCH /api/v1/users/2/profile HTTP/1.1" 200 645\n',
  timestamp: '16/Aug/2022:11:53:24 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:53:25 +0000] "PATCH /api/v1/users/2/profile HTTP/1.1" 200 644\n',
  timestamp: '16/Aug/2022:11:53:25 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:53:25 +0000] "PATCH /api/v1/users/2/profile HTTP/1.1" 200 640\n',
  timestamp: '16/Aug/2022:11:53:25 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:53:26 +0000] "PATCH /api/v1/users/2/profile HTTP/1.1" 200 645\n',
  timestamp: '16/Aug/2022:11:53:26 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:53:32 +0000] "PATCH /api/v1/products/20 HTTP/1.1" 200 257\n',
  timestamp: '16/Aug/2022:11:53:32 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:53:34 +0000] "PATCH /api/v1/products/20 HTTP/1.1" 200 259\n',
  timestamp: '16/Aug/2022:11:53:34 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:53:36 +0000] "PATCH /api/v1/products/20 HTTP/1.1" 200 259\n',
  timestamp: '16/Aug/2022:11:53:36 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:53:42 +0000] "PATCH /api/v1/products/20 HTTP/1.1" 200 256\n',
  timestamp: '16/Aug/2022:11:53:42 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:53:45 +0000] "PATCH /api/v1/products/20 HTTP/1.1" 200 258\n',
  timestamp: '16/Aug/2022:11:53:45 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:53:47 +0000] "PATCH /api/v1/products/20 HTTP/1.1" 200 259\n',
  timestamp: '16/Aug/2022:11:53:47 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:53:48 +0000] "PATCH /api/v1/products/20 HTTP/1.1" 200 259\n',
  timestamp: '16/Aug/2022:11:53:48 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:53:50 +0000] "PATCH /api/v1/products/20 HTTP/1.1" 200 259\n',
  timestamp: '16/Aug/2022:11:53:50 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:15:54:00 +0000] "PATCH /api/v1/products/20 HTTP/1.1" 200 258\n',
  timestamp: '16/Aug/2022:11:54:00 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:31:41 +0000] "GET /api/v1/users/1230123/relations HTTP/1.1" 200 635\n',
  timestamp: '17/Aug/2022:02:31:41 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:45:54 +0000] "GET /api/v1/users/profile HTTP/1.1" 200 2575\n',
  timestamp: '17/Aug/2022:02:45:54 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:46:09 +0000] "GET /api/v1/users/relations HTTP/1.1" 400 50\n',
  timestamp: '17/Aug/2022:02:46:09 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:46:16 +0000] "GET /api/v1/users/relations HTTP/1.1" 200 2575\n',
  timestamp: '17/Aug/2022:02:46:16 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:46:38 +0000] "GET /api/v1/users/relations HTTP/1.1" 200 3035\n',
  timestamp: '17/Aug/2022:02:46:38 +0800'
}
{
  request: {
    method: 'GET',
    url: '/api/v1/users/relations',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.findMany()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:38:37\n' +
    '\n' +
    '  35 asyncHandler(async (req, res) => {\n' +
    '  36   const { skip, take } = parseQueries(req);\n' +
    '  37 \n' +
    '→ 38   const users = await prisma.user.findMany(\n' +
    '  The table `cart` does not exist in the current database.',
  timestamp: '17/Aug/2022:02:50:20 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:50:20 +0000] "GET /api/v1/users/relations HTTP/1.1" 500 52\n',
  timestamp: '17/Aug/2022:02:50:20 +0800'
}
{
  request: {
    method: 'GET',
    url: '/api/v1/users/relations',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.findUnique()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\common\\config\\passport.ts:47:40\n' +
    '\n' +
    '  44 new JwtStrategy(jwtStrategyOptions, async (payload, done) => {\n' +
    '  45   const id = payload.sub;\n' +
    '  46   try {\n' +
    '→ 47     const user = await prisma.user.findUnique(\n' +
    '  Database `express_auth` does not exist on the database server at `localhost:3306`.',
  timestamp: '17/Aug/2022:02:50:45 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:50:45 +0000] "GET /api/v1/users/relations HTTP/1.1" 500 52\n',
  timestamp: '17/Aug/2022:02:50:45 +0800'
}
{
  request: {
    method: 'GET',
    url: '/api/v1/users/relations',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.findMany()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:38:37\n' +
    '\n' +
    '  35 asyncHandler(async (req, res) => {\n' +
    '  36   const { skip, take } = parseQueries(req);\n' +
    '  37 \n' +
    '→ 38   const users = await prisma.user.findMany(\n' +
    '  The table `cart` does not exist in the current database.',
  timestamp: '17/Aug/2022:02:55:21 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:55:21 +0000] "GET /api/v1/users/relations HTTP/1.1" 500 52\n',
  timestamp: '17/Aug/2022:02:55:21 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:55:25 +0000] "GET /api/v1/users HTTP/1.1" 200 1604\n',
  timestamp: '17/Aug/2022:02:55:25 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:55:30 +0000] "GET /api/v1/users/1230123/relations HTTP/1.1" 404 45\n',
  timestamp: '17/Aug/2022:02:55:30 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:55:33 +0000] "GET /api/v1/users/10007/profile HTTP/1.1" 404 45\n',
  timestamp: '17/Aug/2022:02:55:33 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:55:35 +0000] "GET /api/v1/users/1/profile HTTP/1.1" 200 184\n',
  timestamp: '17/Aug/2022:02:55:35 +0800'
}
{
  request: {
    method: 'GET',
    url: '/api/v1/users/1/relations',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.findUnique()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:76:36\n' +
    '\n' +
    "   73 validateParamInt('id'),\n" +
    '   74 asyncHandler(async (req, res) => {\n' +
    '   75   const { id } = req.params;\n' +
    '→  76   const user = await prisma.user.findUnique(\n' +
    '  The table `cart` does not exist in the current database.',
  timestamp: '17/Aug/2022:02:55:40 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:55:40 +0000] "GET /api/v1/users/1/relations HTTP/1.1" 500 52\n',
  timestamp: '17/Aug/2022:02:55:40 +0800'
}
{
  request: {
    method: 'GET',
    url: '/api/v1/users/relations',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.findMany()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:38:37\n' +
    '\n' +
    '  35 asyncHandler(async (req, res) => {\n' +
    '  36   const { skip, take } = parseQueries(req);\n' +
    '  37 \n' +
    '→ 38   const users = await prisma.user.findMany(\n' +
    '  The table `cart` does not exist in the current database.',
  timestamp: '17/Aug/2022:02:55:43 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:55:43 +0000] "GET /api/v1/users/relations HTTP/1.1" 500 52\n',
  timestamp: '17/Aug/2022:02:55:43 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:56:27 +0000] "GET /api/v1/users/relations HTTP/1.1" 200 2184\n',
  timestamp: '17/Aug/2022:02:56:27 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:56:43 +0000] "GET /api/v1/users/relations HTTP/1.1" 200 1704\n',
  timestamp: '17/Aug/2022:02:56:43 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:56:47 +0000] "GET /api/v1/users/relations HTTP/1.1" 200 2014\n',
  timestamp: '17/Aug/2022:02:56:47 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:56:56 +0000] "GET /api/v1/users/relations HTTP/1.1" 200 2164\n',
  timestamp: '17/Aug/2022:02:56:56 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:57:02 +0000] "GET /api/v1/users/relations HTTP/1.1" 200 2284\n',
  timestamp: '17/Aug/2022:02:57:02 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:57:03 +0000] "GET /api/v1/users/relations HTTP/1.1" 200 2284\n',
  timestamp: '17/Aug/2022:02:57:03 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:57:07 +0000] "GET /api/v1/users/relations HTTP/1.1" 200 2284\n',
  timestamp: '17/Aug/2022:02:57:07 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:57:09 +0000] "GET /api/v1/users/relations HTTP/1.1" 200 2284\n',
  timestamp: '17/Aug/2022:02:57:09 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:57:28 +0000] "GET /api/v1/users/relations HTTP/1.1" 200 1974\n',
  timestamp: '17/Aug/2022:02:57:28 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:57:37 +0000] "GET /api/v1/users/1/relations HTTP/1.1" 200 237\n',
  timestamp: '17/Aug/2022:02:57:37 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:57:41 +0000] "GET /api/v1/users/1/relations HTTP/1.1" 200 206\n',
  timestamp: '17/Aug/2022:02:57:41 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:57:49 +0000] "GET /api/v1/users/relations HTTP/1.1" 200 1974\n',
  timestamp: '17/Aug/2022:02:57:49 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:57:56 +0000] "GET /api/v1/users/1/relations HTTP/1.1" 200 206\n',
  timestamp: '17/Aug/2022:02:57:56 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:58:26 +0000] "GET /api/v1/users/1/profile HTTP/1.1" 404 161\n',
  timestamp: '17/Aug/2022:02:58:26 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:58:47 +0000] "POST /api/v1/users HTTP/1.1" 200 288\n',
  timestamp: '17/Aug/2022:02:58:47 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:59:14 +0000] "POST /api/v1/users HTTP/1.1" 200 200\n',
  timestamp: '17/Aug/2022:02:59:14 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:59:16 +0000] "POST /api/v1/users HTTP/1.1" 200 205\n',
  timestamp: '17/Aug/2022:02:59:16 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:59:17 +0000] "POST /api/v1/users HTTP/1.1" 200 201\n',
  timestamp: '17/Aug/2022:02:59:17 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:59:20 +0000] "POST /api/v1/users HTTP/1.1" 200 199\n',
  timestamp: '17/Aug/2022:02:59:20 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:59:22 +0000] "POST /api/v1/users HTTP/1.1" 200 203\n',
  timestamp: '17/Aug/2022:02:59:22 +0800'
}
{
  request: {
    method: 'POST',
    url: '/api/v1/users/1230123/profile',
    remoteAddress: '::1',
    body: {
      firstName: 'Dylan',
      lastName: 'Lemke',
      imageUrl: 'https://cdn.fakercloud.com/avatars/emsgulam_128.jpg',
      bio: 'Possimus aliquam ea error quis veniam numquam. Fugiat voluptates qui corrupti enim nemo ut. Sed sapiente sint.'
    }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.update()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:119:36\n' +
    '\n' +
    '  116 if (existingProfile) {\n' +
    "  117   throw createError(409, 'Profile already exists');\n" +
    '  118 }\n' +
    '→ 119 const user = await prisma.user.update(\n' +
    "  An operation failed because it depends on one or more records that were required but not found. No 'User' record (needed to inline the relation with create on 'Profile' record) was found for a nested create on one-to-one relation 'ProfileToUser'.",
  timestamp: '17/Aug/2022:02:59:38 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:18:59:38 +0000] "POST /api/v1/users/1230123/profile HTTP/1.1" 500 52\n',
  timestamp: '17/Aug/2022:02:59:38 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:00:03 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 404 45\n',
  timestamp: '17/Aug/2022:03:00:03 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:00:22 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 404 45\n',
  timestamp: '17/Aug/2022:03:00:22 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:00:27 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 170\n',
  timestamp: '17/Aug/2022:03:00:27 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:00:29 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 489\n',
  timestamp: '17/Aug/2022:03:00:29 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:00:30 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 732\n',
  timestamp: '17/Aug/2022:03:00:30 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:00:31 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 554\n',
  timestamp: '17/Aug/2022:03:00:31 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:00:31 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 559\n',
  timestamp: '17/Aug/2022:03:00:31 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:00:34 +0000] "PATCH /api/v1/users/2/profile HTTP/1.1" 404 59\n',
  timestamp: '17/Aug/2022:03:00:34 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:00:38 +0000] "PATCH /api/v1/users/1230123 HTTP/1.1" 200 171\n',
  timestamp: '17/Aug/2022:03:00:38 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:00:39 +0000] "PATCH /api/v1/users/1230123 HTTP/1.1" 200 171\n',
  timestamp: '17/Aug/2022:03:00:39 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:00:40 +0000] "PATCH /api/v1/users/1230123 HTTP/1.1" 200 171\n',
  timestamp: '17/Aug/2022:03:00:40 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:00:42 +0000] "PATCH /api/v1/users/1231123 HTTP/1.1" 404 45\n',
  timestamp: '17/Aug/2022:03:00:42 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:00:44 +0000] "PATCH /api/v1/users/1231123 HTTP/1.1" 404 45\n',
  timestamp: '17/Aug/2022:03:00:44 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:00:45 +0000] "PATCH /api/v1/users/1230123 HTTP/1.1" 200 171\n',
  timestamp: '17/Aug/2022:03:00:45 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:00:53 +0000] "PATCH /api/v1/users/212321/profile HTTP/1.1" 404 59\n',
  timestamp: '17/Aug/2022:03:00:53 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:00:54 +0000] "PATCH /api/v1/users/212321123/profile HTTP/1.1" 404 59\n',
  timestamp: '17/Aug/2022:03:00:54 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:01:28 +0000] "PATCH /api/v1/users/212321123/profile HTTP/1.1" 404 45\n',
  timestamp: '17/Aug/2022:03:01:28 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:01:31 +0000] "PATCH /api/v1/users/1230123/profile HTTP/1.1" 200 566\n',
  timestamp: '17/Aug/2022:03:01:31 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:01:33 +0000] "PATCH /api/v1/users/1230123/profile HTTP/1.1" 200 567\n',
  timestamp: '17/Aug/2022:03:01:33 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:01:34 +0000] "PATCH /api/v1/users/1230123/profile HTTP/1.1" 200 566\n',
  timestamp: '17/Aug/2022:03:01:34 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:01:36 +0000] "PATCH /api/v1/users/1/profile HTTP/1.1" 404 59\n',
  timestamp: '17/Aug/2022:03:01:36 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:01:39 +0000] "PATCH /api/v1/users/1230123/profile HTTP/1.1" 200 564\n',
  timestamp: '17/Aug/2022:03:01:39 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:01:42 +0000] "PATCH /api/v1/users/1230123/profile HTTP/1.1" 200 561\n',
  timestamp: '17/Aug/2022:03:01:42 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:01:43 +0000] "PATCH /api/v1/users/1230123/profile HTTP/1.1" 200 566\n',
  timestamp: '17/Aug/2022:03:01:43 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:01:43 +0000] "PATCH /api/v1/users/1230123/profile HTTP/1.1" 200 568\n',
  timestamp: '17/Aug/2022:03:01:43 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:02:07 +0000] "PUT /api/v1/users/1230123 HTTP/1.1" 200 201\n',
  timestamp: '17/Aug/2022:03:02:07 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:02:13 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 699\n',
  timestamp: '17/Aug/2022:03:02:13 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:02:26 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 661\n',
  timestamp: '17/Aug/2022:03:02:26 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:02:26 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 766\n',
  timestamp: '17/Aug/2022:03:02:26 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:02:27 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 592\n',
  timestamp: '17/Aug/2022:03:02:27 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:02:31 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 573\n',
  timestamp: '17/Aug/2022:03:02:31 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:02:31 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 491\n',
  timestamp: '17/Aug/2022:03:02:31 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:02:33 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 585\n',
  timestamp: '17/Aug/2022:03:02:33 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:02:34 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 627\n',
  timestamp: '17/Aug/2022:03:02:34 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:02:35 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 505\n',
  timestamp: '17/Aug/2022:03:02:35 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:03:02 +0000] "PATCH /api/v1/users/1230123/profile HTTP/1.1" 200 503\n',
  timestamp: '17/Aug/2022:03:03:02 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:03:03 +0000] "PATCH /api/v1/users/1230123/profile HTTP/1.1" 200 504\n',
  timestamp: '17/Aug/2022:03:03:03 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:03:04 +0000] "PATCH /api/v1/users/1230123/profile HTTP/1.1" 200 507\n',
  timestamp: '17/Aug/2022:03:03:04 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:03:04 +0000] "PATCH /api/v1/users/1230123/profile HTTP/1.1" 200 502\n',
  timestamp: '17/Aug/2022:03:03:04 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:03:05 +0000] "PATCH /api/v1/users/1230123/profile HTTP/1.1" 200 506\n',
  timestamp: '17/Aug/2022:03:03:05 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:05:10 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 504\n',
  timestamp: '17/Aug/2022:03:05:10 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:05:10 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 583\n',
  timestamp: '17/Aug/2022:03:05:10 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:05:10 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 772\n',
  timestamp: '17/Aug/2022:03:05:10 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:05:11 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 548\n',
  timestamp: '17/Aug/2022:03:05:11 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:05:11 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 482\n',
  timestamp: '17/Aug/2022:03:05:11 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:05:12 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 531\n',
  timestamp: '17/Aug/2022:03:05:12 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:05:12 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 517\n',
  timestamp: '17/Aug/2022:03:05:12 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:05:12 +0000] "PUT /api/v1/users/1230123/profile HTTP/1.1" 200 598\n',
  timestamp: '17/Aug/2022:03:05:12 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:05:18 +0000] "POST /api/v1/products HTTP/1.1" 200 255\n',
  timestamp: '17/Aug/2022:03:05:18 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:05:18 +0000] "POST /api/v1/products HTTP/1.1" 200 255\n',
  timestamp: '17/Aug/2022:03:05:18 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:05:19 +0000] "POST /api/v1/products HTTP/1.1" 200 254\n',
  timestamp: '17/Aug/2022:03:05:19 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:05:19 +0000] "POST /api/v1/products HTTP/1.1" 200 260\n',
  timestamp: '17/Aug/2022:03:05:19 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:05:20 +0000] "POST /api/v1/products HTTP/1.1" 200 255\n',
  timestamp: '17/Aug/2022:03:05:20 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:05:20 +0000] "POST /api/v1/products HTTP/1.1" 200 252\n',
  timestamp: '17/Aug/2022:03:05:20 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:05:20 +0000] "POST /api/v1/products HTTP/1.1" 200 255\n',
  timestamp: '17/Aug/2022:03:05:20 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:05:21 +0000] "POST /api/v1/products HTTP/1.1" 200 261\n',
  timestamp: '17/Aug/2022:03:05:21 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:05:21 +0000] "POST /api/v1/products HTTP/1.1" 200 254\n',
  timestamp: '17/Aug/2022:03:05:21 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:05:22 +0000] "POST /api/v1/products HTTP/1.1" 200 262\n',
  timestamp: '17/Aug/2022:03:05:22 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:05:24 +0000] "PUT /api/v1/products/412 HTTP/1.1" 200 257\n',
  timestamp: '17/Aug/2022:03:05:24 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:05:24 +0000] "PUT /api/v1/products/412 HTTP/1.1" 200 257\n',
  timestamp: '17/Aug/2022:03:05:24 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:05:25 +0000] "PUT /api/v1/products/412 HTTP/1.1" 200 256\n',
  timestamp: '17/Aug/2022:03:05:25 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:05:25 +0000] "PUT /api/v1/products/412 HTTP/1.1" 200 262\n',
  timestamp: '17/Aug/2022:03:05:25 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:05:59 +0000] "PUT /api/v1/products/12 HTTP/1.1" 200 258\n',
  timestamp: '17/Aug/2022:03:05:59 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:06:02 +0000] "POST /api/v1/products HTTP/1.1" 200 264\n',
  timestamp: '17/Aug/2022:03:06:02 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:06:05 +0000] "POST /api/v1/products HTTP/1.1" 200 263\n',
  timestamp: '17/Aug/2022:03:06:05 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:06:53 +0000] "PUT /api/v1/products/12 HTTP/1.1" 404 157\n',
  timestamp: '17/Aug/2022:03:06:53 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:22:45 +0000] "GET /api/v1/products HTTP/1.1" 200 2187\n',
  timestamp: '17/Aug/2022:03:22:45 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:23:02 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 160\n',
  timestamp: '17/Aug/2022:03:23:02 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:23:13 +0000] "POST /api/v1/users/10001/cart/add/1 HTTP/1.1" 200 27\n',
  timestamp: '17/Aug/2022:03:23:13 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:27:03 +0000] "DELETE /api/v1/users/10/cart HTTP/1.1" - -\n',
  timestamp: '17/Aug/2022:03:27:03 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:28:03 +0000] "DELETE /api/v1/users/10/cart HTTP/1.1" 200 303\n',
  timestamp: '17/Aug/2022:03:28:03 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:28:27 +0000] "DELETE /api/v1/users/10/cart HTTP/1.1" 200 313\n',
  timestamp: '17/Aug/2022:03:28:27 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:28:38 +0000] "GET /api/v1/users/relations HTTP/1.1" 200 1974\n',
  timestamp: '17/Aug/2022:03:28:38 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:28:46 +0000] "GET /api/v1/users/10/relations HTTP/1.1" 200 205\n',
  timestamp: '17/Aug/2022:03:28:46 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:28:49 +0000] "GET /api/v1/users/10 HTTP/1.1" 200 168\n',
  timestamp: '17/Aug/2022:03:28:49 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:28:53 +0000] "GET /api/v1/users/10/relations HTTP/1.1" 200 205\n',
  timestamp: '17/Aug/2022:03:28:53 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:29:01 +0000] "POST /api/v1/users/10001/cart/add/1 HTTP/1.1" 404 169\n',
  timestamp: '17/Aug/2022:03:29:01 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:30:37 +0000] "DELETE /api/v1/users/1012312/cart HTTP/1.1" 200 38\n',
  timestamp: '17/Aug/2022:03:30:37 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:30:59 +0000] "DELETE /api/v1/users/1012312/cart HTTP/1.1" 404 45\n',
  timestamp: '17/Aug/2022:03:30:59 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:31:01 +0000] "DELETE /api/v1/users/10/cart HTTP/1.1" 200 313\n',
  timestamp: '17/Aug/2022:03:31:01 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:31:02 +0000] "DELETE /api/v1/users/10/cart HTTP/1.1" 200 313\n',
  timestamp: '17/Aug/2022:03:31:02 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:31:11 +0000] "DELETE /api/v1/users/10/cart HTTP/1.1" 200 203\n',
  timestamp: '17/Aug/2022:03:31:11 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:31:21 +0000] "GET /api/v1/users HTTP/1.1" 200 1604\n',
  timestamp: '17/Aug/2022:03:31:21 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:31:26 +0000] "GET /api/v1/users/10/relations HTTP/1.1" 200 205\n',
  timestamp: '17/Aug/2022:03:31:26 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:31:33 +0000] "PUT /api/v1/users/10/profile HTTP/1.1" 200 503\n',
  timestamp: '17/Aug/2022:03:31:33 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:31:37 +0000] "GET /api/v1/users/10/relations HTTP/1.1" 200 496\n',
  timestamp: '17/Aug/2022:03:31:37 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:42:53 +0000] "PATCH /api/v1/users/10/cart/1 HTTP/1.1" 404 163\n',
  timestamp: '17/Aug/2022:03:42:53 +0800'
}
{
  request: {
    method: 'PUT',
    url: '/api/v1/users/10/cart/1',
    remoteAddress: '::1',
    body: { quantity: 1 }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.cartItem.upsert()` invocation:\n' +
    '\n' +
    '{\n' +
    '  where: {\n' +
    '    userId: 10,\n' +
    '    productId: 1\n' +
    '  },\n' +
    '  ~~~~~~~~~~~~~~\n' +
    '  create: {\n' +
    '    userId: 10,\n' +
    '    productId: 1,\n' +
    '    quantity: 1\n' +
    '  },\n' +
    '  update: {\n' +
    '    quantity: 1\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'Argument where of type CartItemWhereUniqueInput needs exactly one argument, but you provided userId and productId. Please choose one. Available args: \n' +
    'type CartItemWhereUniqueInput {\n' +
    '  userId?: Int\n' +
    '  productId?: Int\n' +
    '}\n' +
    '\n',
  timestamp: '17/Aug/2022:03:43:02 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:43:02 +0000] "PUT /api/v1/users/10/cart/1 HTTP/1.1" 500 52\n',
  timestamp: '17/Aug/2022:03:43:02 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:48:15 +0000] "GET /api/v1/carts HTTP/1.1" 404 151\n',
  timestamp: '17/Aug/2022:03:48:15 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:52:07 +0000] "GET /api/v1/carts HTTP/1.1" 404 67\n',
  timestamp: '17/Aug/2022:03:52:07 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:19:52:18 +0000] "GET /api/v1/carts HTTP/1.1" 404 49\n',
  timestamp: '17/Aug/2022:03:52:18 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:20:07:17 +0000] "PUT /api/v1/users/11/profile HTTP/1.1" 400 93\n',
  timestamp: '17/Aug/2022:04:07:17 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:20:07:19 +0000] "PUT /api/v1/users/11/profile HTTP/1.1" 200 361\n',
  timestamp: '17/Aug/2022:04:07:19 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:20:07:26 +0000] "PUT /api/v1/users/11/profile HTTP/1.1" 200 640\n',
  timestamp: '17/Aug/2022:04:07:26 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:20:07:28 +0000] "PUT /api/v1/users/11/profile HTTP/1.1" 200 647\n',
  timestamp: '17/Aug/2022:04:07:28 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:20:07:36 +0000] "PUT /api/v1/users/11/profile HTTP/1.1" 400 192\n',
  timestamp: '17/Aug/2022:04:07:36 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:20:07:40 +0000] "PUT /api/v1/users/11/profile HTTP/1.1" 200 502\n',
  timestamp: '17/Aug/2022:04:07:40 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:20:21:00 +0000] "GET /api/v1/users/relations HTTP/1.1" 401 43\n',
  timestamp: '17/Aug/2022:04:21:00 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:20:21:05 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 174\n',
  timestamp: '17/Aug/2022:04:21:05 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:20:21:10 +0000] "POST /api/v1/auth/login HTTP/1.1" 200 174\n',
  timestamp: '17/Aug/2022:04:21:10 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:20:21:13 +0000] "GET /api/v1/users HTTP/1.1" 200 1592\n',
  timestamp: '17/Aug/2022:04:21:13 +0800'
}
{
  request: {
    method: 'GET',
    url: '/api/v1/users/relations',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.findMany()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:39:37\n' +
    '\n' +
    '  36 asyncHandler(async (req, res) => {\n' +
    '  37   const { skip, take } = parseQueries(req);\n' +
    '  38 \n' +
    '→ 39   const users = await prisma.user.findMany({\n' +
    '         include: {\n' +
    '       ?   profile?: true,\n' +
    '           cart: true,\n' +
    '           ~~~~\n' +
    '           orders: true,\n' +
    '           ~~~~~~\n' +
    '       ?   Cart?: true\n' +
    '         },\n' +
    '         skip: 0,\n' +
    '         take: 10\n' +
    '       })\n' +
    '\n' +
    '\n' +
    'Unknown field `cart` for include statement on model User. Available options are listed in green. Did you mean `Cart`?\n' +
    'Unknown field `orders` for include statement on model User. Available options are listed in green. Did you mean `Cart`?\n',
  timestamp: '17/Aug/2022:04:21:15 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:20:21:15 +0000] "GET /api/v1/users/relations HTTP/1.1" 500 52\n',
  timestamp: '17/Aug/2022:04:21:15 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:20:21:29 +0000] "GET /api/v1/users/relations HTTP/1.1" 200 6152\n',
  timestamp: '17/Aug/2022:04:21:29 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:20:21:58 +0000] "GET /api/v1/auth/whoami HTTP/1.1" 200 156\n',
  timestamp: '17/Aug/2022:04:21:58 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:20:22:07 +0000] "GET /api/v1/users/10 HTTP/1.1" 200 167\n',
  timestamp: '17/Aug/2022:04:22:07 +0800'
}
{
  request: {
    method: 'GET',
    url: '/api/v1/users/10/relations',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.findUnique()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:74:36\n' +
    '\n' +
    "   71 validateParamInt('id'),\n" +
    '   72 asyncHandler(async (req, res) => {\n' +
    '   73   const { id } = req.params;\n' +
    '→  74   const user = await prisma.user.findUnique({\n' +
    '          where: {\n' +
    '            id: 10\n' +
    '          },\n' +
    '          include: {\n' +
    '        ?   profile?: true,\n' +
    '            cart: true,\n' +
    '            ~~~~\n' +
    '            orders: true,\n' +
    '            ~~~~~~\n' +
    '        ?   Cart?: true\n' +
    '          }\n' +
    '        })\n' +
    '\n' +
    '\n' +
    'Unknown field `cart` for include statement on model User. Available options are listed in green. Did you mean `Cart`?\n' +
    'Unknown field `orders` for include statement on model User. Available options are listed in green. Did you mean `Cart`?\n',
  timestamp: '17/Aug/2022:04:22:09 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:20:22:09 +0000] "GET /api/v1/users/10/relations HTTP/1.1" 500 52\n',
  timestamp: '17/Aug/2022:04:22:09 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:20:22:14 +0000] "GET /api/v1/users/10/relations HTTP/1.1" 200 657\n',
  timestamp: '17/Aug/2022:04:22:14 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:20:22:16 +0000] "GET /api/v1/users/101/relations HTTP/1.1" 404 45\n',
  timestamp: '17/Aug/2022:04:22:16 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:20:22:20 +0000] "GET /api/v1/users//relations HTTP/1.1" 200 6152\n',
  timestamp: '17/Aug/2022:04:22:20 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:20:22:25 +0000] "GET /api/v1/users/1/relations HTTP/1.1" 200 644\n',
  timestamp: '17/Aug/2022:04:22:25 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:20:22:32 +0000] "GET /api/v1/users/0/relations HTTP/1.1" 404 45\n',
  timestamp: '17/Aug/2022:04:22:32 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:20:22:34 +0000] "GET /api/v1/users/1/relations HTTP/1.1" 200 644\n',
  timestamp: '17/Aug/2022:04:22:34 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:20:22:43 +0000] "PUT /api/v1/users/1/profile HTTP/1.1" 200 509\n',
  timestamp: '17/Aug/2022:04:22:43 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:20:22:47 +0000] "GET /api/v1/users/1/relations HTTP/1.1" 200 480\n',
  timestamp: '17/Aug/2022:04:22:47 +0800'
}
{
  level: 'access',
  message: '::1 - [16/Aug/2022:20:22:48 +0000] "GET /api/v1/users/1/relations HTTP/1.1" 200 480\n',
  timestamp: '17/Aug/2022:04:22:48 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:12:59:14 +0000] "GET /api/v1/users HTTP/1.1" 200 1627\n',
  timestamp: '26/Aug/2022:08:59:14 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:01:52 +0000] "GET /api/v1/users HTTP/1.1" 200 1627\n',
  timestamp: '26/Aug/2022:09:01:52 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:01:54 +0000] "GET /api/v1/users/10 HTTP/1.1" 200 166\n',
  timestamp: '26/Aug/2022:09:01:54 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:01:56 +0000] "GET /api/v1/users/11 HTTP/1.1" 200 175\n',
  timestamp: '26/Aug/2022:09:01:56 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:01:58 +0000] "GET /api/v1/users HTTP/1.1" 200 1627\n',
  timestamp: '26/Aug/2022:09:01:58 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:02:03 +0000] "GET /api/v1/users?limit=none HTTP/1.1" 200 1952\n',
  timestamp: '26/Aug/2022:09:02:03 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:02:19 +0000] "GET /api/v1/profiles HTTP/1.1" 404 49\n',
  timestamp: '26/Aug/2022:09:02:19 +0800'
}
{
  request: {
    method: 'GET',
    url: '/api/v1/profiles',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.profile.findMany()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\profiles\\profiles.controller.ts:17:43\n' +
    '\n' +
    "  14 '/',\n" +
    '  15 asyncHandler(async (req, res) => {\n' +
    '  16   const { skip, take } = parseQueries(req);\n' +
    '→ 17   const profiles = await prisma.profile.findMany(\n' +
    '  The column `express_auth.Profile.updatedById` does not exist in the current database.',
  timestamp: '26/Aug/2022:09:13:59 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:13:59 +0000] "GET /api/v1/profiles HTTP/1.1" 500 52\n',
  timestamp: '26/Aug/2022:09:13:59 +0800'
}
{
  request: {
    method: 'GET',
    url: '/api/v1/profiles',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.profile.findMany()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\profiles\\profiles.controller.ts:17:43\n' +
    '\n' +
    "  14 '/',\n" +
    '  15 asyncHandler(async (req, res) => {\n' +
    '  16   const { skip, take } = parseQueries(req);\n' +
    '→ 17   const profiles = await prisma.profile.findMany(\n' +
    '  The column `express_auth.Profile.updatedById` does not exist in the current database.',
  timestamp: '26/Aug/2022:09:14:19 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:14:19 +0000] "GET /api/v1/profiles HTTP/1.1" 500 52\n',
  timestamp: '26/Aug/2022:09:14:19 +0800'
}
{
  request: {
    method: 'GET',
    url: '/api/v1/profiles',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.profile.findMany()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\profiles\\profiles.controller.ts:17:43\n' +
    '\n' +
    "  14 '/',\n" +
    '  15 asyncHandler(async (req, res) => {\n' +
    '  16   const { skip, take } = parseQueries(req);\n' +
    '→ 17   const profiles = await prisma.profile.findMany(\n' +
    '  The column `express_auth.Profile.updatedById` does not exist in the current database.',
  timestamp: '26/Aug/2022:09:14:20 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:14:20 +0000] "GET /api/v1/profiles HTTP/1.1" 500 52\n',
  timestamp: '26/Aug/2022:09:14:20 +0800'
}
{
  request: {
    method: 'GET',
    url: '/api/v1/users?limit=none',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.findMany()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:23:37\n' +
    '\n' +
    "  20 '/',\n" +
    '  21 asyncHandler(async (req, res) => {\n' +
    '  22   const { skip, take } = parseQueries(req);\n' +
    '→ 23   const users = await prisma.user.findMany(\n' +
    "  Value 'staff' not found in enum 'Role'",
  timestamp: '26/Aug/2022:09:21:22 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:21:22 +0000] "GET /api/v1/users?limit=none HTTP/1.1" 500 52\n',
  timestamp: '26/Aug/2022:09:21:22 +0800'
}
{
  request: {
    method: 'GET',
    url: '/api/v1/users?limit=none',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.user.findMany()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\users\\users.controller.ts:23:37\n' +
    '\n' +
    "  20 '/',\n" +
    '  21 asyncHandler(async (req, res) => {\n' +
    '  22   const { skip, take } = parseQueries(req);\n' +
    '→ 23   const users = await prisma.user.findMany(\n' +
    "  Value 'staff' not found in enum 'Role'",
  timestamp: '26/Aug/2022:09:21:26 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:21:26 +0000] "GET /api/v1/users?limit=none HTTP/1.1" 500 52\n',
  timestamp: '26/Aug/2022:09:21:26 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:22:14 +0000] "GET /api/v1/users?limit=none HTTP/1.1" 200 1908\n',
  timestamp: '26/Aug/2022:09:22:14 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:23:25 +0000] "GET /api/v1/users?limit=none HTTP/1.1" 200 1908\n',
  timestamp: '26/Aug/2022:09:23:25 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:23:27 +0000] "GET /api/v1/profiles HTTP/1.1" 200 5659\n',
  timestamp: '26/Aug/2022:09:23:27 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:23:54 +0000] "GET /api/v1/profiles HTTP/1.1" 200 4769\n',
  timestamp: '26/Aug/2022:09:23:54 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:24:04 +0000] "GET /api/v1/profiles?limit=none HTTP/1.1" 200 5659\n',
  timestamp: '26/Aug/2022:09:24:04 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:24:08 +0000] "GET /api/v1/profiles?limit=2 HTTP/1.1" 200 906\n',
  timestamp: '26/Aug/2022:09:24:08 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:24:10 +0000] "GET /api/v1/profiles?limit=1 HTTP/1.1" 200 447\n',
  timestamp: '26/Aug/2022:09:24:10 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:24:13 +0000] "GET /api/v1/profiles?limit=100 HTTP/1.1" 200 5659\n',
  timestamp: '26/Aug/2022:09:24:13 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:24:15 +0000] "GET /api/v1/profiles?limit=none HTTP/1.1" 200 5659\n',
  timestamp: '26/Aug/2022:09:24:15 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:36:18 +0000] "GET /api/v1/count HTTP/1.1" 404 49\n',
  timestamp: '26/Aug/2022:09:36:18 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:36:25 +0000] "GET /api/v1/profiles/count HTTP/1.1" 200 12\n',
  timestamp: '26/Aug/2022:09:36:25 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:36:28 +0000] "GET /api/v1/profiles?limit=none HTTP/1.1" 200 5659\n',
  timestamp: '26/Aug/2022:09:36:28 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:37:05 +0000] "GET /api/v1/profiles/412 HTTP/1.1" 200 4769\n',
  timestamp: '26/Aug/2022:09:37:05 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:37:09 +0000] "GET /api/v1/profiles/412f HTTP/1.1" 400 50\n',
  timestamp: '26/Aug/2022:09:37:09 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:37:10 +0000] "GET /api/v1/profiles/412 HTTP/1.1" 200 4769\n',
  timestamp: '26/Aug/2022:09:37:10 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:37:22 +0000] "GET /api/v1/profiles/412 HTTP/1.1" 200 4769\n',
  timestamp: '26/Aug/2022:09:37:22 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:37:25 +0000] "GET /api/v1/profiles/412f HTTP/1.1" 400 50\n',
  timestamp: '26/Aug/2022:09:37:25 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:37:48 +0000] "GET /api/v1/profiles/412f HTTP/1.1" 400 57\n',
  timestamp: '26/Aug/2022:09:37:48 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:37:51 +0000] "GET /api/v1/profiles/412f HTTP/1.1" 400 57\n',
  timestamp: '26/Aug/2022:09:37:51 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:38:30 +0000] "GET /api/v1/profiles/412f HTTP/1.1" 400 50\n',
  timestamp: '26/Aug/2022:09:38:30 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:38:33 +0000] "GET /api/v1/profiles/412f HTTP/1.1" 400 50\n',
  timestamp: '26/Aug/2022:09:38:33 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:38:34 +0000] "GET /api/v1/profiles/412 HTTP/1.1" 200 4769\n',
  timestamp: '26/Aug/2022:09:38:34 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:38:37 +0000] "GET /api/v1/profiles/-123 HTTP/1.1" 200 4769\n',
  timestamp: '26/Aug/2022:09:38:37 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:38:41 +0000] "GET /api/v1/profiles/3 HTTP/1.1" 200 4769\n',
  timestamp: '26/Aug/2022:09:38:41 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:39:39 +0000] "GET /api/v1/profiles/3 HTTP/1.1" 200 414\n',
  timestamp: '26/Aug/2022:09:39:39 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:13:39:41 +0000] "GET /api/v1/profiles/1 HTTP/1.1" 200 444\n',
  timestamp: '26/Aug/2022:09:39:41 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:16:53:58 +0000] "PUT /api/v1/users/123/profile HTTP/1.1" 404 45\n',
  timestamp: '27/Aug/2022:12:53:58 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:16:54:02 +0000] "PUT /api/v1/users/12/profile HTTP/1.1" 200 538\n',
  timestamp: '27/Aug/2022:12:54:02 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:16:54:05 +0000] "PUT /api/v1/users/12/profile HTTP/1.1" 200 625\n',
  timestamp: '27/Aug/2022:12:54:05 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:16:54:06 +0000] "PUT /api/v1/users/12/profile HTTP/1.1" 200 604\n',
  timestamp: '27/Aug/2022:12:54:06 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:16:54:09 +0000] "POST /api/v1/users HTTP/1.1" 200 194\n',
  timestamp: '27/Aug/2022:12:54:09 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:16:54:18 +0000] "GET /api/v1/users/13/relations HTTP/1.1" 200 184\n',
  timestamp: '27/Aug/2022:12:54:18 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:16:54:30 +0000] "PATCH /api/v1/users/13/profile HTTP/1.1" 404 59\n',
  timestamp: '27/Aug/2022:12:54:30 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:16:54:34 +0000] "PUT /api/v1/users/13/profile HTTP/1.1" 200 718\n',
  timestamp: '27/Aug/2022:12:54:34 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:16:54:37 +0000] "GET /api/v1/users/13/relations HTTP/1.1" 200 689\n',
  timestamp: '27/Aug/2022:12:54:37 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:16:54:40 +0000] "GET /api/v1/users/13/relations HTTP/1.1" 200 689\n',
  timestamp: '27/Aug/2022:12:54:40 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:16:54:42 +0000] "PUT /api/v1/users/13/profile HTTP/1.1" 200 563\n',
  timestamp: '27/Aug/2022:12:54:42 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:16:54:43 +0000] "GET /api/v1/users/13/relations HTTP/1.1" 200 534\n',
  timestamp: '27/Aug/2022:12:54:43 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:16:54:47 +0000] "PUT /api/v1/users/13/profile HTTP/1.1" 200 752\n',
  timestamp: '27/Aug/2022:12:54:47 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:16:54:50 +0000] "GET /api/v1/users/13/relations HTTP/1.1" 200 723\n',
  timestamp: '27/Aug/2022:12:54:50 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:16:54:55 +0000] "PATCH /api/v1/users/13/profile HTTP/1.1" 200 753\n',
  timestamp: '27/Aug/2022:12:54:55 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:16:54:57 +0000] "GET /api/v1/users/13/relations HTTP/1.1" 200 725\n',
  timestamp: '27/Aug/2022:12:54:57 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:16:55:01 +0000] "DELETE /api/v1/users/13/profile HTTP/1.1" 200 212\n',
  timestamp: '27/Aug/2022:12:55:01 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:16:55:04 +0000] "GET /api/v1/users/13/relations HTTP/1.1" 200 184\n',
  timestamp: '27/Aug/2022:12:55:04 +0800'
}
{
  request: {
    method: 'GET',
    url: '/api/v1/products',
    remoteAddress: '::1',
    body: {}
  },
  level: 'error',
  message: "Cannot read properties of undefined (reading 'findMany')",
  timestamp: '27/Aug/2022:01:12:35 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:12:35 +0000] "GET /api/v1/products HTTP/1.1" 500 52\n',
  timestamp: '27/Aug/2022:01:12:35 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:13:26 +0000] "GET /api/v1/products HTTP/1.1" 200 3336\n',
  timestamp: '27/Aug/2022:01:13:26 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:13:33 +0000] "GET /api/v1/products?limit=none HTTP/1.1" 200 3336\n',
  timestamp: '27/Aug/2022:01:13:33 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:13:35 +0000] "GET /api/v1/products?limit=4 HTTP/1.1" 200 1255\n',
  timestamp: '27/Aug/2022:01:13:35 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:13:38 +0000] "GET /api/v1/products?limit=fsad HTTP/1.1" 200 3336\n',
  timestamp: '27/Aug/2022:01:13:38 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:13:40 +0000] "GET /api/v1/products?limit=1 HTTP/1.1" 200 280\n',
  timestamp: '27/Aug/2022:01:13:40 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:13:44 +0000] "GET /api/v1/products/412 HTTP/1.1" 404 48\n',
  timestamp: '27/Aug/2022:01:13:44 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:13:48 +0000] "GET /api/v1/products/1 HTTP/1.1" 200 277\n',
  timestamp: '27/Aug/2022:01:13:48 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:19:03 +0000] "GET / HTTP/1.1" 404 49\n',
  timestamp: '27/Aug/2022:01:19:03 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:19:03 +0000] "GET /favicon.ico HTTP/1.1" 404 49\n',
  timestamp: '27/Aug/2022:01:19:03 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:19:06 +0000] "GET /docs HTTP/1.1" 301 175\n',
  timestamp: '27/Aug/2022:01:19:06 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:19:06 +0000] "GET /docs/ HTTP/1.1" 200 3103\n',
  timestamp: '27/Aug/2022:01:19:06 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:19:06 +0000] "GET /docs/swagger-ui-init.js HTTP/1.1" 200 1072\n',
  timestamp: '27/Aug/2022:01:19:06 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:19:06 +0000] "GET /docs/swagger-ui.css HTTP/1.1" 200 144726\n',
  timestamp: '27/Aug/2022:01:19:06 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:19:06 +0000] "GET /docs/swagger-ui-standalone-preset.js HTTP/1.1" 200 311812\n',
  timestamp: '27/Aug/2022:01:19:06 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:19:06 +0000] "GET /docs/swagger-ui-bundle.js HTTP/1.1" 200 1058187\n',
  timestamp: '27/Aug/2022:01:19:06 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:19:06 +0000] "GET / HTTP/1.1" 404 49\n',
  timestamp: '27/Aug/2022:01:19:06 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:19:07 +0000] "GET /docs/favicon-32x32.png HTTP/1.1" 200 628\n',
  timestamp: '27/Aug/2022:01:19:07 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:19:37 +0000] "GET /docs/ HTTP/1.1" 200 3044\n',
  timestamp: '27/Aug/2022:01:19:37 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:19:37 +0000] "GET /docs/swagger-ui.css HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:19:37 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:19:37 +0000] "GET /docs/swagger-ui-bundle.js HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:19:37 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:19:37 +0000] "GET /docs/swagger-ui-standalone-preset.js HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:19:37 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:19:37 +0000] "GET /docs/swagger-ui-init.js HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:19:37 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:19:37 +0000] "GET / HTTP/1.1" 404 49\n',
  timestamp: '27/Aug/2022:01:19:37 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:19:37 +0000] "GET /docs/favicon-32x32.png HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:19:37 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:22:26 +0000] "GET /docs/ HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:22:26 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:22:26 +0000] "GET /docs/swagger-ui.css HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:22:26 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:22:26 +0000] "GET /docs/swagger-ui-bundle.js HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:22:26 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:22:26 +0000] "GET /docs/swagger-ui-init.js HTTP/1.1" 200 1170\n',
  timestamp: '27/Aug/2022:01:22:26 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:22:26 +0000] "GET /docs/swagger-ui-standalone-preset.js HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:22:26 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:22:26 +0000] "GET /docs/favicon-32x32.png HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:22:26 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:28:50 +0000] "GET /docs/ HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:28:50 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:28:50 +0000] "GET /docs/swagger-ui.css HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:28:50 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:28:50 +0000] "GET /docs/swagger-ui-bundle.js HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:28:50 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:28:50 +0000] "GET /docs/swagger-ui-init.js HTTP/1.1" 200 1383\n',
  timestamp: '27/Aug/2022:01:28:50 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:28:50 +0000] "GET /docs/swagger-ui-standalone-preset.js HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:28:50 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:28:50 +0000] "GET /docs/favicon-32x32.png HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:28:50 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:31:09 +0000] "GET /docs/ HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:31:09 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:31:09 +0000] "GET /docs/swagger-ui.css HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:31:09 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:31:09 +0000] "GET /docs/swagger-ui-bundle.js HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:31:09 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:31:09 +0000] "GET /docs/swagger-ui-init.js HTTP/1.1" 200 1424\n',
  timestamp: '27/Aug/2022:01:31:09 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:31:09 +0000] "GET /docs/swagger-ui-standalone-preset.js HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:31:09 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:31:09 +0000] "GET /docs/favicon-32x32.png HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:31:09 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:35:14 +0000] "GET /docs/ HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:35:14 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:35:14 +0000] "GET /docs/swagger-ui.css HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:35:14 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:35:14 +0000] "GET /docs/swagger-ui-bundle.js HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:35:14 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:35:14 +0000] "GET /docs/swagger-ui-init.js HTTP/1.1" 200 1962\n',
  timestamp: '27/Aug/2022:01:35:14 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:35:14 +0000] "GET /docs/swagger-ui-standalone-preset.js HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:35:14 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:35:14 +0000] "GET /docs/favicon-32x32.png HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:35:14 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:39:14 +0000] "GET /docs/ HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:39:14 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:39:14 +0000] "GET /docs/swagger-ui.css HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:39:14 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:39:14 +0000] "GET /docs/swagger-ui-bundle.js HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:39:14 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:39:14 +0000] "GET /docs/swagger-ui-init.js HTTP/1.1" 200 2755\n',
  timestamp: '27/Aug/2022:01:39:14 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:39:14 +0000] "GET /docs/swagger-ui-standalone-preset.js HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:39:14 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:39:14 +0000] "GET /docs/favicon-32x32.png HTTP/1.1" 304 -\n',
  timestamp: '27/Aug/2022:01:39:14 +0800'
}
{
  level: 'access',
  message: '::1 - [26/Aug/2022:17:39:19 +0000] "GET /api/v1/products HTTP/1.1" 200 3336\n',
  timestamp: '27/Aug/2022:01:39:19 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:19:21 +0000] "DELETE /api/v1/products/20 HTTP/1.1" 404 48\n',
  timestamp: '27/Aug/2022:10:19:21 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:21:02 +0000] "PATCH /api/v1/products/20 HTTP/1.1" 404 48\n',
  timestamp: '27/Aug/2022:10:21:02 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:21:06 +0000] "PUT /api/v1/products/ HTTP/1.1" 404 49\n',
  timestamp: '27/Aug/2022:10:21:06 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:21:08 +0000] "PUT /api/v1/products/20 HTTP/1.1" 200 282\n',
  timestamp: '27/Aug/2022:10:21:08 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:21:25 +0000] "PUT /api/v1/products/20 HTTP/1.1" 200 282\n',
  timestamp: '27/Aug/2022:10:21:25 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:21:27 +0000] "PUT /api/v1/products/20 HTTP/1.1" 200 284\n',
  timestamp: '27/Aug/2022:10:21:27 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:22:24 +0000] "GET /api/v1/products?limit=1 HTTP/1.1" 200 397\n',
  timestamp: '27/Aug/2022:10:22:24 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:22:26 +0000] "GET /api/v1/products/1 HTTP/1.1" 200 394\n',
  timestamp: '27/Aug/2022:10:22:26 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:22:28 +0000] "GET /api/v1/products/21 HTTP/1.1" 404 48\n',
  timestamp: '27/Aug/2022:10:22:28 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:22:29 +0000] "GET /api/v1/products/20 HTTP/1.1" 200 255\n',
  timestamp: '27/Aug/2022:10:22:29 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:22:33 +0000] "POST /api/v1/products HTTP/1.1" 200 280\n',
  timestamp: '27/Aug/2022:10:22:33 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:23:51 +0000] "GET /api/v1/products/20 HTTP/1.1" 200 255\n',
  timestamp: '27/Aug/2022:10:23:51 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:24:12 +0000] "DELETE /api/v1/products/20 HTTP/1.1" 200 283\n',
  timestamp: '27/Aug/2022:10:24:12 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:24:14 +0000] "DELETE /api/v1/products/20 HTTP/1.1" 404 48\n',
  timestamp: '27/Aug/2022:10:24:14 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:24:14 +0000] "DELETE /api/v1/products/20 HTTP/1.1" 404 48\n',
  timestamp: '27/Aug/2022:10:24:14 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:24:16 +0000] "PUT /api/v1/products/20 HTTP/1.1" 200 282\n',
  timestamp: '27/Aug/2022:10:24:16 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:24:17 +0000] "PUT /api/v1/products/20 HTTP/1.1" 200 281\n',
  timestamp: '27/Aug/2022:10:24:17 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:24:18 +0000] "PUT /api/v1/products/20 HTTP/1.1" 200 282\n',
  timestamp: '27/Aug/2022:10:24:18 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:24:20 +0000] "PATCH /api/v1/products/20 HTTP/1.1" 200 280\n',
  timestamp: '27/Aug/2022:10:24:20 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:24:20 +0000] "PATCH /api/v1/products/20 HTTP/1.1" 200 280\n',
  timestamp: '27/Aug/2022:10:24:20 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:24:22 +0000] "POST /api/v1/products HTTP/1.1" 200 279\n',
  timestamp: '27/Aug/2022:10:24:22 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:24:23 +0000] "POST /api/v1/products HTTP/1.1" 200 284\n',
  timestamp: '27/Aug/2022:10:24:23 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:24:26 +0000] "PUT /api/v1/products/2213 HTTP/1.1" 200 289\n',
  timestamp: '27/Aug/2022:10:24:26 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:24:30 +0000] "POST /api/v1/products HTTP/1.1" 200 281\n',
  timestamp: '27/Aug/2022:10:24:30 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:24:31 +0000] "POST /api/v1/products HTTP/1.1" 200 284\n',
  timestamp: '27/Aug/2022:10:24:31 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:26:12 +0000] "GET /api/v1/carts HTTP/1.1" 200 12\n',
  timestamp: '27/Aug/2022:10:26:12 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:35:43 +0000] "GET /api/v1/carts/relations HTTP/1.1" 200 12\n',
  timestamp: '27/Aug/2022:10:35:43 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:35:50 +0000] "POST /api/v1/carts HTTP/1.1" 400 173\n',
  timestamp: '27/Aug/2022:10:35:50 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:35:58 +0000] "POST /api/v1/carts HTTP/1.1" 400 173\n',
  timestamp: '27/Aug/2022:10:35:58 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:36:38 +0000] "POST /api/v1/carts HTTP/1.1" 400 318\n',
  timestamp: '27/Aug/2022:10:36:38 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:36:40 +0000] "POST /api/v1/carts HTTP/1.1" 400 173\n',
  timestamp: '27/Aug/2022:10:36:40 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:36:42 +0000] "POST /api/v1/carts HTTP/1.1" 400 173\n',
  timestamp: '27/Aug/2022:10:36:42 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:36:43 +0000] "POST /api/v1/carts HTTP/1.1" 400 173\n',
  timestamp: '27/Aug/2022:10:36:43 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:36:46 +0000] "POST /api/v1/carts HTTP/1.1" 400 264\n',
  timestamp: '27/Aug/2022:10:36:46 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:36:50 +0000] "POST /api/v1/carts HTTP/1.1" 400 173\n',
  timestamp: '27/Aug/2022:10:36:50 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:36:56 +0000] "POST /api/v1/carts HTTP/1.1" 400 173\n',
  timestamp: '27/Aug/2022:10:36:56 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:36:57 +0000] "POST /api/v1/carts HTTP/1.1" 400 173\n',
  timestamp: '27/Aug/2022:10:36:57 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:36:59 +0000] "POST /api/v1/carts HTTP/1.1" 400 93\n',
  timestamp: '27/Aug/2022:10:36:59 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:37:08 +0000] "POST /api/v1/carts HTTP/1.1" 400 93\n',
  timestamp: '27/Aug/2022:10:37:08 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:37:09 +0000] "POST /api/v1/carts HTTP/1.1" 400 194\n',
  timestamp: '27/Aug/2022:10:37:09 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:38:08 +0000] "POST /api/v1/carts HTTP/1.1" 400 135\n',
  timestamp: '27/Aug/2022:10:38:08 +0800'
}
{
  request: {
    method: 'POST',
    url: '/api/v1/carts',
    remoteAddress: '::1',
    body: { userId: 12 }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.cart.create()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\carts\\carts.controller.ts:58:36\n' +
    '\n' +
    "   55 '/',\n" +
    '   56 validateSchema(CreateCartSchema),\n' +
    '   57 asyncHandler(async (req, res) => {\n' +
    '→  58   const cart = await prisma.cart.create({\n' +
    '          data: {\n' +
    '            userId: 12\n' +
    '          },\n' +
    '          include: {\n' +
    '        ?   user?: true,\n' +
    '        ?   cartItems?: true,\n' +
    '        ?   updatedBy?: true,\n' +
    '        ?   _count?: true\n' +
    '          }\n' +
    '        })\n' +
    '\n' +
    '\n' +
    'The `include` statement for type Cart must not be empty. Available options are listed in green.\n',
  timestamp: '27/Aug/2022:10:38:10 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:38:10 +0000] "POST /api/v1/carts HTTP/1.1" 500 52\n',
  timestamp: '27/Aug/2022:10:38:10 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:38:31 +0000] "GET /api/v1/carts HTTP/1.1" 200 12\n',
  timestamp: '27/Aug/2022:10:38:31 +0800'
}
{
  request: {
    method: 'POST',
    url: '/api/v1/carts',
    remoteAddress: '::1',
    body: { userId: 12 }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.cart.create()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\carts\\carts.controller.ts:58:36\n' +
    '\n' +
    "   55 '/',\n" +
    '   56 validateSchema(CreateCartSchema),\n' +
    '   57 asyncHandler(async (req, res) => {\n' +
    '→  58   const cart = await prisma.cart.create({\n' +
    '          data: {\n' +
    '            userId: 12,\n' +
    '            ~~~~~~\n' +
    '        +   totalPrice: Float,\n' +
    '        +   totalQuantity: Int,\n' +
    '        +   user: {\n' +
    '        +     create?: UserCreateWithoutCartInput | UserUncheckedCreateWithoutCartInput,\n' +
    '        +     connectOrCreate?: UserCreateOrConnectWithoutCartInput,\n' +
    '        +     connect?: UserWhereUniqueInput\n' +
    '        +   },\n' +
    '        ?   cartItems?: {\n' +
    '        ?     create?: CartItemCreateWithoutCartInput | CartItemCreateWithoutCartInput | CartItemUncheckedCreateWithoutCartInput | CartItemUncheckedCreateWithoutCartInput,\n' +
    '        ?     connectOrCreate?: CartItemCreateOrConnectWithoutCartInput | CartItemCreateOrConnectWithoutCartInput,\n' +
    '        ?     createMany?: CartItemCreateManyCartInputEnvelope,\n' +
    '        ?     connect?: CartItemWhereUniqueInput | CartItemWhereUniqueInput\n' +
    '        ?   },\n' +
    '        ?   createdAt?: DateTime,\n' +
    '        ?   updatedAt?: DateTime,\n' +
    '        ?   updatedBy?: {\n' +
    '        ?     create?: UserCreateWithoutUpdatedCartsInput | UserUncheckedCreateWithoutUpdatedCartsInput,\n' +
    '        ?     connectOrCreate?: UserCreateOrConnectWithoutUpdatedCartsInput,\n' +
    '        ?     connect?: UserWhereUniqueInput\n' +
    '        ?   }\n' +
    '          }\n' +
    '        })\n' +
    '\n' +
    'Unknown arg `userId` in data.userId for type CartCreateInput. Did you mean `user`?\n' +
    'Argument totalPrice for data.totalPrice is missing.\n' +
    'Argument totalQuantity for data.totalQuantity is missing.\n' +
    'Argument user for data.user is missing.\n' +
    '\n' +
    'Note: Lines with + are required, lines with ? are optional.\n',
  timestamp: '27/Aug/2022:10:38:33 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:38:33 +0000] "POST /api/v1/carts HTTP/1.1" 500 52\n',
  timestamp: '27/Aug/2022:10:38:33 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:43:05 +0000] "POST /api/v1/carts HTTP/1.1" 400 135\n',
  timestamp: '27/Aug/2022:10:43:05 +0800'
}
{
  request: {
    method: 'POST',
    url: '/api/v1/carts',
    remoteAddress: '::1',
    body: { userId: 1 }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.cart.create()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\carts\\carts.controller.ts:59:36\n' +
    '\n' +
    '   56 validateSchema(CreateCartSchema),\n' +
    '   57 asyncHandler(async (req, res) => {\n' +
    '   58   const userId = Number(req.body.userId);\n' +
    '→  59   const cart = await prisma.cart.create({\n' +
    '          data: {\n' +
    '            userId: 1,\n' +
    '            ~~~~~~\n' +
    '            user: {\n' +
    '              connect: {\n' +
    '                id: 1\n' +
    '              }\n' +
    '            },\n' +
    '        +   totalPrice: Float,\n' +
    '        +   totalQuantity: Int,\n' +
    '        ?   cartItems?: {\n' +
    '        ?     create?: CartItemCreateWithoutCartInput | CartItemCreateWithoutCartInput | CartItemUncheckedCreateWithoutCartInput | CartItemUncheckedCreateWithoutCartInput,\n' +
    '        ?     connectOrCreate?: CartItemCreateOrConnectWithoutCartInput | CartItemCreateOrConnectWithoutCartInput,\n' +
    '        ?     createMany?: CartItemCreateManyCartInputEnvelope,\n' +
    '        ?     connect?: CartItemWhereUniqueInput | CartItemWhereUniqueInput\n' +
    '        ?   },\n' +
    '        ?   createdAt?: DateTime,\n' +
    '        ?   updatedAt?: DateTime,\n' +
    '        ?   updatedBy?: {\n' +
    '        ?     create?: UserCreateWithoutUpdatedCartsInput | UserUncheckedCreateWithoutUpdatedCartsInput,\n' +
    '        ?     connectOrCreate?: UserCreateOrConnectWithoutUpdatedCartsInput,\n' +
    '        ?     connect?: UserWhereUniqueInput\n' +
    '        ?   }\n' +
    '          }\n' +
    '        })\n' +
    '\n' +
    'Unknown arg `userId` in data.userId for type CartCreateInput. Did you mean `user`?\n' +
    'Argument totalPrice for data.totalPrice is missing.\n' +
    'Argument totalQuantity for data.totalQuantity is missing.\n' +
    '\n' +
    'Note: Lines with + are required, lines with ? are optional.\n',
  timestamp: '27/Aug/2022:10:43:08 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:43:08 +0000] "POST /api/v1/carts HTTP/1.1" 500 52\n',
  timestamp: '27/Aug/2022:10:43:08 +0800'
}
{
  request: {
    method: 'POST',
    url: '/api/v1/carts',
    remoteAddress: '::1',
    body: { userId: 1 }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.cart.create()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\carts\\carts.controller.ts:59:36\n' +
    '\n' +
    '   56 validateSchema(CreateCartSchema),\n' +
    '   57 asyncHandler(async (req, res) => {\n' +
    '   58   const { userId, ...rest } = req.body;\n' +
    '→  59   const cart = await prisma.cart.create({\n' +
    '          data: {\n' +
    '            user: {\n' +
    '              connect: {\n' +
    '                id: 1\n' +
    '              }\n' +
    '            },\n' +
    '        +   totalPrice: Float,\n' +
    '        +   totalQuantity: Int,\n' +
    '        ?   cartItems?: {\n' +
    '        ?     create?: CartItemCreateWithoutCartInput | CartItemCreateWithoutCartInput | CartItemUncheckedCreateWithoutCartInput | CartItemUncheckedCreateWithoutCartInput,\n' +
    '        ?     connectOrCreate?: CartItemCreateOrConnectWithoutCartInput | CartItemCreateOrConnectWithoutCartInput,\n' +
    '        ?     createMany?: CartItemCreateManyCartInputEnvelope,\n' +
    '        ?     connect?: CartItemWhereUniqueInput | CartItemWhereUniqueInput\n' +
    '        ?   },\n' +
    '        ?   createdAt?: DateTime,\n' +
    '        ?   updatedAt?: DateTime,\n' +
    '        ?   updatedBy?: {\n' +
    '        ?     create?: UserCreateWithoutUpdatedCartsInput | UserUncheckedCreateWithoutUpdatedCartsInput,\n' +
    '        ?     connectOrCreate?: UserCreateOrConnectWithoutUpdatedCartsInput,\n' +
    '        ?     connect?: UserWhereUniqueInput\n' +
    '        ?   }\n' +
    '          }\n' +
    '        })\n' +
    '\n' +
    'Argument totalPrice for data.totalPrice is missing.\n' +
    'Argument totalQuantity for data.totalQuantity is missing.\n' +
    '\n' +
    'Note: Lines with + are required, lines with ? are optional.\n',
  timestamp: '27/Aug/2022:10:44:16 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:44:16 +0000] "POST /api/v1/carts HTTP/1.1" 500 52\n',
  timestamp: '27/Aug/2022:10:44:16 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:44:41 +0000] "POST /api/v1/carts HTTP/1.1" 200 187\n',
  timestamp: '27/Aug/2022:10:44:41 +0800'
}
{
  request: {
    method: 'POST',
    url: '/api/v1/carts',
    remoteAddress: '::1',
    body: { userId: 1 }
  },
  level: 'error',
  message: '\n' +
    'Invalid `prisma.cart.create()` invocation in\n' +
    'A:\\Projects\\Backend\\express-ecommerce\\src\\modules\\carts\\carts.controller.ts:59:36\n' +
    '\n' +
    '   56 validateSchema(CreateCartSchema),\n' +
    '   57 asyncHandler(async (req, res) => {\n' +
    '   58   const { userId, ...rest } = req.body;\n' +
    '→  59   const cart = await prisma.cart.create(\n' +
    "  The change you are trying to make would violate the required relation 'CartToUser' between the `Cart` and `User` models.",
  timestamp: '27/Aug/2022:10:45:01 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:45:01 +0000] "POST /api/v1/carts HTTP/1.1" 500 52\n',
  timestamp: '27/Aug/2022:10:45:01 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:45:42 +0000] "POST /api/v1/carts HTTP/1.1" 400 135\n',
  timestamp: '27/Aug/2022:10:45:42 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:45:43 +0000] "POST /api/v1/carts HTTP/1.1" 400 135\n',
  timestamp: '27/Aug/2022:10:45:43 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:45:46 +0000] "POST /api/v1/carts HTTP/1.1" 400 135\n',
  timestamp: '27/Aug/2022:10:45:46 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:45:48 +0000] "POST /api/v1/carts HTTP/1.1" 200 187\n',
  timestamp: '27/Aug/2022:10:45:48 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:45:49 +0000] "POST /api/v1/carts HTTP/1.1" 400 135\n',
  timestamp: '27/Aug/2022:10:45:49 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:45:53 +0000] "GET /api/v1/carts/relations HTTP/1.1" 200 924\n',
  timestamp: '27/Aug/2022:10:45:53 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:45:55 +0000] "GET /api/v1/carts HTTP/1.1" 200 319\n',
  timestamp: '27/Aug/2022:10:45:55 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:46:08 +0000] "GET /api/v1/carts/3 HTTP/1.1" 404 45\n',
  timestamp: '27/Aug/2022:10:46:08 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:46:10 +0000] "GET /api/v1/carts/1 HTTP/1.1" 200 162\n',
  timestamp: '27/Aug/2022:10:46:10 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:46:31 +0000] "GET /api/v1/carts/1 HTTP/1.1" 200 162\n',
  timestamp: '27/Aug/2022:10:46:31 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:46:38 +0000] "GET /api/v1/carts/1/relations HTTP/1.1" 200 464\n',
  timestamp: '27/Aug/2022:10:46:38 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:47:55 +0000] "GET /api/v1/carts HTTP/1.1" 200 319\n',
  timestamp: '27/Aug/2022:10:47:55 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:47:58 +0000] "GET /api/v1/carts/relations HTTP/1.1" 400 50\n',
  timestamp: '27/Aug/2022:10:47:58 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:48:06 +0000] "GET /api/v1/carts/items HTTP/1.1" 200 924\n',
  timestamp: '27/Aug/2022:10:48:06 +0800'
}
{
  level: 'access',
  message: '::1 - [27/Aug/2022:14:48:13 +0000] "GET /api/v1/carts/items HTTP/1.1" 200 349\n',
  timestamp: '27/Aug/2022:10:48:13 +0800'
}
{
  level: 'access',
  message: '::1 - [09/Sep/2022:01:03:00 +0000] "GET /api/v1/carts HTTP/1.1" 200 319\n',
  timestamp: '09/Sep/2022:09:03:00 +0800'
}
