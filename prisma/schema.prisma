// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  email    String @unique
  username String
  password String
  role     Role   @default(user)

  profile Profile?
  cart    CartItem[]
  orders  Order[]
}

enum Role {
  admin
  user
  staff
}

model Profile {
  id Int @id @default(autoincrement())

  userId    Int     @unique
  firstName String?
  lastName  String?
  imageUrl  String?
  bio       String? @db.VarChar(500)

  user User @relation(fields: [userId], references: [id])
}

model Product {
  id Int @id @default(autoincrement())

  name        String
  description String @db.VarChar(500)
  imageUrl    String
  price       Float
  quantity    Int

  cartItems CartItem[]
  order     OrderItem[]
}

model CartItem {
  id Int @id @default(autoincrement())

  productId Int
  userId    Int
  quantity  Int

  product Product @relation(fields: [productId], references: [id])
  user    User    @relation(fields: [userId], references: [id])
}

model Order {
  id Int @id @default(autoincrement())

  userId      Int
  orderStatus OrderStatus @default(processing)
  dateCreated DateTime    @default(now())

  user       User        @relation(fields: [userId], references: [id])
  orderItems OrderItem[]
}

enum OrderStatus {
  processing // payment received, order being processed/packed
  shipped // order packed and shipped
  delivered
  cancelled
}

model OrderItem {
  id Int @id @default(autoincrement())

  productId Int
  orderId   Int
  quantity  Int @default(1)

  product Product @relation(fields: [productId], references: [id])
  order   Order   @relation(fields: [orderId], references: [id])
}
